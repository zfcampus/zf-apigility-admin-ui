!function(){"use strict";angular.module("ag-admin",["ui.bootstrap","ui.router","ngSanitize","ngTagsInput","angular-flash.service","angular-flash.flash-alert-directive","ui.sortable","ui.select2","toggle-switch","templates-main"]).config(["$provide","$stateProvider","$urlRouterProvider",function(a,b,c){a.value("apiBasePath",angular.element("body").data("api-base-path")||"/admin/api"),b.state("ag",{"abstract":!0,views:{breadcrumbs:{templateUrl:"html/breadcrumbs.html",controller:["$rootScope","$scope","$state",function(a,b,c){b.breadcrumbs=[];var d={title:"Home",href:"ag.dashboard",active:!1},e=function(a){if(!a.url||!a.data)return!1;if(!a.data.pageTitle&&!a.data.breadcrumb)return!1;var b="";"string"==typeof a.data.breadcrumb?b=a.data.breadcrumb:"function"==typeof a.data.breadcrumb?b=a.data.breadcrumb(c.params):a.data.pageTitle&&(b=a.data.pageTitle);var d={title:b,href:a.name,active:!1};return d},f=function(){for(var a=[],f=c.$current.name,g=c.$current;"ag"!==g.name;){var h=e(g);if(h&&(g.name===f&&(h.active=!0),a.unshift(h)),!g.parent)break;g=g.parent}a.unshift(d);var i=[];a=a.filter(function(a){return-1===i.lastIndexOf(a.href)?(i.push(a.href),!0):!1}),b.breadcrumbs=a,b.params=c.params};a.$on("$stateChangeSuccess",f),f()}]},title:{template:'<h1 ng-bind="pageTitle"></h1>',controller:["$rootScope","$scope","$state",function(a,b,c){var d=function(a,d){if(a!==d&&d){var e;c.current&&c.current.data&&c.current.data.pageTitle&&("string"==typeof c.current.data.pageTitle?e=c.current.data.pageTitle:"function"==typeof c.current.data.pageTitle&&(e=c.current.data.pageTitle(c.params))),b.pageTitle=e}};a.$on("$stateChangeSuccess",function(){d(null,c.$current.name)}),d(null,c)}]},sidebar:{templateUrl:"html/settings/sidebar.html",controller:["$scope","$state",function(a,b){var c=function(){a.active=b.current.name};a.$watch(function(){return b.current.name},c),c()}]}}}),b.state("ag.dashboard",{url:"/",data:{pageTitle:"Apigility"},resolve:{dashboard:["DashboardRepository",function(a){return a.fetch()}]},views:{"content@":{templateUrl:"html/index.html",controller:"DashboardController"}}}),b.state("ag.settings",{"abstract":!0,url:"/settings"}),b.state("ag.settings.overview",{url:"/overview",data:{pageTitle:"Settings"},resolve:{dashboard:["SettingsDashboardRepository",function(a){return a.fetch()}]},views:{"content@":{templateUrl:"html/settings/dashboard.html",controller:"SettingsDashboardController"}}}),b.state("ag.settings.authentication",{url:"/authentication?edit",data:{pageTitle:"Authentication"},views:{"content@":{templateUrl:"html/settings/authentication/index.html",controller:"AuthenticationController"}}}),b.state("ag.settings.content-negotiation",{url:"/content-negotiation?selector&edit",data:{pageTitle:"Content Negotiation"},resolve:{selectors:["ContentNegotiationResource",function(a){return a.getList()}]},views:{"content@":{templateUrl:"html/settings/content-negotiation/index.html",controller:"ContentNegotiationController"}}}),b.state("ag.settings.db-adapters",{url:"/db-adapters?adapter&edit",data:{pageTitle:"Database Adapters"},resolve:{dbAdapters:["DbAdapterResource",function(a){return a.getList()}]},views:{"content@":{templateUrl:"html/settings/db-adapters/index.html",controller:"DbAdapterController"}}}),b.state("ag.settings.doctrine-adapters",{url:"/doctrine-adapters?adapter&edit",data:{pageTitle:"Doctrine Adapters"},resolve:{doctrineAdapters:["DoctrineAdapterResource",function(a){return a.getList()}]},views:{"content@":{templateUrl:"html/settings/doctrine-adapters/index.html",controller:"DoctrineAdapterController"}}}),b.state("ag.api",{url:"/api",data:{pageTitle:"APIs"},views:{"content@":{templateUrl:"html/api/index.html",controller:"ApiController"},"sidebar@":{templateUrl:"html/api/index-sidebar.html",controller:"CreateApiButtonController"}}}),b.state("ag.api.version",{url:"/:apiName/v:version",data:{pageTitle:function(a){return a.apiName+" (v"+a.version+")"},breadcrumb:function(a){return a.apiName+" (v"+a.version+")"}},resolve:{api:["$stateParams","ApiRepository",function(a,b){return b.getApi(a.apiName,a.version,!0)}],filters:["FiltersServicesRepository",function(a){return a.getList()}],validators:["ValidatorsServicesRepository",function(a){return a.getList()}],selectors:["ContentNegotiationResource",function(a){return a.getList().then(function(a){var b=[];return angular.forEach(a,function(a){b.push(a.content_name)}),b})}]},views:{"content@":{templateUrl:"html/api/overview.html",controller:"ApiOverviewController"},"sidebar@":{templateUrl:"html/api/sidebar.html",controller:["$scope","$state",function(a,b){var c=function(){a.active=b.current.name};a.$watch(function(){return b.current.name},c),c()}]}}}),b.state("ag.api.version.authorization",{url:"/authorization",data:{pageTitle:"Authorization",breadcrumb:!1},resolve:{apiAuthorizations:["$stateParams","ApiAuthorizationRepository",function(a,b){return b.getApiAuthorization(a.apiName,a.version,!0)}],authentication:["AuthenticationRepository",function(a){return a.hasAuthentication()}]},views:{"content@":{templateUrl:"html/api/authorization.html",controller:"ApiAuthorizationController"}}}),b.state("ag.api.version.rest",{url:"/rest-services?service&view&edit",data:{pageTitle:"REST Services",breadcrumb:!1},resolve:{dbAdapters:["DbAdapterResource",function(a){return a.getList()}],doctrineAdapters:["DoctrineAdapterResource",function(a){return a.getList()}],hydrators:["HydratorServicesRepository",function(a){return a.getList()}]},views:{"content@":{templateUrl:"html/api/rest-services/index.html",controller:"ApiRestServicesController"}}}),b.state("ag.api.version.rpc",{url:"/rpc-services?service&view&edit",data:{pageTitle:"RPC Services",breadcrumb:!1},views:{"content@":{templateUrl:"html/api/rpc-services/index.html",controller:"ApiRpcServicesController"}}}),c.otherwise("/")}])}(),function(){"use strict";angular.module("ag-admin").controller("agCacheModal",["$modal","CacheEnabledResource",function(a,b){b.getCacheStatus().then(function(b){b&&a.open({templateUrl:"html/modals/cache-check.html",keyboard:!1,backdrop:"static"})})}])}(),function(){"use strict";angular.module("ag-admin").controller("agFsPermsModal",["$modal","FsPermsResource",function(a,b){b.getFsPermsStatus().then(function(b){if(!b.fs_perms){var c=b.www_user;a.open({templateUrl:"html/modals/fs-perms.html",controller:function(a){a.user=c},keyboard:!1,backdrop:"static"})}})}])}(),function(){"use strict";angular.module("ag-admin").controller("ApiController",["$scope","ApiRepository",function(a,b){a.apiList=[];var c=function(b){var c=[];angular.forEach(b,function(a){var b=a.default_version;a.versions.length>0&&(b=a.versions.pop()),c.push({apiName:a.name,version:b})}),a.apiList=c};a.$on("api.updateList",function(){b.getList(!0).then(function(a){c(a)})}),b.getList().then(function(a){c(a)})}])}(),function(a){"use strict";angular.module("ag-admin").controller("ApiAuthorizationController",["$scope","$stateParams","flash","api","apiAuthorizations","authentication","ApiAuthorizationRepository","agFormHandler",function(b,c,d,e,f,g,h,i){b.api=e,b.apiAuthorizations=f,b.authentication=g;var j=c.version.match(/\d/g)[0]||1;b.editable=j==e.versions[e.versions.length-1];var k=function(){var a=new RegExp("-","g"),b={};return angular.forEach(e.restServices,function(c){var d=c.controller_service_name.replace(a,"\\"),e=d+"::__entity__",f=d+"::__collection__",g={GET:!1,POST:!1,PUT:!1,PATCH:!1,DELETE:!1},h={GET:!1,POST:!1,PUT:!1,PATCH:!1,DELETE:!1};angular.forEach(c.entity_http_methods,function(a){g[a]=!0}),angular.forEach(c.collection_http_methods,function(a){h[a]=!0}),b[e]=g,b[f]=h}),angular.forEach(e.rpcServices,function(c){var d=c.controller_service_name.replace(a,"\\"),e={GET:!1,POST:!1,PUT:!1,PATCH:!1,DELETE:!1};angular.forEach(c.http_methods,function(a){e[a]=!0}),b[d]=e}),b}();b.isEditable=function(a,c){if(!b.editable)return!1;if(!k.hasOwnProperty(a)){var d=a.split("::"),e=d[0];if(!k.hasOwnProperty(e))return!1;a=e}return k[a][c]},b.saveAuthorization=function(){h.saveApiAuthorizations(c.apiName,b.apiAuthorizations).then(function(){i.resetForm(b),d.success="Authorization settings saved"}).catch(function(a){i.reportError(a,b)})},b.updateColumn=function(a,c){angular.forEach(b.apiAuthorizations,function(d,e){b.isEditable(e,c)&&(b.apiAuthorizations[e][c]=a.target.checked)})},b.updateRow=function(c,d){a.forEach(["GET","POST","PUT","PATCH","DELETE"],function(a){b.isEditable(d,a)&&(b.apiAuthorizations[d][a]=c.target.checked)})},b.showTopSaveButton=function(){return Object.keys(f).length>10}}])}(_),function(){"use strict";angular.module("ag-admin").controller("CreateApiController",["$scope","$modalInstance","$rootScope","$state","$timeout","flash","ApiRepository","agFormHandler",function(a,b,c,d,e,f,g,h){a.apiName="";var i=function(){h.resetForm(a),a.apiName=""};a.createNewApi=function(j){var k=angular.element(j.target);k.find("input").attr("disabled",!0),k.find("button").attr("disabled",!0),k.find(".ag-validation-error").remove(),g.createNewApi(a.$$childTail.apiName).then(function(a){b.close(a),i(),f.success="New API is being created... Please wait",e(function(){c.$broadcast("api.updateList"),d.go("ag.api.version",{apiName:a.name,version:1})},2e3)}).catch(function(b){h.reportError(b,a)})},a.cancel=function(){i(),b.dismiss()}}])}(),function(){"use strict";angular.module("ag-admin").controller("CreateApiButtonController",["$scope","$modal",function(a,b){a.dialog=function(){b.open({templateUrl:"html/modals/create-api-form.html",keyboard:!0,controller:"CreateApiController"})}}])}(),function(a){"use strict";angular.module("ag-admin").controller("ApiDocumentationController",["$scope","$state","$stateParams","flash","ApiRepository","ApiAuthorizationRepository","agFormHandler",function(b,c,d,e,f,g,h){var i=d.apiName,j=d.version,k={};b.service="undefined"!=typeof b.$parent.restService?b.$parent.restService:b.$parent.rpcService,b.authorizations={},"undefined"!=typeof b.$parent.restService?("undefined"==typeof b.service.documentation&&(b.service.documentation={}),Array.isArray(b.service.documentation)&&(k={},a.forEach(b.service.documentation,function(a,b){k[b]=a}),b.service.documentation=k),"undefined"==typeof b.service.documentation.collection&&(b.service.documentation.collection={}),a.forEach(b.service.collection_http_methods,function(a){"undefined"==typeof b.service.documentation.collection[a]&&(b.service.documentation.collection[a]={description:null,request:null,response:null})}),"undefined"==typeof b.service.documentation.entity&&(b.service.documentation.entity={}),a.forEach(b.service.entity_http_methods,function(a){"undefined"==typeof b.service.documentation.entity[a]&&(b.service.documentation.entity[a]={description:null,request:null,response:null})})):("undefined"==typeof b.service.documentation&&(b.service.documentation={}),Array.isArray(b.service.documentation)&&(k={},a.forEach(b.service.documentation,function(a,b){k[b]=a}),b.service.documentation=k),a.forEach(b.service.http_methods,function(a){"undefined"==typeof b.service.documentation[a]&&(b.service.documentation[a]={description:null,request:null,response:null})})),g.getServiceAuthorizations(b.service,i,j).then(function(a){b.authorizations=a}),b.requiresAuthorization=function(a,c){var d=b.authorizations;return"entity"==c||"collection"==c?d.hasOwnProperty(c)&&d[c].hasOwnProperty(a)?d[c][a]:!1:d.hasOwnProperty(a)?d[a]:!1};var l=function(a){return"object"==typeof a&&Array.isArray(a)?-1===a.lastIndexOf("application/hal+json")?!1:!0:!1},m=function(a){return new Array(4*a).join(" ")},n=function(a,b,c,d,e){return"collection"==e&&(b=b.replace(/\[[a-zA-Z0-9_\/:\-]+\]$/,"")),d&&(b+=d),m(c)+'"'+a+'": {\n'+m(c+1)+'"href": "'+b+'"\n'+m(c)+"}"},o=function(a,b){return m(b)+'"_links": {\n'+a.join(",\n")+"\n"+m(b)+"}\n"},p=function(a,b,c){var d=[n("self",b,5)],e=m(1)+'"_embedded": {\n'+m(2)+'"'+a+'": [\n'+m(3)+"{\n";return e+=o(d,4),e+=c.join(",\n")+"\n"+m(3)+"}\n"+m(2)+"]\n"+m(1)+"}"};b.generate=function(c,d,e,f){var g="",h=[],i=!1,j=[];if("response"==e&&b.service.accept_whitelist&&(i=l(b.service.accept_whitelist)),a.forEach(b.service.input_filter,function(a){h.push(m(1)+'"'+a.name+'": "'+(a.description||"")+'"')}),!i||"collection"==f&&"POST"!=d)if(i&&"collection"==f){var k=b.service.collection_name?b.service.collection_name:"items";a.forEach(h,function(a,b){h[b]=m(3)+a}),j.push(n("self",b.service.route_match,2,!1,"collection")),j.push(n("first",b.service.route_match,2,"?page={page}","collection")),j.push(n("prev",b.service.route_match,2,"?page={page}","collection")),j.push(n("next",b.service.route_match,2,"?page={page}","collection")),j.push(n("last",b.service.route_match,2,"?page={page}","collection")),g="{\n"+o(j,1)+p(k,b.service.route_match,h)+"\n}"}else g="{\n"+h.join(",\n")+"\n}";else j.push(n("self",b.service.route_match,2)),g="{\n"+o(j,1)+h.join(",\n")+"\n}";c[e]?c[e]+="\n"+g:c[e]=g},b.save=function(){Array.isArray(b.service.documentation)&&(k={},a.forEach(b.service.documentation,function(a,b){k[b]=a}),b.service.documentation=k),f.saveDocumentation(b.service).then(function(){h.resetForm(b),b.$parent.flash.success="Documentation saved.",c.go(c.$current.name,{edit:""},{reload:!0})}).catch(function(a){h.reportError(a,b)})}}])}(_),function(){"use strict";angular.module("ag-admin").controller("ApiOverviewController",["$scope","$state","$timeout","flash","ApiRepository",function(a,b,c,d,e){a.api={},a.defaultApiVersion=1,a.deleteApiPanelIsCollapsed=!0;var f=function(b){a.api=b,a.defaultApiVersion=b.default_version};a.setDefaultApiVersion=function(){d.info="Setting the default API version to "+a.defaultApiVersion,e.setDefaultApiVersion(a.api.name,a.defaultApiVersion).then(function(b){d.success="Default API version updated",a.defaultApiVersion=b.version})},a.$on("api.version.update",function(){e.getApi(b.params.apiName,b.params.version,!0).then(function(a){f(a)})}),a.removeApi=function(a){var f=b.params.apiName;e.removeApi(b.params.apiName,!!a).then(function(){d.success='API "'+f+'" is being deleted... Please wait',c(function(){b.go("^")},2e3)})},e.getApi(b.params.apiName,b.params.version).then(function(a){f(a)})}])}(),function(a){"use strict";angular.module("ag-admin").controller("ApiRestServicesController",["$scope","$state","$stateParams","$sce","$modal","$timeout","flash","filters","hydrators","validators","selectors","ApiRepository","api","dbAdapters","doctrineAdapters","toggleSelection","agFormHandler",function(b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){b.activeService=d.service?d.service:"",b.inEdit=!!d.edit,b.view=d.view?d.view:"settings",b.ApiRepository=m,b.flash=h,b.api=n,b.version=d.version,b.dbAdapters=o,b.doctrineAdapters=p,b.filterOptions=i,b.hydrators=j,b.validatorOptions=k,b.selectors=l,b.sourceCode=[],b.deleteRestService=!1,b.toggleSelection=q,b.newService={restServiceName:"",dbAdapterName:"",dbTableName:"",doctrineObjectManager:"",doctrineUseGeneratedHydrator:!0,doctrineHydrateByValue:!0,doctrineServiceName:"",doctrineEntityClass:"",doctrineHydratorStrategies:[]},b.resetForm=function(){r.resetForm(b),b.showNewRestServiceForm=!1,b.newService.restServiceName="",b.newService.dbAdapterName="",b.newService.dbTableName="",b.newService.doctrineObjectManager="",b.newService.doctrineUseGeneratedHydrator=!0,b.newService.doctrineServiceName="",b.newService.doctrineEntityClass="",b.newService.doctrineHydratorName=""},b.newService.action="plus",b.isLatestVersion=function(){return b.ApiRepository.isLatestVersion(b.api)},b.isLatestVersion()||(b.inEdit=!1,c.go(c.$current.name,{edit:""},{reload:!0})),b.toggleEditState=function(a,d){d=!!d,c.go(c.$current.name,{service:a,edit:d?!0:null},{notify:!1}),b.inEdit=d},b.isDbConnected=function(a){return"object"!=typeof a||"undefined"==typeof a?!1:a.hasOwnProperty("adapter_name")||a.hasOwnProperty("table_name")||a.hasOwnProperty("table_service")?!0:!1},b.isDoctrineConnected=function(a){return"object"!=typeof a||"undefined"==typeof a?!1:a.hasOwnProperty("object_manager")||a.hasOwnProperty("entity_class")?!0:!1},b.newService.createNewRestService=function(){var a=b.newService.restServiceName;m.createNewRestService(b.api.name,a).then(function(){h.success="New Code-Connected REST service created; please wait for the list to refresh",b.resetForm(),m.refreshApi(b,!0,"Finished reloading REST service list").then(function(){return g(function(){c.go(".",{service:a,view:"settings"},{reload:!0})},100)})}).catch(function(a){r.reportError(a,b)})},b.newService.createNewDbConnectedService=function(){var a=b.newService.dbTableName;m.createNewDbConnectedService(b.api.name,b.newService.dbAdapterName,a).then(function(){h.success="New DB-Connected REST service created; please wait for the list to refresh",b.resetForm(),m.refreshApi(b,!0,"Finished reloading REST service list").then(function(){return g(function(){c.go(".",{service:a,view:"settings"},{reload:!0})},100)})}).catch(function(a){r.reportError(a,b)})},b.newService.createNewDoctrineConnectedService=function(){var a=b.newService.doctrineServiceName,d=a.toLowerCase(),e=d+"_id";m.createNewDoctrineConnectedService(b.api.name,b.newService.doctrineObjectManager,b.newService.doctrineServiceName,b.newService.doctrineEntityClass,e,"id","/"+d,b.newService.doctrineHydrateByValue,b.newService.doctrineUseGeneratedHydrator,b.newService.doctrineHydratorName,b.newService.doctrineHydratorStrategies).then(function(){h.success="New Doctrine-Connected REST service created; please wait for the list to refresh",b.resetForm(),m.refreshApi(b,!0,"Finished reloading REST service list").then(function(){return g(function(){c.go(".",{service:a,view:"settings"},{reload:!0})},1500)})},function(a){r.reportError(a,b)})},b.newService.addStrategy=function(){b.newService.searching=!0,m.serviceExist(b.newService.newStrategy).then(function(a){b.newService.searching=!1;var c=a.data;c.exist=!!c.exist,1==c.exist?(b.newService.doctrineHydratorStrategies.push(b.newService.newStrategy),b.newService.newStrategy=""):h.error="This strategy is not declared in the service manager"})},b.newService.removeStrategy=function(a){b.newService.doctrineHydratorStrategies.splice(a,1)},b.editService={addStrategy:function(a){b.editService.searching=!0,m.serviceExist(b.editService.newStrategy).then(function(c){b.editService.searching=!1;var d=c.data;d.exist=!!d.exist,1==d.exist?(b.api.restServices[a].hydrator_strategies.push(b.editService.newStrategy),b.editService.newStrategy=""):h.error="This strategy is not declared in the service manager"})},removeStrategy:function(a,c){b.api.restServices[a].hydrator_strategies.splice(c,1)}},b.saveRestService=function(d){var e=a.clone(b.api.restServices[d]),f=b.isDoctrineConnected(e);m.saveRestService(b.api.name,e,f).then(function(){r.resetForm(b),h.success="REST Service updated",c.go(c.$current.name,{edit:null},{reload:!0})}).catch(function(a){r.reportError(a,b)})},b.removeRestService=function(a,c){var d=b.isDoctrineConnected(a);m.removeRestService(b.api.name,a.controller_service_name,!!c,d).then(function(){m.refreshApi(b,!0,"REST Service deleted"),b.deleteRestService=!1})},b.getSourceCode=function(a,c){m.getSourceCode(b.api.name,a).then(function(d){b.filename=a+".php",b.classType=c+" Class",b.sourceCode="string"==typeof d.source?e.trustAsHtml(d.source):"",f.open({scope:b,templateUrl:"html/modals/source-code.html"})})}}])}(_),function(a){"use strict";angular.module("ag-admin").controller("ApiRpcServicesController",["$scope","$state","$stateParams","$sce","$modal","$timeout","flash","filters","validators","selectors","ApiRepository","api","toggleSelection","agFormHandler",function(b,c,d,e,f,g,h,i,j,k,l,m,n,o){b.activeService=d.service?d.service:"",b.inEdit=!!d.edit,b.view=d.view?d.view:"settings",b.ApiRepository=l,b.flash=h,b.api=m,b.version=d.version,b.toggleSelection=n,b.filterOptions=i,b.validatorOptions=j,b.selectors=k,b.sourceCode=[],b.deleteRpcService=!1,b.resetForm=function(){o.resetForm(b),b.showNewRpcServiceForm=!1,b.rpcServiceName="",b.rpcServiceRoute=""},b.isLatestVersion=function(){return b.ApiRepository.isLatestVersion(b.api)},b.isLatestVersion()||(b.inEdit=!1,c.go(c.$current.name,{edit:""},{reload:!0})),b.toggleEditState=function(a,d){d=!!d,c.go(c.$current.name,{service:a,edit:d?!0:null},{notify:!1}),b.inEdit=d},b.createNewRpcService=function(){var a=b.rpcServiceName;l.createNewRpcService(b.api.name,a,b.rpcServiceRoute).then(function(){h.success="New RPC service created; please wait for the list to refresh",b.addRpcService=!1,b.resetForm(),l.refreshApi(b,!0,"Finished reloading RPC service list").then(function(){return g(function(){c.go(".",{service:a,view:"settings"},{reload:!0})},100)})}).catch(function(a){o.reportError(a,b)})},b.saveRpcService=function(d){var e=a.clone(b.api.rpcServices[d]);l.saveRpcService(b.api.name,e).then(function(){o.resetForm(b),l.refreshApi(b,!0,"RPC Service updated",function(){c.go(c.$current.name,{edit:null})})}).catch(function(a){o.reportError(a,b)})},b.removeRpcService=function(a,c){l.removeRpcService(b.api.name,a,!!c).then(function(){b.deleteRpcService=!1,l.refreshApi(b,!0,"RPC Service deleted")})},b.getSourceCode=function(a,c){l.getSourceCode(b.api.name,a).then(function(d){b.filename=a+".php",b.classType=c+" Class",b.sourceCode="string"==typeof d.source?e.trustAsHtml(d.source):"",f.open({scope:b,templateUrl:"html/modals/source-code.html"})})}}])}(_),function(a){"use strict";angular.module("ag-admin").controller("ApiServiceInputController",["$scope","$state","$modal","flash","agFormHandler",function(b,c,d,e,f){b.service="undefined"!=typeof b.$parent.restService?b.$parent.restService:b.$parent.rpcService,b.filterOptions=b.$parent.filterOptions,b.validatorOptions=b.$parent.validatorOptions,b.help=function(){d.open({templateUrl:"html/modals/help-input-filter.html",keyboard:!0})},b.addInput=function(){if(!b.newInput||null===b.newInput||""===b.newInput||b.newInput.match(/^\s+$/))return void(e.error="Must provide a field name!");var a=!1;return b.service.input_filter.every(function(c){return b.newInput===c.name?(a=!0,!1):!0}),a?void(e.error="Field by the name "+b.newInput+" already exists!"):(b.service.input_filter.push({name:b.newInput,required:!0,filters:[],validators:[]}),void(b.newInput=""))},b.validateInputName=function(a,c){if(!a||null===a||""===a||a.match(/^\s+$/))return e.error="Field name can not be empty!",!1;var d=!1;return b.service.input_filter.every(function(b){return b===c?!0:a===b.name?(d=!0,!1):!0}),d?(e.error="Field by the name "+a+" already exists!",!1):!0},b.removeInput=function(a){b.service.input_filter.splice(a,1)},b.removeOption=function(a,b){delete a[b]},b.addFilter=function(a){a.filters.push({name:a._newFilterName,options:{}}),a._newFilterName=""},b.removeFilter=function(a,b){a.filters.splice(b,1)},b.addFilterOption=function(a){"bool"==b.filterOptions[a.name][a._newOptionName]&&(a._newOptionValue=a._newOptionValue===!0),a.options[a._newOptionName]=a._newOptionValue,a._newOptionName="",a._newOptionValue=""},b.addValidator=function(a){a.validators.push({name:a._newValidatorName,options:{}}),a._newValidatorName=""},b.removeValidator=function(a,b){a.validators.splice(b,1)},b.addValidatorOption=function(a){"bool"==b.validatorOptions[a.name][a._newOptionName]&&(a._newOptionValue=a._newOptionValue===!0),a.options[a._newOptionName]=a._newOptionValue,a._newOptionName="",a._newOptionValue=""},b.saveInput=function(){function d(b,c,e){"string"==typeof c&&-1!=["_","$"].indexOf(c.charAt(0))?delete e[c]:b instanceof Object&&a.forEach(b,d)}var e=a.cloneDeep(b.service.input_filter);a.forEach(e,d),a.forEach(e,function(b){b.hasOwnProperty("error_message")&&!b.error_message.length&&delete b.error_message,b.hasOwnProperty("showNewFilterForm")&&delete b.showNewFilterForm,b.hasOwnProperty("showNewValidatorForm")&&delete b.showNewValidatorForm,b.hasOwnProperty("file_upload")&&b.file_upload&&(b.type="Zend\\InputFilter\\FileInput",delete b.file_upload),a.forEach(b.filters,function(a){a.hasOwnProperty("showNewOptionForm")&&delete a.showNewOptionForm}),a.forEach(b.validators,function(a){a.hasOwnProperty("showNewOptionForm")&&delete a.showNewOptionForm})});var g=b.$parent.ApiRepository;g.saveInputFilter(b.service,e).then(function(){f.resetForm(b),b.$parent.flash.success="Fields configuration saved.",c.go(c.$current.name,{edit:null},{reload:!0})}).catch(function(a){f.reportError(a,b)})}}])}(_),function(){"use strict";angular.module("ag-admin").controller("ApiVersionController",["$scope","$state","$stateParams","flash","ApiRepository",function(a,b,c,d,e){e.getApi(c.apiName,c.version).then(function(b){a.api=b,a.currentVersion=b.version,a.defaultApiVersion=b.default_version}),a.createNewApiVersion=function(){e.createNewVersion(a.api.name).then(function(c){d.success="A new version of this API was created",b.go("ag.api.version",{apiName:a.api.name,version:c.version})})},a.setDefaultApiVersion=function(){d.info="Setting the default API version to "+a.defaultApiVersion,e.setDefaultApiVersion(a.api.name,a.defaultApiVersion).then(function(b){d.success="Default API version updated",a.defaultApiVersion=b.version})},a.changeVersion=function(){b.go(b.$current,{version:a.currentVersion})}}])}(),function(){"use strict";angular.module("ag-admin").controller("AuthenticationController",["$scope","$state","$stateParams","flash","AuthenticationRepository","agFormHandler",function(a,b,c,d,e,f){a.inEdit=!!c.edit,a.showSetupButtons=!1,a.showHttpBasicAuthenticationForm=!1,a.showHttpBasicAuthentication=!1,a.showHttpDigestAuthenticationForm=!1,a.showHttpDigestAuthentication=!1,a.showOAuth2AuthenticationForm=!1,a.showOAuth2Authentication=!1,a.removeAuthenticationForm=!1,a.httpBasic=null,a.httpDigest=null,a.oauth2=null;var g=function(){a.showSetupButtons=!0,a.showHttpBasicAuthentication=!1,a.showHttpDigestAuthentication=!1,a.showOAuth2Authentication=!1,a.removeAuthenticationForm=!1,a.httpBasic=null,a.httpDigest=null,a.oauth2=null},h=function(b){e.fetch({cache:!b}).then(function(b){"http_basic"==b.type?(a.showSetupButtons=!1,a.showHttpBasicAuthentication=!0,a.showHttpDigestAuthentication=!1,a.showOAuth2Authentication=!1,a.httpBasic=b,a.httpDigest=null,a.oauth2=null):"http_digest"==b.type?(a.showSetupButtons=!1,a.showHttpDigestAuthentication=!0,a.showHttpBasicAuthentication=!1,a.showOAuth2Authentication=!1,a.digest_domains=b.digest_domains.split(" "),a.httpDigest=b,a.httpDigest.digest_domains=b.digest_domains.split(" "),a.httpBasic=null,a.oauth2=null):"oauth2"==b.type?(a.showSetupButtons=!1,a.showOAuth2Authentication=!0,a.showHttpDigestAuthentication=!1,a.showHttpBasicAuthentication=!1,a.oauth2=b,a.httpDigest=null,a.httpBasic=null):g()}).catch(function(){return g(),!1})},i=function(b,c){e.createAuthentication(b,c).then(function(){d.success="Authentication created",h(!0),a.removeAuthenticationForm=!1,a.resetForm()}).catch(function(b){f.reportError(b,a)})};a.cancelEdit=function(){b.go(b.$current.name,{edit:null})},a.startEdit=function(){b.go(b.$current.name,{edit:!0})};var j=function(c,g){g.hasOwnProperty("digest_domains")&&"object"==typeof g.digest_domains&&Array.isArray(g.digest_domains)&&(g.digest_domains=g.digest_domains.join(" ")),e.updateAuthentication(c,g).then(function(){f.resetForm(a),d.success="Authentication updated",h(!0),b.go(b.current,{edit:""},{reload:!0})}).catch(function(b){f.reportError(b,a)})};a.resetForm=function(){f.resetForm(a),a.showHttpBasicAuthenticationForm=!1,a.showHttpDigestAuthenticationForm=!1,a.showOAuth2AuthenticationForm=!1,a.digest_domains="",a.dsn="",a.htdigest="",a.htpasswd="",a.nonce_timeout="",a.password="",a.realm="",a.route_match="",a.username=""},a.showAuthenticationSetup=function(){return a.showHttpBasicAuthenticationForm||a.showHttpDigestAuthenticationForm||a.showOAuth2AuthenticationForm?!1:a.showSetupButtons},a.createHttpBasicAuthentication=function(){var b={accept_schemes:["basic"],realm:a.realm,htpasswd:a.htpasswd};i("http-basic",b)},a.createHttpDigestAuthentication=function(){var b={accept_schemes:["digest"],realm:a.realm,htdigest:a.htdigest,digest_domains:a.digest_domains.join(" "),nonce_timeout:a.nonce_timeout};i("http-digest",b)},a.createOAuth2Authentication=function(){var b={dsn_type:a.dsn_type,database:a.database,dsn:a.dsn,route_match:a.route_match,username:a.username,password:a.password};i("oauth2",b)},a.updateHttpBasicAuthentication=function(){var b={realm:a.httpBasic.realm,htpasswd:a.httpBasic.htpasswd};j("http-basic",b)},a.updateHttpDigestAuthentication=function(){var b={realm:a.httpDigest.realm,htdigest:a.httpDigest.htdigest,digest_domains:a.httpDigest.digest_domains.join(" "),nonce_timeout:a.httpDigest.nonce_timeout};j("http-digest",b)},a.updateOAuth2Authentication=function(){var b={dsn_type:a.oauth2.dsn_type,database:a.oauth2.database,dsn:a.oauth2.dsn,route_match:a.oauth2.route_match,username:a.oauth2.username,password:a.oauth2.password};j("oauth2",b)},a.removeAuthentication=function(){var b;return a.showHttpBasicAuthentication?b="http-basic":a.showHttpDigestAuthentication?b="http-digest":a.showOAuth2Authentication&&(b="oauth2"),b?void e.removeAuthentication(b).then(function(){d.success="Authentication removed",h(!0)}):void(d.error="Could not delete authentication; could not determine authentication type.")},h(!0)}])}(),function(){"use strict";angular.module("ag-admin").controller("ContentNegotiationController",["$scope","$state","$stateParams","$modal","flash","selectors","ContentNegotiationResource","agFormHandler",function(a,b,c,d,e,f,g,h){var i={content_name:"",viewModel:"",selectors:{}};a.activeSelector=c.selector?c.selector:"",a.inEdit=!!c.edit,a.showNewSelectorForm=!1,a.newSelector=JSON.parse(JSON.stringify(i)),a.selectors=JSON.parse(JSON.stringify(f)),a.help=function(){d.open({templateUrl:"html/modals/help-content-negotiation.html",keyboard:!0})},a.resetNewSelectorForm=function(){h.resetForm(a),a.showNewSelectorForm=!1,a.newSelector=JSON.parse(JSON.stringify(i))},a.addViewModel=function(b,c){c.selectors[b]=[],a.newSelector.viewModel=""},a.removeViewModel=function(a,b){delete b.selectors[a]},a.resetSelectorForm=function(b){h.resetForm(a);var c,d=b.content_name;angular.forEach(f,function(a){c||a.content_name!==d||(c=a)}),c&&angular.forEach(a.selectors,function(b,d){b.content_name===c.content_name&&(a.selectors[d]=c)})},a.createSelector=function(){delete a.newSelector.viewModel,g.createSelector(a.newSelector).then(function(b){f.push(b),a.selectors.push(b),e.success="New selector created",a.resetNewSelectorForm()}).catch(function(b){h.reportError(b,a)})},a.updateSelector=function(b){delete b.viewModel,g.updateSelector(b).then(function(b){h.resetForm(a);var c=!1;angular.forEach(f,function(a,d){c||a.content_name!==b.content_name||(f[d]=b,c=!0)}),e.success="Selector updated"}).catch(function(b){h.reportError(b,a)})},a.removeSelector=function(a){g.removeSelector(a).then(function(){e.success="Selector removed",g.getList(!0).then(function(){b.go(b.current,{},{reload:!0,inherit:!0,notify:!0})})})}}])}(),function(){"use strict";angular.module("ag-admin").controller("DashboardController",["$scope","$state","dashboard",function(a,b,c){if(c.authentication)switch(c.authentication.type){case"http_basic":a.httpBasic=c.authentication;break;case"http_digest":a.httpDigest=c.authentication;break;case"oauth2":a.oauth2=c.authentication}angular.forEach(c.modules,function(a){a.latestVersion=a.versions.pop()}),a.dashboard=c,a.isHttpBasicAuthentication=function(a){return a?"http_basic"==a.type:!1},a.isHttpDigestAuthentication=function(a){return a?"http_digest"==a.type:!1},a.isOAuth2=function(a){return a?"oauth2"==a.type:!1}}])}(),function(){"use strict";angular.module("ag-admin").controller("DbAdapterController",["$scope","$state","$stateParams","flash","DbAdapterResource","dbAdapters","agFormHandler",function(a,b,c,d,e,f,g){a.dbAdapters=f,a.showNewDbAdapterForm=!1,a.activeAdapter=c.adapter?c.adapter:"",a.inEdit=!!c.edit,a.resetForm=function(){return g.resetForm(a),a.showNewDbAdapterForm=!1,a.adapterName="",a.driver="",a.database="",a.dsn="",a.username="",a.password="",a.hostname="",a.port="",a.charset="",a.driver_options={},a.newOptionKey="",a.newOptionValue="",!0};var h=function(a,c){e.getList(a).then(function(){c&&(d.success=c),b.go(b.current,{edit:""},{reload:!0,inherit:!0,notify:!0})
})};a.addNewDriverOption=function(){var b=a.newOptionKey,c=a.newOptionValue;0!==b.length&&0!==c.length&&(a.driver_options||(a.driver_options={}),a.driver_options[b]=c,a.newOptionKey="",a.newOptionValue="")},a.addDriverOption=function(a){var b=a._newOptionKey,c=a._newOptionValue;0!==b.length&&0!==c.length&&(a.driver_options||(a.driver_options={}),a.driver_options[b]=c,a._newOptionKey="",a._newOptionValue="")},a.removeNewDriverOption=function(b,c){a.driver_options&&a.driver_options[c]&&delete a.driver_options[c]},a.removeDriverOption=function(a,b){a.driver_options&&a.driver_options[b]&&delete a.driver_options[b]},a.createNewDbAdapter=function(){var b={adapter_name:a.adapter_name,driver:a.driver,database:a.database,username:a.username,password:a.password,hostname:a.hostname,port:a.port,charset:a.charset};a.dsn&&(b.dsn=a.dsn),a.driver_options&&Object.keys(a.driver_options).length>0&&(b.driver_options=a.driver_options),e.createNewAdapter(b).then(function(){h(!0,"Database adapter created"),a.resetForm()}).catch(function(b){g.reportError(b,a)})},a.saveDbAdapter=function(b){var c=a.dbAdapters[b],d={driver:c.driver,database:c.database,username:c.username,password:c.password,hostname:c.hostname,port:c.port,charset:c.charset};c.dsn&&(d.dsn=c.dsn),c.driver_options&&Object.keys(c.driver_options).length>0&&(d.driver_options=c.driver_options),e.saveAdapter(c.adapter_name,d).then(function(b){g.resetForm(a),h(!0,"Database adapter "+b.adapter_name+" updated")}).catch(function(b){g.reportError(b,a)})},a.removeDbAdapter=function(b){e.removeAdapter(b).then(function(){h(!0,"Database adapter "+b+" removed"),a.deleteDbAdapter=!1})}}])}(_),function(){"use strict";angular.module("ag-admin").controller("DoctrineAdapterController",["$scope","$state","$stateParams","flash","DoctrineAdapterResource","doctrineAdapters","agFormHandler",function(a,b,c,d,e,f,g){function h(a,c){e.getList(a).then(function(){c&&(d.success=c),b.go(b.current,{edit:""},{reload:!0,inherit:!0,notify:!0})})}a.doctrineAdapters=f,a.showNewDoctrineAdapterForm=!1,a.activeAdapter=c.adapter?c.adapter:"",a.inEdit=!!c.edit,a.ui={ormAdapters:{"Doctrine\\DBAL\\Driver\\DrizzlePDOMySql\\Driver":"DrizzlePDOMySql","Doctrine\\DBAL\\Driver\\IbmDb2\\DB2Driver":"IbmDb2","Doctrine\\DBAL\\Driver\\Mysqli\\Driver":"Mysqli","Doctrine\\DBAL\\Driver\\OCI8\\Driver":"Oci8","Doctrine\\DBAL\\Driver\\PDOIbm\\Driver":"Pdo_IBM","Doctrine\\DBAL\\Driver\\PDOMySql\\Driver":"Pdo_Mysql","Doctrine\\DBAL\\Driver\\PDOOracle\\Driver":"Pdo_Oracle","Doctrine\\DBAL\\Driver\\PDOPgSql\\Driver":"Pdo_Pgsql","Doctrine\\DBAL\\Driver\\PDOSqlite\\Driver":"Pdo_Sqlite","Doctrine\\DBAL\\Driver\\PDOSqlsrv\\Driver":"Pdo_Sqlsrv","Doctrine\\DBAL\\Driver\\Sqlsrv\\Driver":"Sqlsrv"}},a.resetForm=function(){a.showNewDoctrineAdapterForm=!1,a.adapterName="",a.driverClass="",a.database="",a.username="",a.password="",a.hostname="localhost",a.port=""},a.saveDoctrineAdapter=function(b){var c,d=a.doctrineAdapters[b];"odm_default"!=d.adapter_name?(c={driverClass:d.driverClass,params:{path:d.params.path,dbname:d.params.dbname,user:d.params.user,password:d.params.password,host:d.params.host,port:d.params.port}},"Doctrine\\DBAL\\Driver\\PDOSqlite\\Driver"!=d.driverClass&&delete c.params.path):c={dbname:d.dbname,connectionString:d.connectionString,user:d.user,password:d.password,port:d.port,server:d.server},e.saveAdapter(d.adapter_name,c).then(function(b){g.resetForm(a),h(!0,"Doctrine adapter "+b.adapter_name+" updated")},function(b){g.reportError(b,a)})},a.removeDoctrineAdapter=function(b){e.removeAdapter(b).then(function(){h(!0,"Doctrine adapter "+b+" deleted"),a.deleteDoctrineAdapter=!1})}}])}(_),function(){"use strict";angular.module("ag-admin").controller("SettingsDashboardController",["$scope","$state","dashboard",function(a,b,c){if(c.authentication)switch(c.authentication.type){case"http_basic":a.httpBasic=c.authentication;break;case"http_digest":a.httpDigest=c.authentication;break;case"oauth2":a.oauth2=c.authentication}a.dashboard=c,a.isHttpBasicAuthentication=function(a){return a?"http_basic"==a.type:!1},a.isHttpDigestAuthentication=function(a){return a?"http_digest"==a.type:!1},a.isOAuth2=function(a){return a?"oauth2"==a.type:!1}}])}(),function(){"use strict";angular.module("ag-admin").directive("agCancelEdit",["$state",function(a){return{restrict:"A",link:function(b,c){c.on("click",function(){a.go(a.$current.name,{edit:null},{reload:!0})})}}}])}(),function(){"use strict";angular.module("ag-admin").directive("agCollapse",function(){return{restrict:"E",transclude:!0,scope:{show:"&"},controller:["$scope","$parse","$state",function(a,b,c){var d,e,f,g,h,i=[],j={};this.noChevron=!1;var k,l=this,m={};this.addButton=function(a){angular.forEach(a.criteria,function(b,c){a.criteria[c]=!!b}),i.push(a)},a.setActive=function(){d&&l.expand()},a.setConditionals=function(a){angular.forEach(a,function(a,b){j[b]=!!a}),l.setFlags(j)},a.setName=function(a){h=a},a.setNoChevron=function(a){l.noChevron=!!a,f&&f.remove(),l.expand()},a.setSearchParam=function(a){k=a},this.setFlags=function(a){angular.forEach(a,function(a,b){m.hasOwnProperty(b)?angular.forEach(m[b],function(b){b(a)}):j[b]=!!a})},this.addConditionalWatcher=function(a,b){angular.forEach(a,function(a,c){j.hasOwnProperty(c)||(j[c]=!1),a=!!a,"undefined"==typeof m[c]&&(m[c]=[]),m[c].push(function(d){d=!!d,j[c]=d,"function"==typeof b&&b(d,a)})})},a.showContainerButtons=this.showContainerButtons=function(){var a=!1;angular.forEach(i,function(b){var c=a;angular.forEach(b.criteria,function(a,b){j.hasOwnProperty(b)&&(c=c||j[b]!==a)}),b.element.toggleClass("hide",c)})},a.hideContainerButtons=this.hideContainerButtons=function(a){d.hasClass("in");angular.forEach(i,function(b){if(a.hasOwnProperty("leave")&&a.leave)return void b.element.toggleClass("hide",!0);var c=!0;angular.forEach(b.criteria,function(a,b){c&&j.hasOwnProperty(b)&&(c=j[b]===a)}),b.element.toggleClass("hide",c)})},this.setHead=function(a){g=a},this.setBody=function(b,c){d=b,e=c,d.hasClass("in")&&l.toggleChevron("up"),a.$watch(function(){return d.attr("class")},function(){l.toggleChevron(d.hasClass("in")?"up":"down")})},this.setChevron=function(a){f=a},this.expand=function(a){if(d.hasClass("in"))return void("function"==typeof a&&a());if(e(!0),h&&k){var b={};b[k]=h,c.go(c.$current.name,b,{reload:!1,inherit:!0,notify:!1}).then(function(b){return"function"==typeof a&&a(),b})}},this.collapse=function(a){if(!d.hasClass("in"))return void("function"==typeof a&&a());if(!l.noChevron&&(e(!1),k)){var b={};b[k]=null,c.go(c.$current.name,b,{reload:!1,inherit:!0,notify:!1}).then(function(b){return"function"==typeof a&&a(),b})}},this.toggle=function(){d.hasClass("in")?l.collapse():l.expand(),l.toggleChevron()},this.toggleChevron=function(a){if(!l.noChevron&&f){("undefined"==typeof a||null===a)&&(a=d.hasClass("in")?"up":"down");var b="up"===a?"down":"up",c="up"===b?"down":"up",e="glyphicon-chevron-"+b,g="glyphicon-chevron-"+c;f.hasClass(e)&&(f.removeClass(e),f.addClass(g))}}}],link:function(a,b,c){c.hasOwnProperty("show")&&"function"==typeof a.show&&(a.show()||b.toggleClass("hide",!0)),c.hasOwnProperty("active")&&a.$eval(c.active)&&a.setActive(),c.hasOwnProperty("name")&&a.setName(c.name),c.hasOwnProperty("searchparam")&&a.setSearchParam(c.searchparam),c.hasOwnProperty("conditionals")&&a.setConditionals(a.$eval(c.conditionals)),c.hasOwnProperty("noChevron")&&a.setNoChevron(!0)},template:'<div class="panel" ng-transclude></div>',replace:!0}}).directive("collapseHeader",function(){return{require:"^agCollapse",restrict:"E",transclude:!0,link:function(a,b,c,d){if(d.setHead(a),!d.noChevron){var e=angular.element('<i class="glyphicon glyphicon-chevron-down"></i>'),f=angular.element('<div class="ag-chevron pull-right"></div>');f.append(e),b.prepend(f),d.setChevron(e)}b.on("click",function(){d.toggle()}),b.on("mouseover",function(){d.showContainerButtons()}),b.on("mouseleave",function(){d.hideContainerButtons({leave:!0})})},template:'<div class="panel-heading" ng-transclude></div>',replace:!0}}).directive("collapseBody",["AgTemplateInjector",function(a){return{require:"^agCollapse",restrict:"E",transclude:!0,scope:!0,link:function(b,c,d,e){var f=function(a){c.toggleClass("in",a)};if(d.hasOwnProperty("contentTemplate")){var g=b.$eval(d.contentTemplate),h=a.defaultEmptyTemplate;d.hasOwnProperty("emptyTemplate")&&(h=b.$eval(d.emptyTemplate)),f=function(d){var e=d?g:h;a.fetchTemplate(e).then(function(e){a.populateElement(c,e,b),c.toggleClass("in",d)})};var i=c.hasClass("in")?g:h;a.fetchTemplate(i).then(function(d){a.populateElement(c,d,b)})}e.setBody(c,f)},template:'<div class="panel-collapse collapse" ng-transclude></div>',replace:!0}}]).directive("collapseButton",function(){return{require:"^agCollapse",restrict:"A",scope:!0,link:function(a,b,c,d){var e,f={};c.hasOwnProperty("criteria")&&(f=a.$eval(c.criteria),"object"!=typeof f&&(f={})),c.hasOwnProperty("collapseClick")&&(e=a.$eval(c.collapseClick)),d.addButton({criteria:f,element:b}),b.addClass("hide"),b.on("click",function(a){a.preventDefault(),a.stopPropagation(),d.expand(function(){"function"==typeof e&&e(a,b)}),d.showContainerButtons()})}}}).directive("collapseFlag",function(){return{require:"^agCollapse",restrict:"A",scope:!0,link:function(a,b,c,d){var e;if(c.hasOwnProperty("flags")){var f=a.$eval(c.flags);"object"==typeof f&&(c.hasOwnProperty("collapseClick")&&(e=a.$eval(c.collapseClick)),b.on("click",function(a){a.preventDefault(),a.stopPropagation(),d.setFlags(f),"function"==typeof e&&e(a,b)}))}}}}).directive("collapseShow",["AgTemplateInjector",function(a){return{require:"^agCollapse",restrict:"A",transclude:!0,link:function(b,c,d,e){var f=function(a,b){c.toggleClass("hide",b!==a)};if(d.hasOwnProperty("criteria")){var g=b.$eval(d.criteria);if("object"==typeof g){if(d.hasOwnProperty("defaultTemplate")&&d.hasOwnProperty("toggledTemplate")){var h=b.$eval(d.defaultTemplate),i=b.$eval(d.toggledTemplate);f=function(d,e){var f=d===e?h:i;a.fetchTemplate(f).then(function(d){a.populateElement(c,d,b)})},a.fetchTemplate(h).then(function(d){a.populateElement(c,d,b)})}e.addConditionalWatcher(g,f)}}}}}])}(),function(){"use strict";angular.module("ag-admin").directive("agComment",function(){return{restrict:"E",compile:function(a){a.replaceWith("")}}})}(),function(){"use strict";angular.module("ag-admin").directive("agConditionalInclude",["AgTemplateInjector","$compile",function(a,b){return{restrict:"E",transclude:!0,link:function(c,d,e){return e.hasOwnProperty("src")&&e.hasOwnProperty("condition")?void c.$watch(e.condition,function(f){f=!!f;var g=f?e.src:a.defaultEmptyTemplate;a.fetchTemplate(g).then(function(a){d.html(a),b(d.contents())(c)})}):void console.error('ag-include requires both a "src" and a "condition" attribute; none provided!')}}}])}(),function(){"use strict";angular.module("ag-admin").directive("agEditInplace",function(){return{restrict:"E",replace:!0,scope:{agInputName:"=name",validate:"&"},templateUrl:"html/directives/ag-edit-inplace.html",controller:["$scope",function(a){var b;a.isFormVisible=!1,a.setInitialValue=function(a){b=a},a.resetForm=function(){a.agInputName=b,a.isFormVisible=!1}}],link:function(a,b,c){b.on("click",function(a){a.stopPropagation()}),a.setInitialValue(a.agInputName);var d=angular.element(b.children()[0]),e=angular.element(b.children()[1]);a.submit=c.hasOwnProperty("validate")&&"function"==typeof a.validate?function(){a.validate(a.agInputName)&&(a.isFormVisible=!1)}:function(){a.isFormVisible=!1},e.on("submit",a.submit),a.$watch("isFormVisible",function(a){return a?(d.toggleClass("hide",!0),void e.toggleClass("hide",!1)):(d.toggleClass("hide",!1),void e.toggleClass("hide",!0))})}}})}(),function(){"use strict";angular.module("ag-admin").directive("agForm",function(){return{restrict:"A",controller:["$scope",function(a){var b=function(){var a=angular.element("<div></div>");a.addClass("panel panel-danger ag-validation-error");var b=angular.element("<div></div>");b.addClass("panel-heading");var c=angular.element("<h4></h4>");return c.addClass("panel-title"),c.text("Validation Errors"),b.append(c),a.append(b),a};a.processErrors=function(a,c){var d=b(),e=angular.element("<ul></ul>");e.addClass("list-group"),angular.forEach(a,function(a,b){if(Array.isArray(a)&&(a=a.join("<br />")),"object"==typeof a){var c=[];angular.forEach(a,function(a){c.push(a)}),a=c.join("<br />")}if("string"==typeof a){"string"==typeof b&&(a=b+": "+a);var d=angular.element("<li></li>");d.addClass("list-group-item"),d.text(a),e.append(d)}}),d.append(e),c.append(d)},a.removeErrors=function(a){a.find(".ag-validation-error").remove()}}],link:function(a,b){b.on("submit",function(){a.removeErrors(b),b.find("input").attr("disabled",!0),b.find("button").attr("disabled",!0),b.find("select").attr("disabled",!0)}),a.$on("ag-form-submit-complete",function(){b.find("input").attr("disabled",!1),b.find("button").attr("disabled",!1),b.find("select").attr("disabled",!1)}),a.$on("ag-form-validation-errors",function(c,d){a.messages=a.processErrors(d,b)}),a.$on("ag-form-validation-errors-clear",function(){b.find(".ag-validation-error").remove()})}}})}(),function(){"use strict";angular.module("ag-admin").directive("agHover",function(){return{restrict:"A",controller:["$scope",function(a){var b;this.setTarget=function(a){b=a},this.toggleHide=a.toggleHide=function(a){b.toggleClass("hide",a)}}],link:function(a,b){b.on("mouseover",function(){a.toggleHide(!1)}),b.on("mouseleave",function(){a.toggleHide(!0)})}}}).directive("agHoverTarget",function(){return{require:"^agHover",restrict:"A",link:function(a,b,c,d){d&&(d.setTarget(b),d.toggleHide(!0))}}})}(),function(a){"use strict";angular.module("ag-admin").directive("agInclude",["AgTemplateInjector","$compile",function(b,c){return{restrict:"E",transclude:!0,replace:!0,link:function(d,e,f){if(!f.hasOwnProperty("src")&&!f.hasOwnProperty("condition"))return void a.error('ag-include requires a "src" or a "condition" attribute; none provided!');var g=f.hasOwnProperty("condition")?d.$eval(f.condition):f.src;b.fetchTemplate(g).then(function(a){e.html(a),c(e.contents())(d)})}}}])}(console),function(){"use strict";angular.module("ag-admin").directive("agOnEnter",function(){return{restrict:"A",link:function(a,b,c){b.bind("keydown",function(){b.focus()}),b.bind("keyup",function(b){13===b.which&&(b.stopPropagation(),a.$apply(c.agOnEnter))})}}})}(),function(){"use strict";angular.module("ag-admin").directive("agTabs",function(){return{restrict:"E",transclude:!0,scope:{parent:"="},controller:["$scope","$element","$state",function(a,b,c){var d=a.panes=[];a.select=function(a){if(angular.forEach(d,function(a){a.selected===!0&&(a.selected=!1,angular.forEach(a.getWatchers(),function(b){b.deselect(a)}))}),a.selected=!0,angular.forEach(a.getWatchers(),function(b){b.select(a)}),a.name&&a.searchParam){var b={};b[a.searchParam]=a.name,c.go(c.$current.name,b)}},this.addPane=function(b){(0===d.length||b.active)&&a.select(b),d.push(b)}}],link:function(a,b,c){var d="nav-tabs";c.hasOwnProperty("pills")&&(d="nav-pills"),angular.forEach(b.children(),function(a){a=angular.element(a),"UL"===a.context.tagName&&a.addClass(d)})},template:'<div class="ag-tabs"><ul class="nav"><li ng-repeat="pane in panes" ng-class="{active:pane.selected}"><a href="" ng-click="select(pane)">{{pane.title}}</a></li></ul><div class="tab-content" ng-transclude></div></div>',replace:!0}}).directive("agTabPane",function(){return{require:"^agTabs",restrict:"E",transclude:!0,scope:{title:"@"},controller:["$scope",function(a){var b=[];this.addWatcher=function(a){b.push(a)},a.getWatchers=function(){return b}}],link:function(a,b,c,d){c.hasOwnProperty("active")&&(a.active=!!a.$eval(c.active)),c.hasOwnProperty("name")&&(a.name=c.name),c.hasOwnProperty("searchparam")&&(a.searchParam=c.searchparam),d.addPane(a)},template:'<div class="tab-pane" ng-class="{active: selected}" ng-transclude></div>',replace:!0}}).directive("agTabPaneVariableContent",["AgTemplateInjector",function(a){return{require:"^agTabPane",restrict:"E",transclude:!0,link:function(b,c,d,e){var f,g,h=a.defaultEmptyTemplate;return d.hasOwnProperty("contentTemplate")?(f=b.$eval(d.contentTemplate),d.hasOwnProperty("emptyTemplate")&&(h=b.$eval(d.emptyTemplate)),d.hasOwnProperty("onload")&&(g=d.onload),a.fetchTemplate(h).then(function(d){a.populateElement(c,d,b)}),b.select=function(b){a.fetchTemplate(f).then(function(d){a.populateElement(c,d,b,g)})},b.deselect=function(b){a.fetchTemplate(h).then(function(d){a.populateElement(c,d,b)})},void e.addWatcher(b)):void console.error("Missing content-template property in ag-tab-pane-variable-content directive; cannot continue")}}}])}(),function(){"use strict";angular.module("ag-admin").directive("agToggleInclude",["AgTemplateInjector","$compile",function(a,b){return{restrict:"E",transclude:!0,link:function(c,d,e){return e.hasOwnProperty("onTemplate")&&e.hasOwnProperty("offTemplate")&&e.hasOwnProperty("condition")?void c.$watch(e.condition,function(f){f=!!f;var g=f?e.onTemplate:e.offTemplate;a.fetchTemplate(g).then(function(a){d.html(a),b(d.contents())(c)})}):void console.error('ag-toggle-include requires each of "condition", "on-template", and "off-template" attributes; one or more are missing!')}}}])}(),function(){"use strict";angular.module("ag-admin").filter("servicetype",function(){return function(a){var b=a.split("::");switch(b[1]){case"__collection__":return"(Collection)";case"__entity__":return"(Entity)";default:return""}}})}(),function(){"use strict";angular.module("ag-admin").filter("boolean",function(){return function(a){return"boolean"==typeof a?a?"Yes":"No":void 0}})}(),function(){"use strict";angular.module("ag-admin").filter("controllerservicename",function(){return function(a){return a.replace(/-/g,"\\")}})}(),function(){"use strict";angular.module("ag-admin").filter("namespaceclassid",function(){return function(a){return a.replace(/\\/g,"_")}})}(),function(){"use strict";angular.module("ag-admin").filter("servicename",function(){return function(a){var b=/^[^\\-]+[\\-]{1,2}V[^\\-]+[\\-]{1,2}(Rest|Rpc)[\\-]{1,2}([^\\-]+)[\\-]{1,2}.*?Controller.*?$/;return a.match(b)?a.replace(b,"$2"):a}})}(),function(){"use strict";angular.module("ag-admin").factory("agFormHandler",["flash",function(a){return{resetForm:function(a){a.$broadcast("ag-form-submit-complete"),a.$broadcast("ag-form-validation-errors-clear")},reportError:function(b,c){if(c.$broadcast("ag-form-submit-complete"),400!==b.status&&422!==b.status)return void(a.error="Error submitting new API");var d;d=400===b.status?["Unexpected or missing data processing form"]:b.data.validation_messages,c.$broadcast("ag-form-validation-errors",d),a.error="We were unable to validate your form; please check for errors."}}}])}(_),function(){"use strict";angular.module("ag-admin").factory("AgTemplateInjector",["$templateCache","$http","$q","$compile",function(a,b,c,d){var e="html/empty.html",f={},g=function(d){return f.hasOwnProperty(d)?c.when(f[d]):b.get(d,{cache:a}).then(function(a){return f[d]=a.data,f[d]}).catch(function(a){return console.error("Unable to fetch template "+d),console.error(a),a})},h=function(a,b,c,e){a.html(b),d(a.contents())(c.$parent),e&&c.$eval(e)};return{defaultEmptyTemplate:e,fetchTemplate:g,populateElement:h}}])}(),function(a){"use strict";angular.module("ag-admin").factory("ApiAuthorizationRepository",["$http","apiBasePath","Hal",function(b,c,d){return{getApiAuthorization:function(a,e,f){f=!!f,"string"==typeof e&&(e=parseInt(e.match(/\d/g)[0],10));var g={method:"GET",url:c+"/module/"+a+"/authorization",params:{version:e},cache:!f};return b(g).then(function(a){return d.props(a.data)})},getServiceAuthorizations:function(b,c,d){return this.getApiAuthorization(c,d).then(function(c){var d,e={},f=!1,g=b.controller_service_name.replace(/-/g,"\\");g=g.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&");var h=new RegExp("^"+g+"::(.*?)$"),i=new RegExp("^__([^_]+)__$");return a.forEach(c,function(a,b){if(!f&&(d=h.exec(b),Array.isArray(d))){var c=d[1];if(d=i.exec(c),Array.isArray(d)){var g=d[1];return"resource"==g&&(g="entity"),void(e[g]=a)}e=a,f=!0}}),e})},saveApiAuthorizations:function(a,e){var f=c+"/module/"+a+"/authorization";return b.put(f,e).then(function(a){return d.props(a.data)})}}}])}(_),function(a){"use strict";angular.module("ag-admin").factory("ApiRepository",["$q","$http","apiBasePath","Hal","flash",function(b,c,d,e,f){var g,h=d+"/module",i={};return{currentApiModel:null,getList:function(a){if(a=!!a,!a&&(Array.isArray(g)&&g.length>0||"object"==typeof g))return b.when(g);var d={method:"GET",url:h};return c(d).then(function(a){return g=e.pluckCollection("module",a.data),g=e.stripLinks(g),g=e.stripEmbedded(g)})},getApi:function(d,g,j){if(j=!!j,"string"==typeof g&&(g=parseInt(g.match(/\d/g)[0],10)),!j&&i.hasOwnProperty(d)&&i[d].hasOwnProperty(g))return b.when(i[d][g]);var k=this,l=b.defer(),m={},n={method:"GET",url:h};return c(n).then(function(c){var h=e.pluckCollection("module",c.data),i=a.find(h,function(a){return a.name===d});return void 0===i?(f.error='API "'+d+'" not found',b.reject(404)):(a.forEach(e.stripLinks(i),function(a,b){m[b]=a}),m.restServices=[],m.rpcServices=[],g||(g=i.versions[i.versions.length-1]),-1===i.versions.indexOf(g)?(f.error='Version "'+g+'" of API "'+d+'" not found',b.reject(404)):i)}).then(function(b){var d=k.getHttpConfigFromLink("rest",b);return d.method="GET",d.params.version=g,c(d).then(function(c){return m.restServices=e.pluckCollection("rest",c.data),a.forEach(m.restServices,function(b){if(b._self=e.getLink("self",b),b.input_filter=[],b.documentation=[],b._embedded&&(b._embedded&&b._embedded.input_filters&&b._embedded.input_filters[0]&&(b.input_filter=e.props(b._embedded.input_filters[0]),a.forEach(b.input_filter,function(a,c){k.marshalInputFilter(b,a,c)}),b.input_filter=a.toArray(b.input_filter)),b._embedded.documentation)){var c=e.pluckCollection("documentation",b);b.documentation=e.props(c)}}),b})}).then(function(b){var d=k.getHttpConfigFromLink("rpc",b);return d.method="GET",d.params.version=g,c(d).then(function(c){return m.rpcServices=e.pluckCollection("rpc",c.data),a.forEach(m.rpcServices,function(b){if(b._self=e.getLink("self",b),b.input_filter=[],b.documentation=[],b._embedded&&(b._embedded.input_filters&&b._embedded.input_filters[0]&&(b.input_filter=e.props(b._embedded.input_filters[0]),a.forEach(b.input_filter,function(a,c){k.marshalInputFilter(b,a,c)}),b.input_filter=a.toArray(b.input_filter)),b._embedded.documentation)){var c=e.pluckCollection("documentation",b);b.documentation=e.props(c)}}),b})}).then(function(){l.resolve(m),i.hasOwnProperty(d)||(i[d]={}),i[d][g]=m,i[d][g].version=g}),l.promise},refreshApi:function(a,b,c){return a.hasOwnProperty("api")?this.getApi(a.api.name,a.api.version,!0).then(function(b){return c&&(f.success=c),a.api=b,a.currentVersion=b.currentVersion,b}):void console.error("Provided scope does not have an API property; cannot refresh API")},createNewApi:function(a){return c.post(h,{name:a}).then(function(a){return a.data})},removeApi:function(d,g){var i=(b.defer(),this),j={method:"GET",url:h};return c(j).then(function(c){var g=e.pluckCollection("module",c.data),h=a.find(g,function(a){return a.name===d});return void 0===h?(f.error='API "'+d+'" not found',b.reject(404)):h}).then(function(a){var b=e.getLink("self",a),d={};return g&&(d.params={recursive:1}),c.delete(b,d).then(function(){return i.getList(!0)})})},serviceExist:function(a){var b=d+"/service-exist?service_name="+a,e={method:"GET",url:b};return c(e)},createNewRestService:function(a,b){return c.post(h+"/"+a+"/rest",{service_name:b}).then(function(a){return a.data})},createNewDbConnectedService:function(a,b,d){return c.post(h+"/"+a+"/rest",{adapter_name:b,table_name:d}).then(function(a){return a.data})},createNewDoctrineConnectedService:function(a,b,d,e,f,g,i,j,k,l,m){var n={objectManager:b,serviceName:d,entityClass:e,routeIdentifierName:f,entityIdentifierName:g,routeMatch:i,byValue:j,useGeneratedHydrator:k,hydratorName:l,hydratorStrategies:m};return c.post(h+"/"+a+"/doctrine/"+d,n).then(function(a){return a.data})},createNewRpcService:function(a,b,d){return c.post(h+"/"+a+"/rpc",{service_name:b,route_match:d}).then(function(a){return a.data})},removeRestService:function(a,b,d,e){e=!!e;var f=e?"/doctrine/":"/rest/",g=h+"/"+a+f+encodeURIComponent(b),i={};return d&&(i.params={recursive:1}),c.delete(g,i).then(function(a){return a.data})},saveRestService:function(a,b,d){var e,f=this.testForEmpty,g={accept_whitelist:b.accept_whitelist,collection_class:f(b.collection_class),collection_http_methods:b.collection_http_methods,collection_name:f(b.collection_name),collection_query_whitelist:b.collection_query_whitelist,content_type_whitelist:b.content_type_whitelist,entity_class:f(b.entity_class),entity_http_methods:b.entity_http_methods,entity_identifier_name:f(b.entity_identifier_name),hydrator_name:f(b.hydrator_name),page_size:f(b.page_size),page_size_param:f(b.page_size_param),resource_class:f(b.resource_class),route_identifier_name:f(b.route_identifier_name),route_match:f(b.route_match),selector:b.selector,service_name:b.service_name};d?(e="/doctrine/",g.object_manager=b.object_manager,g.resourceName=b.service_name,g.hydrator_strategies=b.hydrator_strategies,g.by_value=b.by_value,g.use_generated_hydrator=b.use_generated_hydrator):e="/rest/";var i=h+"/"+a+e+encodeURIComponent(b.controller_service_name);return b.hasOwnProperty("adapter_name")&&b.adapter_name&&(g.adapter_name=b.adapter_name),b.hasOwnProperty("table_name")&&b.table_name&&(g.table_name=b.table_name),c({method:"patch",url:i,data:g}).then(function(a){return a.data})},saveInputFilter:function(a,b){var d=a._self+"/input-filter";return c.put(d,b).then(function(a){return a.data})},saveDocumentation:function(a){var b=a._self+"/doc";return c.put(b,a.documentation).then(function(a){return a.data})},removeRpcService:function(a,b,d){var e=h+"/"+a+"/rpc/"+encodeURIComponent(b),f={};return d&&(f.params={recursive:1}),c.delete(e,f).then(function(a){return a.data})},saveRpcService:function(a,b){var d=h+"/"+a+"/rpc/"+encodeURIComponent(b.controller_service_name),e=this.testForEmpty,f={accept_whitelist:b.accept_whitelist,content_type_whitelist:b.content_type_whitelist,controller_class:e(b.controller_class),http_methods:b.http_methods,route_match:e(b.route_match),selector:e(b.selector),service_name:b.service_name};return c({method:"patch",url:d,data:f}).then(function(a){return a.data})},getSourceCode:function(a,b){return c.get(d+"/source?module="+a+"&class="+b).then(function(a){return a.data})},createNewVersion:function(a){return c({method:"patch",url:d+"/versioning",data:{module:a}}).then(function(a){return a.data})},setDefaultApiVersion:function(a,b){return c({method:"patch",url:d+"/default-version",data:{module:a,version:b}}).then(function(a){return a.data})},getLatestVersion:function(a){var b=a.versions,c=b.pop();return b.push(c),c},isLatestVersion:function(a){var b=this.getLatestVersion(a);return a.version===b},marshalInputFilter:function(b,c,d){return"string"==typeof c?void delete b.input_filter[d]:("undefined"==typeof c.validators?c.validators=[]:a.forEach(c.validators,function(a){("undefined"==typeof a.options||0===a.options.length)&&(a.options={})}),"undefined"==typeof c.filters?c.filters=[]:a.forEach(c.filters,function(a){("undefined"==typeof a.options||0===a.options.length)&&(a.options={})}),"string"==typeof c.type&&"Zend\\InputFilter\\FileInput"==c.type&&(c.file_upload=!0),c.required="undefined"==typeof c.required?!0:!!c.required,c.allow_empty="undefined"==typeof c.allow_empty?!1:!!c.allow_empty,void(c.continue_if_empty="undefined"==typeof c.continue_if_empty?!1:!!c.continue_if_empty))},getHttpConfigFromLink:function(b,c){var d={uri:null,params:{}},f=e.getLink(b,c);f=f.replace(/\{[^}]+\}/,"","g");var g=f.match(/^([^?]+)\?(.*?)$/);if(!Array.isArray(g))return d.url=f,d;d.url=g[1],d.params={};var h=g[2].split("&");return a.forEach(h,function(a){return a.match(/\=/)?(a=a.split("=",2),void(d.params[a[0]]=a[1])):void(d.params[a]=!0)}),d},testForEmpty:function(a){return""===a?null:void 0===a?null:a}}}])}(_),function(){"use strict";angular.module("ag-admin").factory("AuthenticationRepository",["$http","$q","apiBasePath",function(a,b,c){var d=c+"/authentication";return{hasAuthentication:function(){return this.fetch({cache:!1}).then(function(a){var b=!0;return""===a&&(b=!1),{configured:b}}).catch(function(){return{configured:!1}})},fetch:function(b){return a.get(d,b).then(function(a){return a.data})},createAuthentication:function(b,c){return a.post(d+"/"+b,c).then(function(a){return a.data})},updateAuthentication:function(b,c){return a({method:"patch",url:d+"/"+b,data:c}).then(function(a){return a.data})},removeAuthentication:function(b){return a.delete(d+"/"+b).then(function(){return!0}).catch(function(){return!1})}}}])}(),function(){"use strict";angular.module("ag-admin").factory("CacheEnabledResource",["$http","flash","apiBasePath",function(a,b,c){var d=c+"/cache-enabled";return{getCacheStatus:function(){return a({method:"GET",url:d}).then(function(a){return a.data.cache_enabled}).catch(function(){b.error="Unable to fetch API opcode cache status; you may need to refresh the page."})}}}])}(),function(){"use strict";angular.module("ag-admin").factory("ContentNegotiationResource",["$http","$q","flash","apiBasePath",function(a,b,c,d){var e,f=d+"/content-negotiation";return{prepareSelector:function(a){var b={content_name:a.content_name};return angular.forEach(a.selectors,function(a,c){b[c]=a}),b},getList:function(d){return d=!!d,!d&&(Array.isArray(e)&&e.length>0||"object"==typeof e)?b.when(e):a({method:"GET",url:f}).then(function(a){return e=a.data._embedded.selectors}).catch(function(){c.to("ag-flash-error").error="Unable to fetch content negotiation selectors; you may need to reload the page"})},createSelector:function(b){return a({method:"POST",url:f,data:this.prepareSelector(b)}).then(function(a){return a.data})},updateSelector:function(b){var c=f+"/"+encodeURIComponent(b.content_name),d=this.prepareSelector(b);return delete d.content_name,a({method:"PATCH",url:c,data:d}).then(function(a){return a.data})},removeSelector:function(b){var d=f+"/"+encodeURIComponent(b);return a({method:"DELETE",url:d}).then(function(a){return a.data}).catch(function(a){return c.error="Unable to remove selector; please try again",a})}}}])}(),function(){"use strict";angular.module("ag-admin").factory("DashboardRepository",["$http","apiBasePath","Hal",function(a,b,c){return{fetch:function(){var d={method:"GET",url:b+"/dashboard"};return a(d).then(function(a){var b,d=a.data;return b=d.hasOwnProperty("authentication")?!1:c.pluckCollection("authentication",d),{authentication:b,dbAdapters:c.pluckCollection("db_adapter",d),doctrineAdapters:c.pluckCollection("doctrine_adapter",d),modules:c.pluckCollection("module",d)}})}}}])}(),function(){"use strict";angular.module("ag-admin").factory("DbAdapterResource",["$http","$q","apiBasePath","Hal",function(a,b,c,d){var e,f=c+"/db-adapter";return{getList:function(c){if(c=!!c,!c&&(Array.isArray(e)&&e.length>0||"object"==typeof e))return b.when(e);var g={method:"GET",url:f};return a(g).then(function(a){return e=d.pluckCollection("db_adapter",a.data),e=d.props(e)})},createNewAdapter:function(b){return a.post(f,b).then(function(a){return d.props(a.data)})},saveAdapter:function(b,c){return a({method:"patch",url:f+"/"+encodeURIComponent(b),data:c}).then(function(a){return d.props(a.data)})},removeAdapter:function(b){return a.delete(f+"/"+encodeURIComponent(b)).then(function(){return!0})}}}])}(_),function(){"use strict";angular.module("ag-admin").factory("DoctrineAdapterResource",["$http","$q","apiBasePath","Hal",function(a,b,c,d){var e,f=c+"/doctrine-adapter";return{getList:function(c){if(!c&&(Array.isArray(e)&&e.length>0||"object"==typeof e))return b.when(e);var g={method:"GET",url:f};return a(g).then(function(a){return e=d.pluckCollection("doctrine_adapter",a.data),e=d.props(e)})},createNewAdapter:function(b){return a.post(f,b).then(function(a){return d.props(a.data)})},saveAdapter:function(b,c){return a({method:"patch",url:f+"/"+encodeURIComponent(b),data:c}).then(function(a){return d.props(a.data)
})},removeAdapter:function(b){return a.delete(f+"/"+encodeURIComponent(b)).then(function(){return!0})}}}])}(_),function(){"use strict";angular.module("ag-admin").factory("FiltersServicesRepository",["$http","flash","apiBasePath",function(a,b,c){var d=c+"/filters";return{getList:function(){var c=a({method:"GET",url:d}).then(function(a){return a.data.filters}).catch(function(){return b.error="Unable to fetch filters for filter dropdown; you may need to reload the page",!1});return c}}}])}(),function(){"use strict";angular.module("ag-admin").factory("FsPermsResource",["$http","flash","apiBasePath",function(a,b,c){var d=c+"/fs-permissions";return{getFsPermsStatus:function(){return a({method:"GET",url:d}).then(function(a){return a.data}).catch(function(){b.error="Unable to fetch API filesystem writability status; you may need to refresh the page."})}}}])}(),function(){"use strict";angular.module("ag-admin").factory("HydratorServicesRepository",["$http","flash","apiBasePath",function(a,b,c){var d=c+"/hydrators";return{getList:function(){var c=a({method:"GET",url:d}).then(function(a){return a.data.hydrators}).catch(function(){b.error="Unable to fetch hydrators for hydrator dropdown; you may need to reload the page"});return c}}}])}(),function(){"use strict";angular.module("ag-admin").factory("SettingsDashboardRepository",["$http","apiBasePath","Hal",function(a,b,c){return{fetch:function(){var d={method:"GET",url:b+"/settings-dashboard"};return a(d).then(function(a){var b,d=a.data;return b=d.hasOwnProperty("authentication")?!1:c.pluckCollection("authentication",d),{authentication:b,contentNegotiation:c.pluckCollection("content_negotiation",d),dbAdapters:c.pluckCollection("db_adapter",d),doctrineAdapters:c.pluckCollection("doctrine_adapter",d)}})}}}])}(),function(){"use strict";angular.module("ag-admin").factory("toggleSelection",function(){return function(a,b){var c=b.target;c.checked?a.push(c.value):a.splice(a.indexOf(c.value),1)}})}(),function(){"use strict";angular.module("ag-admin").factory("ValidatorsServicesRepository",["$http","flash","apiBasePath",function(a,b,c){var d=c+"/validators";return{getList:function(){var c=a({method:"GET",url:d}).then(function(a){return a.data.validators}).catch(function(){return b.error="Unable to fetch validators for validator dropdown; you may need to reload the page",!1});return c}}}])}(),function(a){"use strict";angular.module("ag-admin").factory("Hal",function(){return{props:function(a){return a=this.stripLinks(a),this.stripEmbedded(a)},stripLinks:function(b){if("object"!=typeof b)return b;if(Array.isArray(b)){var c=this;return a.forEach(b,function(a,d){b[d]=c.stripLinks(a)}),b}if(!b._links)return b;var d=a.cloneDeep(b);return delete d._links,d},stripEmbedded:function(b){if("object"!=typeof b)return b;if(Array.isArray(b)){var c=this;return a.forEach(b,function(a,d){b[d]=c.stripEmbedded(a)}),b}if(!b._embedded)return b;var d=a.cloneDeep(b);return delete d._embedded,d},pluckCollection:function(b,c){return"object"!=typeof c||Array.isArray(c)?[]:c._embedded&&c._embedded[b]?a.cloneDeep(c._embedded[b]):[]},getLink:function(a,b){return"object"!=typeof b||Array.isArray(b)?!1:b._links&&b._links[a]&&b._links[a].href?b._links[a].href:!1}}})}(_),angular.module("templates-main",["html/api/authorization.html","html/api/documentation-method-edit.html","html/api/documentation-method-view.html","html/api/index-sidebar.html","html/api/index.html","html/api/input-edit.html","html/api/input-filter-edit.html","html/api/input-filter-view.html","html/api/input-filter/filter-new.html","html/api/input-view.html","html/api/overview.html","html/api/rest-services/documentation-edit-collection-pane.html","html/api/rest-services/documentation-edit-entity-pane.html","html/api/rest-services/documentation-edit.html","html/api/rest-services/documentation-view-collection-pane.html","html/api/rest-services/documentation-view-entity-pane.html","html/api/rest-services/documentation-view.html","html/api/rest-services/edit.html","html/api/rest-services/index.html","html/api/rest-services/new.html","html/api/rest-services/remove.html","html/api/rest-services/settings-edit.html","html/api/rest-services/settings-view.html","html/api/rest-services/source-code.html","html/api/rest-services/view.html","html/api/rpc-services/documentation-edit.html","html/api/rpc-services/documentation-view.html","html/api/rpc-services/edit.html","html/api/rpc-services/index.html","html/api/rpc-services/new.html","html/api/rpc-services/remove.html","html/api/rpc-services/settings-edit.html","html/api/rpc-services/settings-view.html","html/api/rpc-services/source-code.html","html/api/rpc-services/view.html","html/api/sidebar.html","html/breadcrumbs.html","html/content.html","html/dashboard-sidebar.html","html/directives/ag-edit-inplace.html","html/empty-content.html","html/empty.html","html/index.html","html/modals/cache-check.html","html/modals/create-api-form.html","html/modals/fs-perms.html","html/modals/help-content-negotiation.html","html/modals/help-input-filter.html","html/modals/source-code.html","html/settings/authentication/http-basic-edit.html","html/settings/authentication/http-basic-view.html","html/settings/authentication/http-basic.html","html/settings/authentication/http-digest-edit.html","html/settings/authentication/http-digest-view.html","html/settings/authentication/http-digest.html","html/settings/authentication/index.html","html/settings/authentication/new-http-basic.html","html/settings/authentication/new-http-digest.html","html/settings/authentication/new-oauth2.html","html/settings/authentication/oauth2-edit.html","html/settings/authentication/oauth2-view.html","html/settings/authentication/oauth2.html","html/settings/authentication/remove.html","html/settings/content-negotiation/edit.html","html/settings/content-negotiation/index.html","html/settings/content-negotiation/new-selector-form.html","html/settings/content-negotiation/remove.html","html/settings/content-negotiation/view.html","html/settings/dashboard.html","html/settings/db-adapters/edit.html","html/settings/db-adapters/index.html","html/settings/db-adapters/new-adapter-form.html","html/settings/db-adapters/remove.html","html/settings/db-adapters/view.html","html/settings/doctrine-adapters/edit.html","html/settings/doctrine-adapters/index.html","html/settings/doctrine-adapters/remove.html","html/settings/doctrine-adapters/view.html","html/settings/sidebar.html","html/view-navigation.html"]),angular.module("html/api/authorization.html",[]).run(["$templateCache",function(a){a.put("html/api/authorization.html",'<div class="panel panel-warning" ng-hide="authentication.configured">\n    <div class="panel-heading">\n        <h4 class="panel-title">No Authentication configured!</h4>\n    </div>\n\n    <div class="panel-body">\n        <p>\n            You do not have authentication configured at this time. Marking services\n            as requiring authorization will make them inaccessible.\n        </p>\n\n        <p>\n            You can configure authentication on the <a\n            ui-sref="ag.settings.authentication">authentication\n            screen</a>.\n        </p>\n    </div>\n</div>\n\n<p>\n    A <input type="checkbox" checked> check means authentication is\n    <strong>required</strong> for the given combination of service\n    and HTTP method.\n</p>\n\n<form ag-form>\n<table class="table table-bordered table-striped table-responsive">\n    <thead>\n        <tr class="success">\n            <th>Service Name</th>\n            <th class="text-center">GET    <br><input type="checkbox" ng-click="updateColumn($event, \'GET\')"    ng-disabled="!editable"></th>\n            <th class="text-center">POST   <br><input type="checkbox" ng-click="updateColumn($event, \'POST\')"   ng-disabled="!editable"></th>\n            <th class="text-center">PATCH  <br><input type="checkbox" ng-click="updateColumn($event, \'PATCH\')"  ng-disabled="!editable"></th>\n            <th class="text-center">PUT    <br><input type="checkbox" ng-click="updateColumn($event, \'PUT\')"    ng-disabled="!editable"></th>\n            <th class="text-center">DELETE <br><input type="checkbox" ng-click="updateColumn($event, \'DELETE\')" ng-disabled="!editable"></th>\n            <th class="text-center">&nbsp;</th>\n        </tr>\n    </thead>\n\n    <tbody>\n        <tr ng-repeat="(name, data) in apiAuthorizations">\n            <td>{{name | servicename}} {{name | servicetype}}</td>\n            <td class="text-center"><input type="checkbox" ng-model="apiAuthorizations[name].GET" ng-disabled="!isEditable(name, \'GET\')"></td>\n            <td class="text-center"><input type="checkbox" ng-model="apiAuthorizations[name].POST" ng-disabled="!isEditable(name, \'POST\')"></td>\n            <td class="text-center"><input type="checkbox" ng-model="apiAuthorizations[name].PATCH" ng-disabled="!isEditable(name, \'PATCH\')"></td>\n            <td class="text-center"><input type="checkbox" ng-model="apiAuthorizations[name].PUT" ng-disabled="!isEditable(name, \'PUT\')"></td>\n            <td class="text-center"><input type="checkbox" ng-model="apiAuthorizations[name].DELETE" ng-disabled="!isEditable(name, \'DELETE\')"></td>\n            <td class="text-center success"><input type="checkbox" ng-click="updateRow($event, name)" ng-disabled="!editable"></td>\n        </tr>\n    </tbody>\n</table>\n\n<div class="btn-group pull-right">\n    <!-- todo Create "cancel"/"reset" functionality -->\n    <button class="btn btn-sm btn-default" type="button" ng-disabled="!editable">Cancel</button>\n    <button class="btn btn-sm btn-success" type="button" ng-click="saveAuthorization()" ng-disabled="!editable">Save</button>\n</div>\n</form>\n\n<div class="clearfix"></div>\n')}]),angular.module("html/api/documentation-method-edit.html",[]).run(["$templateCache",function(a){a.put("html/api/documentation-method-edit.html",'<div class="form-group">\n    <label class="control-label">Description</label>\n    <div class="controls">\n        <textarea \n            placeholder="Insert the {{method}} description here"\n            class="form-control input-xlarge" \n            required=""\n            rows="3"\n            ng-model="methodData.description"></textarea>\n        <p class="help-block">The description of the {{method}} HTTP method</p>\n    </div>\n</div>\n\n<div class="form-group" ng-hide="method == \'GET\'">\n    <label class="control-label">Request Body</label>\n\n    <button type="button" ng-click="generate(methodData, method, \'request\')" class="btn btn-default btn-xs pull-right">\n        <i class="glyphicon glyphicon-refresh"></i>\n        generate from configuration\n    </button>\n\n    <div class="controls">\n        <textarea placeholder="Insert the request specification" class="form-control input-xlarge" required="" rows="10" ng-model="methodData.request"></textarea>\n        <p class="help-block">The HTTP request specification</p>\n    </div>\n</div>\n<div class="clearfix"></div>\n\n<div class="form-group">\n    <label class="control-label">Response Body</label>\n\n    <button type="button" ng-click="generate(methodData, method, \'response\', restPart)" class="btn btn-default btn-xs pull-right">\n        <i class="glyphicon glyphicon-refresh"></i>\n        generate from configuration\n    </button>\n\n    <div class="controls">\n        <textarea placeholder="Insert the response specification" class="form-control input-xlarge" required="" rows="10" ng-model="methodData.response"></textarea>\n        <p class="help-block">The HTTP response specification</p>\n    </div>\n</div>\n\n<div class="clearfix"></div>\n')}]),angular.module("html/api/documentation-method-view.html",[]).run(["$templateCache",function(a){a.put("html/api/documentation-method-view.html",'<div ng-show="requiresAuthorization(method, restPart)">\n    <button class="btn btn-sm btn-danger">Authorization Required</button>\n</div>\n\n<div ng-show="methodData.description">\n    <div ng-bind-html="methodData.description"></div>\n</div>\n\n<div ng-hide="methodData.description" class="text-muted">\n    No description available.\n</div>\n\n<div class="panel panel-default">\n    <div class="panel-heading">\n        <h4 class="panel-title">Request</h4>\n    </div>\n\n    <div class="panel-body">\n        <div class="control-group" ng-show="service.accept_whitelist || service.content_type_whitelist">\n            <label class="control-label">Headers</label>\n            <table class="table table-striped">\n                <tr ng-show="service.accept_whitelist">\n                    <td width="30%"><strong>Accept</strong></td>\n                    <td>{{ service.accept_whitelist.join(\', \') }}</td>\n                </tr>\n                <tr ng-show="method != \'GET\' && service.content_type_whitelist">\n                    <td width="30%"><strong>Content-Type</strong></td>\n                    <td>{{ service.content_type_whitelist.join(\', \') }}</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class="control-group" ng-hide="method == \'GET\'">\n            <label class="control-label">Body</label>\n            <div ng-show="methodData.request"><pre ng-bind-html="methodData.request"></pre></div>\n            <div ng-hide="methodData.request" class="text-muted">No request body available.</div>\n        </div>\n    </div>\n</div>\n\n<div class="panel panel-default">\n    <div class="panel-heading">\n        <h4 class="panel-title">Response</h4>\n    </div>\n\n\n    <div class="panel-body">\n        <div ng-show="method!= \'GET\' && service.content_type_whitelist" class="control-group">\n            <label class="control-label">Headers</label>\n            <table class="table table-striped">\n                <tr>\n                    <td width="30%"><strong>Content-Type</strong></td>\n                    <td>{{ service.content_type_whitelist.join(\', \') }}</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class="control-group">\n            <label class="control-label">Response Body</label>\n            <div ng-show="methodData.response"><pre ng-bind-html="methodData.response"></pre></div>\n            <div ng-hide="methodData.response" class="text-muted">No response body available.</div>\n        </div>\n    </div>\n</div>\n\n')}]),angular.module("html/api/index-sidebar.html",[]).run(["$templateCache",function(a){a.put("html/api/index-sidebar.html",'<button class="btn btn-sm btn-primary"\n  title="Create New API"\n  ng-click="dialog()">\n  <i class="glyphicon glyphicon-plus"></i> Create New API\n</button>\n\n')}]),angular.module("html/api/index.html",[]).run(["$templateCache",function(a){a.put("html/api/index.html",'<ul class="list-group">\n  <li ng-repeat="api in apiList" class="list-group-item">\n    <h4><a ui-sref=".version(api)">{{ api.apiName }}</a></h4>\n  </li>\n</ul>\n\n')}]),angular.module("html/api/input-edit.html",[]).run(["$templateCache",function(a){a.put("html/api/input-edit.html",'<div class="panel panel-default"><div class="panel-body">\n  <label class="control-label">Description</label>\n  <textarea class="form-control input-xlarge" ng-model="input.description"></textarea>\n</div></div>\n\n<div class="panel panel-default"><div class="panel-body">\n    <label class="control-label">Will this field be a file upload?</label>\n    <toggle-switch model="input.file_upload" class="small pull-right" on-label="Yes" off-label="No"></toggle-switch>\n</div></div>\n\n<div class="panel panel-default"><div class="panel-body">\n    <label class="control-label">Required</label>\n    <toggle-switch model="input.required" class="small pull-right" on-label="Yes" off-label="No"></toggle-switch>\n</div></div>\n\n<div class="panel panel-default"><div class="panel-body">\n    <label class="control-label">Allow Empty</label>\n    <toggle-switch model="input.allow_empty" class="small pull-right" on-label="Yes" off-label="No"></toggle-switch>\n</div></div>\n\n<div class="panel panel-default"><div class="panel-body">\n    <label class="control-label">Continue if Empty</label>\n    <toggle-switch model="input.continue_if_empty" class="small pull-right" on-label="Yes" off-label="No"></toggle-switch>\n</div></div>\n\n<div class="panel panel-default"><div class="panel-body">\n    <label class="control-label">Validation Failure Message</label>\n    <textarea class="form-control input-xlarge" ng-model="input.error_message"></textarea>\n    <p class="help-block">Error message to display if field does not validate</p>\n</div></div>\n\n<ag-collapse class="panel-warning">\n    <collapse-header>\n        <h4 class="panel-title">\n            <i class="glyphicon glyphicon-filter"></i>\n            Filters\n\n            <button type="button" class="btn btn-sm btn-primary pull-right" \n                collapse-button\n                ng-hide="input.showNewFilterForm"\n                ng-click="input.showNewFilterForm = true">\n                Add Filter\n            </button>\n        </h4>\n\n        <div class="clearfix"></div>\n    </collapse-header>\n    \n    <collapse-body>\n        <div ui-sortable="{handle: \'.filter-handle\'}" ng-model="input.filters">\n            <ag-collapse class="panel-blank" ng-repeat="filter in input.filters">\n                <collapse-header>\n                    <h4 class="panel-title">\n                        <i class="glyphicon glyphicon-resize-vertical filter-handle"></i>\n\n                        {{filter.name}}\n\n                        <div class="btn-group pull-right">\n                            <button type="button" class="btn btn-sm btn-primary" title="Add Option"\n                                collapse-button\n                                ng-hide="filter.showNewOptionForm"\n                                ng-click="filter.showNewOptionForm = true">Add Option</button>\n                            <button type="button" class="btn btn-sm btn-danger" \n                                collapse-button\n                                ng-click="removeFilter(input, $index)">\n                                <i class="glyphicon glyphicon-trash"></i>\n                            </button>\n                        </div>\n                    </h4>\n                    <div class="clearfix"></div>\n                </collapse-header>\n            \n                <collapse-body class="list-group in">\n                    <li \n                        class="list-group-item"\n                        ag-hover\n                        ng-repeat="(optionName, optionValue) in filter.options">\n                        <div class="form-group form-horizontal">\n                            <label class="control-label col-sm-4">{{optionName}}:</label>\n\n                            <div class="col-sm-7">\n                                <p class="form-control-static input-xlarge"\n                                    ng-show="filterOptions[filter.name][optionName] == \'bool\'"\n                                    ng-class="{true: \'text-info\', false: \'text-muted\'}[optionValue]">\n                                    {{optionValue && \'Yes\' || \'No\'}}\n                                </p>\n                                <p \n                                    class="form-control-static input-xlarge"\n                                    ng-show="filterOptions[filter.name][optionName] != \'bool\'">\n                                    {{ optionValue }}\n                                </p>\n                            </div>\n\n                            <div class="col-sm-1">\n                                <button \n                                    type="button" class="btn btn-sm btn-danger pull-right"\n                                    ag-hover-target\n                                    ng-click="removeOption(filter.options, optionName)">\n                                    <i class="glyphicon glyphicon-trash"></i></button>\n                            </div>\n                        </div>\n                        <div class="clearfix"></div>\n                    </li>\n\n                    <li class="list-group-item" ng-show="filter.showNewOptionForm">\n                        <div class="form-group">\n                            <select class="input-xlarge" ui-select2="{placeholder: \'Select Option\', width: \'300px\' }" type="text" ng-model="filter._newOptionName">\n                                <option ng-repeat="(key, value) in filterOptions[filter.name]" value="{{key}}">{{key}}</option>\n                            </select>\n\n                            <br />\n\n                            <button \n                                type="button" class="btn btn-sm"\n                                ng-show="filter._newOptionName && (filterOptions[filter.name][filter._newOptionName] == \'bool\')"\n                                ng-class="{true: \'btn-success\', false: \'btn-default\'}[filter._newOptionValue]"\n                                ng-click="filter._newOptionValue = !filter._newOptionValue">{{filter._newOptionValue && \'On\' || \'Off\'}}</button>\n                            <input \n                                type="text" class="form-control input-xlarge" \n                                ng-show="filter._newOptionName && (filterOptions[filter.name][filter._newOptionName] != \'bool\')"\n                                ng-model="filter._newOptionValue">\n                        </div>\n\n                        <div class="btn-group ag-new-input pull-right">\n                            <button type="button" class="btn btn-sm btn-default" \n                                ng-click="filter.showNewOptionForm = null">Cancel</button>\n                            <button type="button" class="btn btn-sm btn-primary"\n                                ng-click="addFilterOption(filter)">Add Option</button>\n                        </div>\n\n                        <div class="clearfix"></div>\n                    </li>\n                </collapse-body>\n            </ag-collapse>\n        </div>\n\n        <div class="panel panel-blank" ng-show="input.showNewFilterForm">\n            <div class="panel-body">\n                <select class="input-xlarge" ui-select2="{placeholder: \'Select Filter\', width: \'300px\' }" type="text" ng-model="input._newFilterName">\n                    <option ng-repeat="(key, value) in filterOptions" value="{{key}}">{{key}}</option>\n                </select>\n\n                <div class="btn-group pull-right">\n                    <button type="button" class="btn btn-sm btn-default"\n                        ng-click="input.showNewFilterForm = false">Cancel</button>\n                    <button type="button" class="btn btn-sm btn-primary"\n                        ng-click="addFilter(input)">Add Filter</button>\n                </div>\n            </div>\n        </div>\n    </collapse-body>\n</ag-collapse>\n\n<ag-collapse class="panel-warning">\n    <collapse-header>\n        <h4 class="panel-title">\n            <i class="glyphicon glyphicon-ok"></i>\n            Validators\n\n            <button type="button" class="btn btn-sm btn-primary pull-right"\n                collapse-button\n                ng-hide="input.showNewValidatorForm"\n                ng-click="input.showNewValidatorForm = true">\n                Add Validator\n            </button>\n        </h4>\n\n        <div class="clearfix"></div>\n    </collapse-header>\n\n    <collapse-body>\n        <div ui-sortable="{handle: \'.validator-handle\'}" ng-model="input.validators">\n            <ag-collapse class="panel panel-blank" ng-repeat="validator in input.validators">\n                <collapse-header>\n                    <h4 class="panel-title">\n                        <i class="glyphicon glyphicon-resize-vertical validator-handle"></i>\n\n                        {{validator.name}}\n\n                        <div class="btn-group pull-right">\n                            <button type="button" class="btn btn-sm btn-primary" title="Add Option"\n                                collapse-button\n                                ng-hide="validator.showNewOptionForm"\n                                ng-click="validator.showNewOptionForm = true">Add Option</button>\n                            <button type="button" class="btn btn-sm btn-danger" \n                                collapse-button\n                                ng-click="removeValidator(input, $index)">\n                                <i class="glyphicon glyphicon-trash"></i>\n                            </button>\n                        </div>\n                    </h4>\n                    <div class="clearfix"></div>\n                </collapse-header>\n            \n                <collapse-body class="list-group in">\n                    <li \n                        class="list-group-item" \n                        ag-hover\n                        ng-repeat="(optionName, optionValue) in validator.options">\n                        <div class="form-group form-horizontal">\n                            <label class="control-label col-sm-4">{{optionName}}:</label>\n\n                            <div class="col-sm-7">\n                                <p class="form-control-static input-xlarge"\n                                    ng-show="validatorOptions[validator.name][optionName] == \'bool\'"\n                                    ng-class="{true: \'text-info\', false: \'text-muted\'}[optionValue]">\n                                    {{optionValue && \'Yes\' || \'No\'}}\n                                </p>\n                                <p \n                                    class="form-control-static input-xlarge"\n                                    ng-show="validatorOptions[validator.name][optionName] != \'bool\'">\n                                    {{ optionValue }}\n                                </p>\n                            </div>\n\n                            <div class="col-sm-1">\n                                <button \n                                    type="button" class="btn btn-sm btn-danger pull-right"\n                                    ag-hover-target\n                                    ng-click="removeOption(validator.options, optionName)">\n                                    <i class="glyphicon glyphicon-trash"></i></button>\n                            </div>\n                        </div>\n                        <div class="clearfix"></div>\n                    </li>\n\n                    <li class="list-group-item" ng-show="validator.showNewOptionForm">\n                        <div class="form-group">\n                            <select class="input-xlarge" ui-select2="{placeholder: \'Select Option\', width: \'300px\' }" type="text" ng-model="validator._newOptionName">\n                                <option ng-repeat="(key, value) in validatorOptions[validator.name]" value="{{key}}">{{key}}</option>\n                            </select>\n\n                            <br />\n\n                            <toggle-switch \n                                ng-show="validator._newOptionName && (validatorOptions[validator.name][validator._newOptionName] == \'bool\')"\n                                model="validator._newOptionValue"\n                                on-label="Yes"\n                                off-label="No"\n                                class="small"></toggle-switch>\n                            <input \n                                type="text" class="form-control input-xlarge" \n                                ng-show="validator._newOptionName && (validatorOptions[validator.name][validator._newOptionName] != \'bool\')"\n                                ng-model="validator._newOptionValue">\n                        </div>\n\n                        <div class="btn-group ag-new-input pull-right">\n                            <button type="button" class="btn btn-sm btn-default" \n                                ng-click="validator.showNewOptionForm = null">Cancel</button>\n                            <button type="button" class="btn btn-sm btn-primary"\n                                ng-click="addValidatorOption(validator)">Add Option</button>\n                        </div>\n\n                        <div class="clearfix"></div>\n                    </li>\n                </collapse-body>\n            </ag-collapse>\n        </div>\n\n        <div class="panel panel-blank" ng-show="input.showNewValidatorForm">\n            <div class="panel-body">\n                <select class="input-xlarge" ui-select2="{placeholder: \'Select Validator\', width: \'300px\' }" type="text" ng-model="input._newValidatorName">\n                    <option ng-repeat="(key, value) in validatorOptions" value="{{key}}">{{key}}</option>\n                </select>\n\n                <div class="btn-group pull-right">\n                    <button type="button" class="btn btn-sm btn-default"\n                        ng-click="input.showNewValidatorForm = false">Cancel</button>\n                    <button type="button" class="btn btn-sm btn-primary"\n                        ng-click="addValidator(input)">Add Validator</button>\n                </div>\n            </div>\n        </div>\n    </collapse-body>\n</ag-collapse>\n\n')}]),angular.module("html/api/input-filter-edit.html",[]).run(["$templateCache",function(a){a.put("html/api/input-filter-edit.html",'<div ng-controller="ApiServiceInputController">\n    <div class="ag-new-input">\n        <button class="btn btn-info pull-left" title="Help"\n            ng-click="help()"\n            data-toggle="modal" data-target="#inputHelp">\n            <i class="glyphicon glyphicon-info-sign"></i>\n        </button>\n\n        <form class="form-inline pull-right">\n            <div class="form-group">\n                <input\n                    type="text" class="form-control input-xlarge" placeholder="Field name"\n                    ag-on-enter="addInput()"\n                    ng-model="newInput">\n            </div>\n            <button type="button" ng-click="addInput()" class="btn btn-sm btn-primary">Create New Field</button>\n        </form>\n    </div>\n    <div class="ag-new-input clearfix"></div>\n\n<form ag-form>\n    <div class="ag panel-group tooltip-api">\n        <ag-collapse \n            class="panel-success"\n            ng-repeat="input in service.input_filter">\n            <collapse-header>\n\n                <h4 class="panel-title">\n                    <i class="glyphicon glyphicon-tasks"></i>\n\n                    <ag-edit-inplace name="input.name" validate="validateInputName(input.name, input)"></ag-edit-inplace>\n\n                    <button \n                        type="button" class="btn btn-sm btn-danger pull-right" title="Remove field"\n                        collapse-button\n                        ng-click="removeInput($index)">\n                        <i class="glyphicon glyphicon-trash"></i>\n                    </button>\n                </h4>\n\n                <div class="clearfix"></div>\n            </collapse-header>\n\n            <collapse-body>\n                <div class="panel-body">\n                    <ng-include src="\'html/api/input-edit.html\'" onload="index = $index; input = input"></ng-include>\n                </div>\n            </collapse-body>\n        </ag-collapse>\n    </div>\n\n    <div class="ag-new-input btn-group pull-right">\n        <!-- todo Make the "cancel" action revert  -->\n        <button type="button" class="btn btn-sm btn-default"\n            ag-cancel-edit>Cancel</button>\n        <button type="submit" class="btn btn-sm btn-success" ng-click="saveInput()">Save Changes</button>\n    </div>\n</form>\n</div>\n\n')}]),angular.module("html/api/input-filter-view.html",[]).run(["$templateCache",function(a){a.put("html/api/input-filter-view.html",'<div class="ag panel-group tooltip-api" ng-controller="ApiServiceInputController">\n    <div class="panel panel-blank" ng-show="service.input_filter.length === 0"><div class="panel-body">\n        <p>\n            No fields have been configured.\n        </p>\n    </div></div>\n\n    <ag-collapse \n        class="panel-default"\n        ng-repeat="input in service.input_filter">\n        <collapse-header>\n            <h4 class="panel-title">\n                <i class="glyphicon glyphicon-tasks"></i>\n                {{ input.name }}\n            </h4>\n        </collapse-header>\n\n        <collapse-body>\n            <div class="panel-body">\n                <ng-include src="\'html/api/input-view.html\'" onload="index = $index; input = input"></ng-include>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n</div>\n\n')
}]),angular.module("html/api/input-filter/filter-new.html",[]).run(["$templateCache",function(a){a.put("html/api/input-filter/filter-new.html",'<div class="panel-body">\n    <select class="input-xlarge" ui-select2="{placeholder: \'Select Filter\', width: \'300px\' }" type="text" ng-model="input._newFilterName">\n        <option ng-repeat="(key, value) in filterOptions" value="{{key}}">{{key}}</option>\n    </select>\n\n    <div class="btn-group pull-right">\n        <button \n            type="button" class="btn btn-sm btn-default"\n            collapse-flag flags="{newFilterFormVisible: false}">Cancel</button>\n        <button type="button" class="btn btn-sm btn-primary"\n            ng-click="addFilter(input)">Add Filter</button>\n    </div>\n</div>\n')}]),angular.module("html/api/input-view.html",[]).run(["$templateCache",function(a){a.put("html/api/input-view.html",'<div class="panel panel-default"><div class="panel-body">\n  <label class="control-label">Description</label>\n  <p class="text-muted">{{ input.description }}</p>\n</div></div>\n\n<div class="panel panel-default"><div class="panel-body">\n    <span class="form-control-static input-xlarge pull-right" ng-class="{true: \'text-info\', false: \'text-muted\'}[input.file_upload]">\n        <strong>{{input.file_upload && \'Yes\' || \'No\'}}</strong>\n    </span>\n\n    <label class="control-label">Is this field a file upload?</label>\n</div></div>\n\n<div class="panel panel-default"><div class="panel-body">\n    <span class="form-control-static input-xlarge pull-right" ng-class="{true: \'text-info\', false: \'text-muted\'}[input.required]">\n        <strong>{{input.required && \'Yes\' || \'No\'}}</strong>\n    </span>\n\n    <label class="control-label">Required</label>\n</div></div>\n\n<div class="panel panel-default"><div class="panel-body">\n    <span class="form-control-static input-xlarge pull-right" ng-class="{true: \'text-info\', false: \'text-muted\'}[input.allow_empty]">\n        <strong>{{input.allow_empty && \'Yes\' || \'No\'}}</strong>\n    </span>\n\n    <label class="control-label">Allow Empty</label>\n</div></div>\n\n<div class="panel panel-default"><div class="panel-body">\n    <span class="form-control-static input-xlarge pull-right" ng-class="{true: \'text-info\', false: \'text-muted\'}[input.continue_if_empty]">\n        <strong>{{input.continue_if_empty && \'Yes\' || \'No\'}}</strong>\n    </span>\n\n    <label class="control-label">Continue if Empty</label>\n</div></div>\n\n<div ng-show="input.error_message" class="panel panel-default"><div class="panel-body">\n    <label class="control-label">Validation Failure Message</label>\n    <p class="text-muted">{{ input.error_message }}</textarea>\n</div></div>\n\n<div ng-show="input.filters.length > 0">\n<ag-collapse class="panel-warning">\n    <collapse-header>\n        <h4 class="panel-title">\n            <i class="glyphicon glyphicon-filter"></i>\n            Filters\n        </h4>\n    </collapse-header>\n    \n    <collapse-body>\n        <ag-collapse class="panel-blank" ng-repeat="filter in input.filters">\n            <collapse-header>\n                <h4 class="panel-title">\n                    {{filter.name}}\n                </h4>\n            </collapse-header>\n        \n            <collapse-body class="list-group in">\n                <li class="list-group-item"\n                    ng-repeat="(optionName, optionValue) in filter.options">\n                    <div class="form-group form-horizontal">\n                        <label class="control-label col-sm-4">{{optionName}}:</label>\n\n                        <div class="col-sm-7">\n                            <p class="form-control-static input-xlarge"\n                                ng-show="filterOptions[filter.name][optionName] == \'bool\'"\n                                ng-class="{true: \'text-info\', false: \'text-muted\'}[optionValue]">\n                                {{optionValue && \'Yes\' || \'No\'}}\n                            </p>\n                            <p \n                                class="form-control-static input-xlarge"\n                                ng-show="filterOptions[filter.name][optionName] != \'bool\'">\n                                {{ optionValue }}\n                            </p>\n                        </div>\n                    </div>\n                </li>\n            </collapse-body>\n        </ag-collapse>\n    </collapse-body>\n</ag-collapse>\n</div>\n\n<div ng-show="input.validators.length > 0">\n<ag-collapse class="panel-warning">\n    <collapse-header>\n        <h4 class="panel-title">\n            <i class="glyphicon glyphicon-ok"></i>\n            Validators\n        </h4>\n    </collapse-header>\n\n    <collapse-body>\n        <ag-collapse class="panel panel-blank" ng-repeat="validator in input.validators">\n            <collapse-header>\n                <h4 class="panel-title">\n                    {{validator.name}}\n                </h4>\n            </collapse-header>\n        \n            <collapse-body class="list-group in">\n                <li class="list-group-item" \n                    ng-repeat="(optionName, optionValue) in validator.options">\n                    <div class="form-group form-horizontal">\n                        <label class="control-label col-sm-4">{{optionName}}:</label>\n\n                        <div class="col-sm-7">\n                            <p class="form-control-static input-xlarge"\n                                ng-show="validatorOptions[validator.name][optionName] == \'bool\'"\n                                ng-class="{true: \'text-info\', false: \'text-muted\'}[optionValue]">\n                                {{optionValue && \'Yes\' || \'No\'}}\n                            </p>\n                            <p \n                                class="form-control-static input-xlarge"\n                                ng-show="validatorOptions[validator.name][optionName] != \'bool\'">\n                                {{ optionValue }}\n                            </p>\n                        </div>\n                    </div>\n                </li>\n            </collapse-body>\n        </ag-collapse>\n    </collapse-body>\n</ag-collapse>\n</div>\n\n')}]),angular.module("html/api/overview.html",[]).run(["$templateCache",function(a){a.put("html/api/overview.html",'<div class="panel panel-info table-responsive">\n    <div class="panel-heading">\n        <h4 class="panel-title">REST services</h4>\n    </div>\n\n    <table class="table body-striped">\n        <tbody ng-repeat="restService in api.restServices">\n            <tr>\n                <td rowspan="2" width="40%">\n                    <p><strong><a ui-sref=".rest({service: restService.service_name})">\n                        {{ restService.service_name }}\n                    </a></strong></p>\n\n                    <p class="text-muted" ng-show="restService.documentation.description">\n                        {{ restService.documentation.description }}\n                    </p>\n\n                    <p class="text-warning" ng-hide="restService.documentation.description">\n                        <a ui-sref=".rest({service: restService.service_name, view: \'documentation\', edit: true})">\n                            Add a description for this service\n                        </a>\n                    </p>\n                </td>\n\n                <td width="60%"><a ui-sref=".rest({service: restService.service_name})">{{ restService.route_match }}</a></td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<div class="panel panel-info">\n    <div class="panel-heading">\n        <h4 class="panel-title">RPC services</h4>\n    </div>\n\n    <table class="table body-striped">\n        <tbody ng-repeat="rpcService in api.rpcServices">\n            <tr>\n                <td rowspan="2" width="40%">\n                    <p><strong><a ui-sref=".rpc({service: rpcService.service_name})">\n                        {{ rpcService.service_name }}\n                    </a></strong></p>\n\n                    <p class="text-muted" ng-show="rpcService.documentation.description">\n                        {{ rpcService.documentation.description }}\n                    </p>\n\n                    <p class="text-warning" ng-hide="rpcService.documentation.description">\n                        <a ui-sref=".rpc({service: rpcService.service_name, view: \'documentation\', edit: true})">\n                            Add a description for this service\n                        </a>\n                    </p>\n                </td>\n                <td width="60%"><a ui-sref=".rpc({service: rpcService.service_name})">{{ rpcService.route_match }}</a></td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<div class="panel panel-info" ng-controller="ApiVersionController">\n    <div class="panel-heading">\n        <h4 class="panel-title pull-left">Versioning</h4>\n        <span class="btn-group pull-right">\n            <button class="btn btn-primary btn-sm" ng-click="createNewApiVersion()">Create New Version</button>\n        </span>\n        <div class="clearfix"></div>\n    </div>\n\n    <div class="panel-body">\n        <form class="form-inline">\n            <select\n                class="form-control input-xlarge pull-right"\n                id="default-api-version"\n                ng-model="defaultApiVersion"\n                ng-options="ver for ver in api.versions"\n                ng-change="setDefaultApiVersion()"></select>\n        </form>\n\n        <p>\n            <strong>Current Default API Version</strong>\n        </p>\n\n        <div class="clearfix"></div>\n    </div>\n</div>\n\n<div class="panel panel-danger">\n    <div class="panel-heading" ng-click="deleteApiPanelIsCollapsed = !deleteApiPanelIsCollapsed">\n        <h4 class="panel-title">Delete API</h4>\n    </div>\n\n    <div class="panel-body" collapse="deleteApiPanelIsCollapsed">\n        <p>Are you sure you want to delete this API?</p>\n\n        <p>\n            By default, deleting the API only removes the API module from the\n            application configuration. You can re-enable it by re-adding the\n            module to your application configuration at a later date.\n        </p>\n\n        <div class="form-group">\n            <label>\n                <input type="checkbox" ng-model="recursive">\n                Delete all files associated with this API?\n            </label>\n        </div>\n\n        <div class="btn-group pull-right">\n            <button type="button" class="btn btn-sm btn-default"\n                ng-click="deleteApiPanelIsCollapsed = !deleteApiPanelIsCollapsed">\n                No\n            </button>\n\n            <button type="button" class="btn btn-sm btn-danger"\n                ng-click="removeApi(recursive)">\n                Yes\n            </button>\n        </div>\n\n        <div class="clearfix"></div>\n    </div>\n</div>\n')}]),angular.module("html/api/rest-services/documentation-edit-collection-pane.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/documentation-edit-collection-pane.html",'<div class="panel-body">\n    <div class="form-group">\n        <label class="control-label">Description</label>\n        <div class="controls">\n            <textarea \n                placeholder="Insert the Collection description here"\n                class="form-control input-xlarge"\n                required=""\n                rows="3"\n                ng-model="restService.documentation.collection.description"></textarea>\n            <p class="help-block">The description of the Collection</p>\n        </div>\n    </div>\n\n    <div class="panel panel-default"><div class="panel-body">\n    <ag-tabs pills>\n        <ag-tab-pane ng-repeat="method in restService.collection_http_methods" title="{{method}}" ng-init="methodData = restService.documentation.collection[method]; restPart = \'collection\'"><div class="panel-body">\n            <ag-tab-pane-variable-content content-template="\'html/api/documentation-method-edit.html\'"></ag-tab-pane-variable-content>\n        </div></ag-tab-pane>\n    </ag-tabs>\n    </div></div>\n</div>\n')}]),angular.module("html/api/rest-services/documentation-edit-entity-pane.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/documentation-edit-entity-pane.html",'<div class="panel-body">\n    <div class="form-group">\n        <label class="control-label">Description</label>\n        <div class="controls">\n            <textarea \n                placeholder="Insert the Entity description here"\n                class="form-control input-xlarge"\n                required=""\n                rows="3"\n                ng-model="restService.documentation.entity.description"></textarea>\n            <p class="help-block">The description of the Entity</p>\n        </div>\n    </div>\n\n    <div class="panel panel-default"><div class="panel-body">\n    <ag-tabs pills>\n        <ag-tab-pane ng-repeat="method in restService.entity_http_methods" title="{{method}}" ng-init="methodData = restService.documentation.entity[method]; restPart = \'entity\'"><div class="panel-body">\n            <ag-tab-pane-variable-content content-template="\'html/api/documentation-method-edit.html\'"></ag-tab-pane-variable-content>\n        </div></ag-tab-pane>\n    </ag-tabs>\n    </div></div>\n</div>\n')}]),angular.module("html/api/rest-services/documentation-edit.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/documentation-edit.html",'<div ng-controller="ApiDocumentationController">\n    <form novalidate class="ag form" ng-submit="save(restService.documentation)" ag-form>\n        <div class="panel panel-default">\n            <div class="panel-body">\n                <div class="form-group">\n                    <label class="control-label">REST service description</label>\n                    <div class="controls">\n                        <textarea \n                            placeholder="Insert the description here"\n                            class="form-control input-xlarge"\n                            required=""\n                            rows="5"\n                            ng-model="restService.documentation.description"></textarea>\n                        <p class="help-block">The general description of the REST service</p>\n                    </div>\n                </div>\n\n                <div class="panel panel-default"><div class="panel-body">\n                <ag-tabs pills>\n                    <ag-tab-pane title="Collection">\n                        <ag-tab-pane-variable-content content-template="\'html/api/rest-services/documentation-edit-collection-pane.html\'"></ag-tab-pane-variable-content>\n                    </ag-tab-pane>\n\n                    <ag-tab-pane title="Entity">\n                        <ag-tab-pane-variable-content content-template="\'html/api/rest-services/documentation-edit-entity-pane.html\'"></ag-tab-pane-variable-content>\n                    </ag-tab-pane>\n                </ag-tabs>\n                </div></div>\n            </div>\n        </div>\n\n        <div class="ag-new-input btn-group pull-right">\n            <button type="button" class="btn btn-sm btn-default" ag-cancel-edit>Cancel</button>\n            <button type="submit" class="btn btn-sm btn-success">Save</button>\n        </div>\n    </form>\n</div>\n')}]),angular.module("html/api/rest-services/documentation-view-collection-pane.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/documentation-view-collection-pane.html",'<div class="panel-body">\n    <div ng-show="restService.documentation.collection.description">\n        <div ng-bind-html="restService.documentation.collection.description"></div>\n    </div>\n\n    <div class="text-muted" ng-hide="restService.documentation.collection.description">\n        No collection description yet provided.\n    </div>\n\n    <div class="panel panel-default"><div class="panel-body">\n    <ag-tabs pills>\n        <ag-tab-pane \n            title="{{method}}"\n            ng-repeat="method in restService.collection_http_methods"\n            ng-init="methodData = restService.documentation.collection[method]; restPart = \'collection\'"><div class="panel-body">\n            <ag-tab-pane-variable-content content-template="\'html/api/documentation-method-view.html\'"></ag-tab-pane-variable-content>\n        </div></ag-tab-pane>\n    </ag-tabs>\n    </div></div>\n</div>\n')}]),angular.module("html/api/rest-services/documentation-view-entity-pane.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/documentation-view-entity-pane.html",'<div class="panel-body">\n    <div ng-show="restService.documentation.entity.description">\n        <div ng-bind-html="restService.documentation.entity.description"></div>\n    </div>\n\n    <div class="text-muted" ng-hide="restService.documentation.entity.description">\n        No entity description yet provided.\n    </div>\n\n    <div class="panel panel-default"><div class="panel-body">\n    <ag-tabs pills>\n        <ag-tab-pane ng-repeat="method in restService.entity_http_methods" title="{{method}}" ng-init="methodData = restService.documentation.entity[method]; restPart = \'entity\'; service=restService"><div class="panel-body">\n            <ag-tab-pane-variable-content content-template="\'html/api/documentation-method-view.html\'"></ag-tab-pane-variable-content>\n        </div></ag-tab-pane>\n    </ag-tabs>\n    </div></div>\n</div>\n')}]),angular.module("html/api/rest-services/documentation-view.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/documentation-view.html",'<div ng-controller="ApiDocumentationController">\n    <div class="panel panel-default">\n        <div class="panel-body">\n            <h3>{{ restService.service_name }}: {{ restService.route_match }}</h3>\n\n            <div ng-show="restService.documentation.description">\n                <div ng-bind-html="restService.documentation.description"></div>\n            </div>\n\n            <div class="text-muted" ng-hide="restService.documentation.description">\n                No service description yet provided.\n            </div>\n\n            <div class="panel panel-default"><div class="panel-body">\n            <ag-tabs pills>\n                <ag-tab-pane title="Collection">\n                    <ag-tab-pane-variable-content content-template="\'html/api/rest-services/documentation-view-collection-pane.html\'"></ag-tab-pane-variable-content>\n                </ag-tab-pane>\n\n                <ag-tab-pane title="Entity">\n                    <ag-tab-pane-variable-content content-template="\'html/api/rest-services/documentation-view-entity-pane.html\'"></ag-tab-pane-variable-content>\n                </ag-tab-pane>\n            </ag-tabs>\n            </div></div>\n        </div>\n    </div>\n</div>\n\n')}]),angular.module("html/api/rest-services/edit.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/edit.html",'<ag-tabs class="panel-body">\n    <ag-tab-pane name="settings" active="{{ view == \'settings\' }}" searchparam="view" title="Settings">\n        <ag-tab-pane-variable-content content-template="\'html/api/rest-services/settings-edit.html\'"></ag-tab-pane-variable-content>\n    </ag-tab-pane>\n\n    <ag-tab-pane name="fields" active="{{ view == \'fields\' }}" searchparam="view" title="Fields">\n        <ag-tab-pane-variable-content content-template="\'html/api/input-filter-edit.html\'"\n            onload="index = $index"></ag-tab-pane-variable-content>\n    </ag-tab-pane>\n\n    <ag-tab-pane name="documentation" active="{{ view == \'documentation\' }}" searchparam="view" title="Documentation">\n        <ag-tab-pane-variable-content content-template="\'html/api/rest-services/documentation-edit.html\'"></ag-tab-pane-variable-content>\n    </ag-tab-pane>\n</ag-tabs>\n')}]),angular.module("html/api/rest-services/index.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/index.html",'<ag-include src="html/api/rest-services/new.html"></ag-include>\n\n<div ng-show="!api.restServices.length" class="text-muted">\n    No REST services defined.\n</div>\n\n<div class="panel-group tooltip-api">\n    <ag-collapse class="panel-info service" \n        ng-repeat="restService in api.restServices"\n        active="{{ activeService == restService.service_name }}"\n        name="{{ restService.service_name }}"\n        data-api="{{ api.name }}"\n        data-api-version="{{ version }}"\n        data-service-type="REST"\n        searchparam="service"\n        conditionals="{{ {edit: inEdit, delete: false} }}">\n        <collapse-header>\n            <h4 class="panel-title pull-left">\n                <span class="glyphicon glyphicon-leaf"></span> {{ restService.service_name }}\n            </h4>\n            <div class="btn-group pull-right service-buttons" ng-show="isLatestVersion()">\n                <button\n                    type="button" title="Cancel" class="btn btn-sm btn-default"\n                    collapse-button criteria="{delete: false}"\n                    ng-show="inEdit"\n                    ng-click="toggleEditState(restService.service_name, false)">\n                    Cancel\n                </button>\n\n                <button \n                    type="button" class="btn btn-sm btn-success" title="Edit service"\n                    collapse-button criteria="{delete: false}"\n                    ng-show="!inEdit"\n                    ng-click="toggleEditState(restService.service_name, true)">\n                    <i class="glyphicon glyphicon-edit"></i>\n                </button>\n\n                <button \n                    type="button" class="btn btn-sm btn-danger" title="Remove service"\n                    collapse-flag flags="{delete: true}"\n                    collapse-button criteria="{delete: false}">\n                    <i class="glyphicon glyphicon-trash"></i>\n                </button>\n            </div>\n\n            <div class="clearfix"></div>\n\n            <span collapse-show\n                criteria="{delete: false}"\n                default-template="\'html/empty-content.html\'"\n                toggled-template="\'html/api/rest-services/remove.html\'"></span>\n        </collapse-header>\n\n        <collapse-body>\n            <ag-toggle-include\n                condition="inEdit"\n                on-template="html/api/rest-services/edit.html"\n                off-template="html/api/rest-services/view.html"></ag-toggle-include>\n        </collapse-body>\n    </ag-collapse>\n</div>\n\n')}]),angular.module("html/api/rest-services/new.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/new.html",'<div ng-hide="showNewRestServiceForm || !isLatestVersion()">\n    <button \n        class="btn btn-default btn-primary pull-right" title="Create New REST Service"\n        ng-click="showNewRestServiceForm = true">\n        Create New REST Service\n    </button>\n\n    <div class="clearfix"></div>\n\n    <br />\n</div>\n\n<div ng-show="showNewRestServiceForm" class="panel panel-primary">\n    <div class="panel-heading">\n        <h4 class="panel-title">Create a new REST service</h4>\n    </div>\n\n    <div class="panel-body">\n        <ag-tabs parent="newService">\n            <ag-tab-pane title="Code-Connected"><div class="panel"><div class="panel-body">\n                <form class="form" ng-submit="newService.createNewRestService()" ag-form>\n                    <fieldset>\n                        <div class="form-group">\n                            <label class="control-label">REST Service Name</label>\n                            <input class="form-control input-xlarge" type="text" ng-model="newService.restServiceName" placeholder="REST Service Name ..." required="">\n                        </div>\n                    </fieldset>\n\n                    <div class="btn-group pull-right">\n                        <button\n                            type="button" class="btn btn-sm btn-default"\n                            ng-click="resetForm()">Cancel</button>\n                        <button type="submit" class="btn btn-sm btn-primary">\n                            Create Code-Connected REST Service</button>\n                    </div>\n\n                    <div class="clearfix"></div>\n                </form>\n            </div></div></ag-tab-pane>\n\n            <ag-tab-pane title="DB-Connected"><div class="panel"><div class="panel-body">\n                <div class="panel panel-warning" ng-show="dbAdapters.length < 1">\n                    <div class="panel-heading">\n                        <h4 class="panel-title">No DB Adapters Present</h4>\n                    </div>\n\n                    <div class="panel-body">\n                        <p>\n                            You have not yet configured any database adapters, and\n                            thus cannot create a DB-Connected REST service.\n                        </p>\n\n                        <p>\n                            You can create adapters on the \n                            <a ui-sref="ag.settings.db-adapters">Database Adapters setting page</a>.\n                        </p>\n                    </div>\n                </div>\n\n                <form class="form" \n                    ng-show="dbAdapters.length > 0"\n                    ng-submit="newService.createNewDbConnectedService()"\n                    ag-form>\n                    <fieldset>\n                        <div class="form-group">\n                            <label class="control-label">DB Adapter Name</label>\n                            <select class="form-control input-xlarge" ng-model="newService.dbAdapterName" ng-options="v.adapter_name as v.adapter_name for v in dbAdapters"></select>\n                        </div>\n\n                        <div class="form-group">\n                            <label class="control-label">Table Name</label>\n                            <input class="form-control input-xlarge" type="text" ng-model="newService.dbTableName" placeholder="DB Table Name ...">\n                        </div>\n                    </fieldset>\n\n                    <div class="btn-group pull-right">\n                        <button\n                            type="button" class="btn btn-sm btn-default"\n                            ng-click="resetForm()">Cancel</button>\n                        <button type="submit" class="btn btn-sm btn-primary">\n                            Create DB-Connected REST Service</button>\n                    </div>\n\n                    <div class="clearfix"></div>\n                </form>\n            </div></div></ag-tab-pane>\n            <ag-tab-pane title="Doctrine-Connected"><div class="panel"><div class="panel-body">\n                <div class="panel panel-warning" ng-show="doctrineAdapters.length < 1">\n                    <div class="panel-heading">\n                        <h4 class="panel-title">No Doctrine Adapters Present</h4>\n                    </div>\n\n                    <div class="panel-body">\n                        <p>\n                            You have not yet configured any doctrine adapters, and\n                            thus cannot create a Doctrine-Connected REST service.\n                        </p>\n\n                        <p>\n                            You can create adapters on the\n                            <a ng-href="admin#/global/doctrine-adapters">Doctrine Adapters setting page</a>.\n                        </p>\n                    </div>\n                </div>\n\n                <form class="form"\n                      ng-show="doctrineAdapters.length > 0"\n                      ng-submit="newService.createNewDoctrineConnectedService()"\n                      ag-form>\n                    <fieldset>\n                        <div class="form-group">\n                            <label class="control-label">Object Manager</label>\n                            <input class="form-control input-xlarge" type="text" ng-model="newService.doctrineObjectManager" placeholder="doctrine.entitymanager.orm_default">\n                        </div>\n                        <div class="form-group">\n                            <label class="control-label">Entity Class</label>\n                            <input class="form-control input-xlarge" type="text" ng-model="newService.doctrineEntityClass" placeholder="Namespace\\Entity\\ClassName">\n                        </div>\n                        <div class="form-group">\n                            <label class="control-label">Service Name</label>\n                            <input class="form-control input-xlarge" type="text" ng-model="newService.doctrineServiceName" placeholder="Service Name">\n                        </div>\n                        <div class="form-group">\n                            <label class="control-label">Hydrator</label>\n                            <input class="form-control" type="text" ng-model="newService.doctrineHydratorName" placeholder="Doctrine\\Entity\\HydratorName">\n                        </div>\n                        <label class="control-label">Hydrator Strategies</label>\n                        <div class="form-group" data-ng-repeat="strategy in newService.doctrineHydratorStrategies">\n                            <div class="input-group">\n                                <input type="text" class="form-control" readonly ng-model="strategy">\n						      <span class="input-group-btn">\n						        <button type="button" class="btn btn-danger" ng-click="newService.removeStrategy($index)"><i class="glyphicon glyphicon-trash"></i></button>\n						      </span>\n                            </div>\n                        </div>\n                        <div class="form-group">\n                            <div class="input-group">\n                                <input class="form-control" type="text" ng-model="newService.newStrategy" placeholder="Hydrator\\Strategy\\StrategyInterface">\n                              <span class="input-group-btn">\n                                <button type="button" class="btn btn-success" ng-click="newService.addStrategy()" ng-show="!newService.searching"><i class="glyphicon glyphicon-plus"></i></button>\n                                <button type="button" class="btn btn-warning disabled" ng-show="newService.searching"><i class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></i></button>\n                              </span>\n                            </div>\n                        </div>\n                        <div class="panel panel-default">\n                            <div class="panel-body">\n                                <label class="control-label">Hydrate by value</label>\n                                <toggle-switch class="small pull-right" model="newService.doctrineHydrateByValue" on-label="Yes" off-label="No"></toggle-switch>\n                            </div>\n                        </div>\n                        <div class="panel panel-default">\n                            <div class="panel-body">\n                                <label class="control-label">Use generated hydrator</label>\n                                <toggle-switch class="small pull-right" model="newService.doctrineUseGeneratedHydrator" on-label="Yes" off-label="No"></toggle-switch>\n                            </div>\n                        </div>\n                    </fieldset>\n\n                    <div class="btn-group pull-right">\n                        <button\n                                type="button" class="btn btn-sm btn-default"\n                                ng-click="resetForm()">Cancel</button>\n                        <button type="submit" class="btn btn-sm btn-primary">\n                            Create Doctrine-Connected REST Service</button>\n                    </div>\n\n                    <div class="clearfix"></div>\n                </form>\n            </div></div></ag-tab-pane>\n        </ag-tabs>\n    </div>\n</div>\n\n')
}]),angular.module("html/api/rest-services/remove.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/remove.html",'<div class="panel panel-danger">\n    <div class="panel-heading">Remove REST service</div>\n\n    <div class="panel-body">\n        <p>Are you sure you want to delete the service?</p>\n\n        <div class="form-group">\n            <label>\n                <input type="checkbox" ng-model="recursive">\n                Delete all files and directories for this service?\n            </label>\n        </div>\n\n        <div class="btn-group pull-right">\n            <button type="button" class="btn btn-sm btn-default"\n                collapse-flag flags="{delete: false}">\n                No\n            </button>\n            <button type="button" class="btn btn-sm btn-danger"\n                ng-click="removeRestService(restService, recursive)">\n                Yes\n            </button>\n        </div>\n    </div>\n</div>\n')}]),angular.module("html/api/rest-services/settings-edit.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/settings-edit.html",'<form novalidate class="ag form" ng-submit="saveRestService($index)" ag-form>\n<fieldset class="panel-group">\n    <ag-collapse class="panel-success">\n        <collapse-header>\n            <h4 class="panel-title">General Settings</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group in">\n            <div class="form-group list-group-item">\n                <label class="control-label">Route to match</label>\n                <div class="controls">\n                    <input type="text" placeholder="/api/your_resource" class="form-control input-xlarge" required="" ng-model="restService.route_match">\n                    <p class="help-block">\n                        The URI for the service; "[&nbsp;]" indicate optional\n                        segments, and ":varname" indicates a variable URI segment\n                        to capture.\n                    </p>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label">Number of entities to display per page of a collection</label>\n                <div class="controls">\n                    <input type="text" placeholder="25" class="form-control input-xlarge" ng-model="restService.page_size">\n                    <p class="help-block">Indicate the number of entities that should be displayed per page when GET requests are made to the collection.</p>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label">HTTP methods allowed for ENTITIES</label>\n                <div class="controls">\n                    <label ng-repeat="method in [\'GET\', \'POST\', \'PUT\', \'PATCH\', \'DELETE\']" class="checkbox inline">\n                        <input type="checkbox" name="entity_http_methods_test" value="{{method}}" ng-checked="restService.entity_http_methods.indexOf(method) > -1" ng-click="toggleSelection(restService.entity_http_methods, $event)">\n                        <span>{{method}}</span>\n                    </label>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label">HTTP methods allowed for COLLECTIONS</label>\n                <div class="controls">\n                    <label ng-repeat="method in [\'GET\', \'POST\', \'PUT\', \'PATCH\', \'DELETE\']" class="checkbox inline">\n                        <input type="checkbox" value="{{method}}" ng-checked="restService.collection_http_methods.indexOf(method) > -1" ng-click="toggleSelection(restService.collection_http_methods, $event)">\n                        <span>{{method}}</span>\n                    </label>\n                </div>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n    <ag-collapse class="panel-success" show="isDbConnected(restService)">\n        <collapse-header>\n            <h4 class="panel-title">Database Settings</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group">\n            <div class="form-group list-group-item">\n                <label class="control-label" for="selector">DB Adapter Name</label>\n                <div class="controls">\n                    <select\n                        class="form-control input-xlarge"\n                        ng-model="restService.adapter_name"\n                        ng-options="v.adapter_name as v.adapter_name for v in dbAdapters"></select>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label" for="table_name">DB Table Name</label>\n                <div class="controls">\n                    <input type="text" placeholder="Table Name" class="form-control input-xlarge" required="" ng-model="restService.table_name">\n                    <p class="help-block">The name of the database table used by this endpoint</p>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label" for="table_service">TableGateway Service Name</label>\n                <div class="controls">\n                    <input type="text" placeholder="TableGateway Service Name" class="form-control input-xlarge" required="" ng-model="restService.table_service">\n                    <p class="help-block">The name of the TableGateway service used by this endpoint; change only if you have created your own implementation.</p>\n                </div>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n    <ag-collapse class="panel-success" show="isDoctrineConnected(restService)">\n        <collapse-header>\n            <h4 class="panel-title">Doctrine Settings</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group">\n            <div class="form-group list-group-item">\n                <label class="control-label" for="object_manager">Object Manager</label>\n                <input class="form-control input-xlarge" type="text" ng-model="restService.object_manager" required="" placeholder="doctrine.entitymanager.orm_default">\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n    <ag-collapse class="panel-success">\n        <collapse-header>\n            <h4 class="panel-title">REST Parameters</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group">\n            <div class="form-group list-group-item">\n                <label class="control-label">Route Identifier Name</label>\n                <div class="controls">\n                    <input type="text" placeholder="id" class="form-control input-xlarge" required="" ng-model="restService.route_identifier_name">\n                    <p class="help-block">Name of the route parameter representing the unique identifier</p>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label">Entity Identifier Name</label>\n                <div class="controls">\n                    <input type="text" placeholder="id" class="form-control input-xlarge" required="" ng-model="restService.entity_identifier_name">\n                    <p class="help-block">Name of the field in the PHP entity representing the unique identifier</p>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label" for="hydrator_name">Hydrator Service Name</label>\n                <div class="controls">\n                    <select class="form-control input-xlarge"\n                        ng-model="restService.hydrator_name"\n                        ng-options="v for v in hydrators"></select>\n                    <p class="help-block">The name of the hydrator service used to hydrate entities</p>\n                </div>\n            </div>\n\n            <!-- BEGIN -->\n\n            <div class="form-group list-group-item" show="isDoctrineConnected(restService)">\n                <label class="control-label">Hydrator Strategies</label>\n                <div class="form-group" data-ng-repeat="strategy in restService.hydrator_strategies">\n                    <div class="input-group">\n                        <input type="text" class="form-control" readonly ng-model="strategy">\n                      <span class="input-group-btn">\n                        <button type="button" class="btn btn-danger" ng-click="editService.removeStrategy($parent.$index, $index)"><i class="glyphicon glyphicon-trash"></i></button>\n                      </span>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <div class="input-group">\n                        <input class="form-control" type="text" ng-model="editService.newStrategy" placeholder="Hydrator\\Strategy\\StrategyInterface">\n                      <span class="input-group-btn">\n                        <button type="button" class="btn btn-success" ng-click="editService.addStrategy($parent.$index)" ng-show="!editService.searching"><i class="glyphicon glyphicon-plus"></i></button>\n                        <button type="button" class="btn btn-warning disabled" ng-show="editService.searching"><i class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></i></button>\n                      </span>\n                    </div>\n                    <p class="help-block">Names of strategy services declared in the service manager</p>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item" show="isDoctrineConnected(restService)">\n                <label class="control-label">Hydrate by value</label>\n                <toggle-switch class="small pull-right" model="restService.by_value" on-label="Yes" off-label="No"></toggle-switch>\n                <p class="help-block">Lorem ipsum</p>\n            </div>\n\n            <div class="form-group list-group-item" show="isDoctrineConnected(restService)">\n                <label class="control-label">Use generated hydrator</label>\n                <toggle-switch class="small pull-right" model="restService.use_generated_hydrator" on-label="Yes" off-label="No"></toggle-switch>\n                <p class="help-block">Lorem ipsum</p>\n            </div>\n<!-- END -->\n\n            <div class="form-group list-group-item">\n                <label class="control-label">Collection Name</label>\n                <div class="controls">\n                    <input type="text" placeholder="id" class="form-control input-xlarge" required="" ng-model="restService.collection_name">\n                    <p class="help-block">Name of the field representing the collection in the response.</p>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label" for="page_size_param">Page size parameter</label>\n                <div class="controls">\n                    <input type="text" placeholder="" class="form-control input-xlarge" ng-model="restService.page_size_param">\n                    <p class="help-block">The query string parameter that will represent the number of results per page when retrieving a collection.</p>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label">Collection Query String whitelist</label>\n                <div class="controls">\n                    <tags-input\n                        custom-class="ag-tags"\n                        ng-model="restService.collection_query_whitelist"\n                        add-on-space="true"\n                        max-length="256"\n                        allowed-tags-pattern="^[a-zA-Z0-9_+.-]+$"\n                        placeholder="Add a variable to the whitelist">\n                    </tags-input>\n                    <p class="help-block">Specify query string variables that\n                    should be represented in relational links for collections\n                    of this resource (e.g., "filter", "sort", "version").</p>\n                </div>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n    <ag-collapse class="panel-success">\n        <collapse-header>\n            <h4 class="panel-title">Content Negotiation</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group">\n            <div class="form-group list-group-item">\n                <label class="control-label">Content Negotiation Selector</label>\n                    <div class="controls">\n                    <select class="form-control input-xlarge" ng-model="restService.selector" ng-options="v as v for (k,v) in selectors"></select>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label">Accept whitelist</label>\n                <div class="controls">\n                    <tags-input\n                        custom-class="ag-tags"\n                        ng-model="restService.accept_whitelist"\n                        add-on-space="true"\n                        max-length="256"\n                        allowed-tags-pattern="^[a-zA-Z-]+/[a-zA-Z0-9*_+.-]+$"\n                        placeholder="Add a mediatype to the whitelist">\n                    </tags-input>\n                    <p class="help-block">Specify mediatypes for representations this API can provide (tied to Accept request header)</p>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label">Content-Type whitelist</label>\n                <div class="controls">\n                    <tags-input\n                        custom-class="ag-tags"\n                        ng-model="restService.content_type_whitelist"\n                        add-on-space="true"\n                        max-length="256"\n                        allowed-tags-pattern="^[a-zA-Z-]+/[a-zA-Z0-9*_+.-]+$"\n                        placeholder="Add a mediatype to the whitelist">\n                    </tags-input>\n                    <p class="help-block">Specify mediatypes allowed for submitted content (tied to the Content-Type request header)</p>\n                </div>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n    <ag-collapse class="panel-success">\n        <collapse-header>\n            <h4 class="panel-title">Service Class Names</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group">\n            <div class="form-group list-group-item">\n                <label class="control-label" for="entity_class">Entity Class</label>\n                <div class="controls">\n                    <input type="text" placeholder="" class="form-control input-xlarge" ng-model="restService.entity_class">\n                    <p class="help-block">The fully qualified class name of the\n                    class representing an entity for this service.</p>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label" for="collection_class">Collection Class</label>\n                <div class="controls">\n                    <input type="text" placeholder="" class="form-control input-xlarge" ng-model="restService.collection_class">\n                    <p class="help-block">The fully qualified class name of the\n                    class representing a collection for this service.</p>\n                </div>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n</fieldset>\n\n<div class="ag-new-input btn-group pull-right">\n    <!-- todo Make the "cancel" action revert  -->\n    <button type="button" class="btn btn-sm btn-default" ng-click="toggleEditState(restService.service_name, false)">Cancel</button>\n    <button type="submit" class="btn btn-sm btn-success">Save</button>\n</div>\n</form>\n')}]),angular.module("html/api/rest-services/settings-view.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/settings-view.html",'<div class="panel-group tooltip-api">\n    <ag-collapse class="panel-default">\n        <collapse-header>\n            <h4 class="panel-title">General Settings</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group in">\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Route matches:</h4>\n                <p class="list-group-item-text">{{ restService.route_match }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Page Size</h4>\n                <p class="list-group-item-text">{{ restService.page_size }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">HTTP Allowed Entity Methods</h4>\n                <p class="list-group-item-text">{{ restService.entity_http_methods.join(\', \') }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">HTTP Allowed Collection Methods</h4>\n                <p class="list-group-item-text">\n                {{ restService.collection_http_methods.join(\', \') }}\n                </p>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n    <ag-collapse class="panel-default" show="isDbConnected(restService)">\n        <collapse-header>\n            <h4 class="panel-title">Database Settings</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group">\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">DB Adapter Name</h4>\n                <p class="list-group-item-text">{{ restService.adapter_name }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">DB Table Name</h4>\n                <p class="list-group-item-text">{{ restService.table_name }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Table Gateway Service Name</h4>\n                <p class="list-group-item-text">{{ restService.table_service }}</p>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n    <ag-collapse class="panel-default" show="isDoctrineConnected(restService)">\n        <collapse-header>\n            <h4 class="panel-title">Doctrine Settings</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group">\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Object Manager</h4>\n                <p class="list-group-item-text">{{ restService.object_manager }}</p>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n\n    <ag-collapse class="panel-default">\n        <collapse-header>\n            <h4 class="panel-title">REST Parameters</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group">\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Route Identifier Name</h4>\n                <p class="list-group-item-text">{{ restService.route_identifier_name || \'n/a\' }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Entity Identifier Name</h4>\n                <p class="list-group-item-text">{{ restService.entity_identifier_name || \'n/a\' }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Hydrator Service Name</h4>\n                <p class="list-group-item-text">{{ restService.hydrator_name }}</p>\n            </div>\n\n            <div class="list-group-item" show="isDoctrineConnected(restService)">\n                <h4 class="list-group-item-heading">Hydrator Strategies</h4>\n                <p class="list-group-item-text">{{ restService.hydrator_strategies.join(\', \') || \'n/a\' }}</p>\n            </div>\n\n            <div class="list-group-item" show="isDoctrineConnected(restService)">\n                <h4 class="list-group-item-heading">Use Generated Hydrator</h4>\n                <p class="list-group-item-text">{{ restService.use_generated_hydrator | boolean }}</p>\n            </div>\n\n            <div class="list-group-item" show="isDoctrineConnected(restService)">\n                <h4 class="list-group-item-heading">Hydrate by value</h4>\n                <p class="list-group-item-text">{{ restService.by_value | boolean }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Collection Name</h4>\n                <p class="list-group-item-text">{{ restService.collection_name }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Page Size Parameter (Query string)</h4>\n                <p class="list-group-item-text">{{ restService.page_size_param }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Collection Query String whitelist</h4>\n                <p class="list-group-item-text">{{ restService.collection_query_whitelist.join(\', \') || \'n/a\' }}</p>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n    <ag-collapse class="panel-default">\n        <collapse-header>\n            <h4 class="panel-title">Content Negotiation</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group">\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Content Negotiation Selector</h4>\n                <p class="list-group-item-text">{{ restService.selector }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Accept whitelist</h4>\n                <p class="list-group-item-text">{{ restService.accept_whitelist.join(\', \') || \'n/a\' }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Content-Type whitelist</h4>\n                <p class="list-group-item-text">{{ restService.content_type_whitelist.join(\', \') || \'n/a\' }}</p>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n    <ag-collapse class="panel-default">\n        <collapse-header>\n            <h4 class="panel-title">Service/Class/Route Names</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group">\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Controller Service Name</h4>\n                <p class="list-group-item-text">{{ restService.controller_service_name | controllerservicename }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Resource Class</h4>\n                <p class="list-group-item-text">{{ restService.resource_class }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Entity Class</h4>\n                <p class="list-group-item-text">{{ restService.entity_class }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Collection Class</h4>\n                <p class="list-group-item-text">{{ restService.collection_class }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Route Name</h4>\n                <p class="list-group-item-text">{{ restService.route_name }}</p>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n</div>\n\n')}]),angular.module("html/api/rest-services/source-code.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/source-code.html",'<div class="panel panel-default">\n    <div class="panel-body">\n        <p>Click on the file name to show the source code.</p>\n    </div>\n\n    <table class="table table-striped">\n        <tr>\n            <td>Collection Class</td>\n            <td><button \n                data-doclink="{{restService.collection_class}}"\n                class="btn-link"\n                ng-click="getSourceCode(restService.collection_class, \'Collection\')">{{ restService.collection_class }}.php</button></td>\n        </tr>\n\n        <tr>\n            <td>Entity Class</td>\n            <td><button\n                data-doclink="{{restService.entity_class}}"\n                class="btn-link"\n                ng-click="getSourceCode(restService.entity_class, \'Entity\')">{{ restService.entity_class }}.php</button></td>\n        </tr>\n\n        <tr ng-show="restService.resource_class">\n            <td>Resource Class</td>\n            <td><button\n                data-doclink="{{restService.resource_class}}"\n                class="btn-link"\n                ng-click="getSourceCode(restService.resource_class, \'Resource\')">{{ restService.resource_class }}.php</td>\n        </tr>\n    </table>\n</div>\n\n')}]),angular.module("html/api/rest-services/view.html",[]).run(["$templateCache",function(a){a.put("html/api/rest-services/view.html",'<ag-tabs class="panel-body">\n    <ag-tab-pane name="settings" active="{{ view == \'settings\' }}" searchparam="view" title="Settings">\n        <ag-tab-pane-variable-content content-template="\'html/api/rest-services/settings-view.html\'"></ag-tab-pane-variable-content>\n    </ag-tab-pane>\n\n    <ag-tab-pane name="fields" active="{{ view == \'fields\' }}" searchparam="view" title="Fields">\n        <ag-tab-pane-variable-content content-template="\'html/api/input-filter-view.html\'"\n            onload="index = $index"></ag-tab-pane-variable-content>\n    </ag-tab-pane>\n\n    <ag-tab-pane name="documentation" active="{{ view == \'documentation\' }}" searchparam="view" title="Documentation">\n        <ag-tab-pane-variable-content content-template="\'html/api/rest-services/documentation-view.html\'"\n            onload="index = $index"></ag-tab-pane-variable-content>\n    </ag-tab-pane>\n\n    <ag-tab-pane name="source" active="{{ view == \'source\' }}" searchparam="view" title="Source Code">\n        <ag-tab-pane-variable-content \n            content-template="\'html/api/rest-services/source-code.html\'"\n            onload="index = $index; service = restService"></ag-tab-pane-variable-content>\n    </ag-tab-pane>\n</ag-tabs>\n')}]),angular.module("html/api/rpc-services/documentation-edit.html",[]).run(["$templateCache",function(a){a.put("html/api/rpc-services/documentation-edit.html",'<div ng-controller="ApiDocumentationController">\n    <form novalidate class="ag form" ng-submit="save(rpcService.documentation)" ag-form>\n        <div class="panel panel-default">\n            <div class="panel-body list-group">\n                <div class="form-group">\n                    <label class="control-label">Description</label>\n                    <div class="controls">\n                        <textarea \n                            placeholder="Insert the description here"\n                            class="form-control input-xlarge"\n                            required=""\n                            rows="5"\n                            ng-model="rpcService.documentation.description"></textarea>\n                        <p class="help-block">The description of the RPC Service</p>\n                    </div>\n                </div>\n\n                <div class="panel panel-default"><div class="panel-body">\n                <ag-tabs pills>\n                    <ag-tab-pane ng-repeat="method in rpcService.http_methods" title="{{method}}" ng-init="methodData = rpcService.documentation[method]"><div class="panel-body">\n                        <ag-tab-pane-variable-content content-template="\'html/api/documentation-method-edit.html\'"></ag-tab-pane-variable-content>\n                    </div></ag-tab-pane>\n                </ag-tabs>\n                </div></div>\n            </div>\n        </div>\n\n        <div class="ag-new-input btn-group pull-right">\n            <button type="button" class="btn btn-sm btn-default" ag-cancel-edit>Cancel</button>\n            <button type="submit" class="btn btn-sm btn-success">Save</button>\n        </div>\n    </form>\n</div>\n')}]),angular.module("html/api/rpc-services/documentation-view.html",[]).run(["$templateCache",function(a){a.put("html/api/rpc-services/documentation-view.html",'<div ng-controller="ApiDocumentationController">\n    <div class="panel panel-default">\n        <div class="panel-body">\n            <h3>{{ rpcService.service_name }}: {{ rpcService.route_match }}</h3>\n\n            <div class="control-group">\n                <label class="control-label">Description</label>\n                <div ng-show="rpcService.documentation.description"><div ng-bind-html="rpcService.documentation.description"></div></div>\n                <div ng-hide="rpcService.documentation.description" class="text-muted">No service description yet provided.</div>\n            </div>\n\n            <div class="panel panel-default"><div class="panel-body">\n            <ag-tabs pills>\n                <ag-tab-pane ng-repeat="method in rpcService.http_methods" title="{{method}}" ng-init="methodData = rpcService.documentation[method]; service=rpcService"><div class="panel-body">\n                    <ag-tab-pane-variable-content content-template="\'html/api/documentation-method-view.html\'"></ag-tab-pane-variable-content>\n                </div></ag-tab-pane>\n            </ag-tabs>\n            </div></div>\n        </div>\n    </div>\n</div>\n\n')}]),angular.module("html/api/rpc-services/edit.html",[]).run(["$templateCache",function(a){a.put("html/api/rpc-services/edit.html",'<ag-tabs>\n    <ag-tab-pane name="settings" active="{{ view == \'settings\' }}" searchparam="view" title="Settings">\n        <ng-include src="\'html/api/rpc-services/settings-edit.html\'"></ng-include>\n    </ag-tab-pane>\n\n    <ag-tab-pane name="fields" active="{{ view == \'fields\' }}" searchparam="view" title="Fields">\n        <ng-include src="\'html/api/input-filter-edit.html\'"\n            onload="index = $index"></ng-include>\n    </ag-tab-pane>\n\n    <ag-tab-pane name="documentation" active="{{ view == \'documentation\' }}" searchparam="view" title="Documentation">\n        <ag-include src="html/api/rpc-services/documentation-edit.html"></ag-include>\n    </ag-tab-pane>\n</ag-tabs>\n')}]),angular.module("html/api/rpc-services/index.html",[]).run(["$templateCache",function(a){a.put("html/api/rpc-services/index.html",'<ag-include src="html/api/rpc-services/new.html"></ag-include>\n\n<div ng-show="!api.rpcServices.length" class="text-muted">\n    No RPC services defined.\n</div>\n\n<div class="panel-group tooltip-api" id="accordion">\n    <ag-collapse class="panel-info service"\n        ng-repeat="rpcService in api.rpcServices"\n        active="{{ activeService == rpcService.service_name }}"\n        name="{{ rpcService.service_name }}"\n        data-api="{{ api.name }}"\n        data-api-version="{{ version }}"\n        data-service-type="RPC"\n        searchparam="service"\n        conditionals="{{ {edit: inEdit, delete: false} }}">\n        <collapse-header>\n            <h4 class="panel-title">\n                <i class="btn btn-small glyphicon glyphicon-fire"></i>\n\n                {{ rpcService.service_name }}\n\n                <div class="btn-group pull-right service-buttons" ng-show="isLatestVersion()">\n                    <button\n                        type="button" title="Cancel" class="btn btn-sm btn-default"\n                        ng-show="inEdit"\n                        collapse-button criteria="{delete: false}"\n                        ng-click="toggleEditState(rpcService.service_name, false)">\n                        Cancel\n                    </button>\n\n                    <button \n                        type="button" class="btn btn-sm btn-success" title="Edit service"\n                        ng-show="!inEdit"\n                        collapse-button criteria="{delete: false}"\n                        ng-click="toggleEditState(rpcService.service_name, true)">\n                        <i class="glyphicon glyphicon-edit"></i>\n                    </button>\n\n                    <button \n                        type="button" class="btn btn-sm btn-danger" title="Remove service"\n                        collapse-flag flags="{delete: true}"\n                        collapse-button criteria="{delete: false}">\n                        <i class="glyphicon glyphicon-trash"></i>\n                    </button>\n                </div>\n            </h4>\n\n            <div class="clearfix"></div>\n\n            <span collapse-show\n                criteria="{delete: false}"\n                default-template="\'html/empty-content.html\'"\n                toggled-template="\'html/api/rpc-services/remove.html\'"></span>\n        </collapse-header>\n\n        <collapse-body ng-class="{in: (activeService == rpcService.service_name)}">\n            <ag-toggle-include\n                condition="inEdit"\n                on-template="html/api/rpc-services/edit.html"\n                off-template="html/api/rpc-services/view.html"></ag-toggle-include>\n        </collapse-body>\n    </ag-collapse>\n</div>\n\n')
}]),angular.module("html/api/rpc-services/new.html",[]).run(["$templateCache",function(a){a.put("html/api/rpc-services/new.html",'<div ng-hide="showNewRpcServiceForm || !isLatestVersion()">\n    <button \n        class="btn btn-default btn-primary pull-right" title="Create New RPC Service" position="bottom"\n        ng-click="showNewRpcServiceForm = true">\n        Create New RPC Service\n    </button>\n\n    <div class="clearfix"></div>\n\n    <br />\n</div>\n\n\n<div ng-show="showNewRpcServiceForm" class="panel panel-primary">\n    <div class="panel-heading">\n        <h4 class="panel-title">Create a new RPC service</h4>\n    </div>\n\n    <div class="panel-body">\n        <form class="form" ng-submit="createNewRpcService()" ag-form>\n            <fieldset>\n                <div class="form-group">\n                    <label class="control-label">RPC Service Name</label>\n                    <input type="text" class="form-control input-xlarge" ng-model="rpcServiceName" placeholder="RPC Service Name ..." required="">\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label">Route to match</label>\n                    <input type="text" class="form-control input-xlarge" ng-model="rpcServiceRoute" placeholder="Route to match">\n                </div>\n            </fieldset>\n\n            <div class="btn-group pull-right">\n                <button\n                    type="button" class="btn btn-sm btn-default"\n                    ng-click="resetForm()">Cancel</button>\n                <button type="submit" class="btn btn-sm btn-primary">Create RPC Service</button>\n            </div>\n\n            <div class="clearfix"></div>\n        </form>\n    </div>\n</div>\n\n')}]),angular.module("html/api/rpc-services/remove.html",[]).run(["$templateCache",function(a){a.put("html/api/rpc-services/remove.html",'<div class="panel panel-danger">\n    <div class="panel-heading">Remove RPC service</div>\n\n    <div class="panel-body">\n        <p>Are you sure you want to delete the service?</p>\n\n        <div class="form-group">\n            <label>\n                <input type="checkbox" ng-model="recursive">\n                Delete all files and directories for this service?\n            </label>\n        </div>\n\n        <div class="btn-group pull-right">\n            <button type="button" class="btn btn-sm btn-default"\n                collapse-flag flags="{delete: false}">\n                No\n            </button>\n            <button type="button" class="btn btn-sm btn-danger"\n                ng-click="removeRpcService(rpcService.controller_service_name, recursive)">\n                Yes\n            </button>\n        </div>\n    </div>\n</div>\n')}]),angular.module("html/api/rpc-services/settings-edit.html",[]).run(["$templateCache",function(a){a.put("html/api/rpc-services/settings-edit.html",'<form novalidate class="ag form" ng-submit="saveRpcService($index)" ag-form>\n    <ag-collapse class="panel-success">\n        <collapse-header>\n            <h4 class="panel-title">General Settings</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group in">\n            <div class="form-group list-group-item">\n                <label class="control-label">Route to match</label>\n                <div class="controls">\n                    <input type="text" placeholder="/api/for/your/service"\n                        class="form-control input-xlarge" required="" ng-model="rpcService.route_match">\n                    <p class="help-block">\n                        The URI for the service; "[&nbsp;]" indicate optional\n                        segments, and ":varname" indicates a variable URI segment\n                        to capture.\n                    </p>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label">Allowed HTTP Methods</label>\n                <div class="controls">\n                    <label ng-repeat="method in [\'GET\', \'POST\', \'PUT\', \'PATCH\', \'DELETE\']" class="checkbox inline">\n                        <input type="checkbox" class="input-xlarge" value="{{method}}" ng-checked="rpcService.http_methods.indexOf(method) > -1" ng-click="toggleSelection(rpcService.http_methods, $event)">\n                        <span>{{method}}</span>\n                    </label>\n                </div>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n    <ag-collapse class="panel-success">\n        <collapse-header>\n            <h4 class="panel-title">Content Negotiation</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group">\n            <div class="form-group list-group-item">\n                <label class="control-label">Content Negotiation Selector</label>\n                <div class="controls">\n                    <select class="form-control input-xlarge"\n                        ng-model="rpcService.selector" ng-options="v as v for (k,v) in selectors"></select>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label" for="accept_whitelist">Accept whitelist</label>\n                <div class="controls">\n                    <tags-input\n                        custom-class="ag-tags"\n                        ng-model="rpcService.accept_whitelist"\n                        add-on-space="true"\n                        max-length="256"\n                        allowed-tags-pattern="^[a-zA-Z-]+/[a-zA-Z0-9*_+.-]+$"\n                        placeholder="Add a mediatype to the whitelist">\n                    </tags-input>\n                    <p class="help-block">Specify mediatypes for representations this API can provide (tied to Accept request header)</p>\n                </div>\n            </div>\n\n            <div class="form-group list-group-item">\n                <label class="control-label" for="content_type_whitelist">Content-Type whitelist</label>\n                <div class="controls">\n                    <tags-input\n                        custom-class="ag-tags"\n                        ng-model="rpcService.content_type_whitelist"\n                        add-on-space="true"\n                        max-length="256"\n                        allowed-tags-pattern="^[a-zA-Z-]+/[a-zA-Z0-9*_+.-]+$"\n                        placeholder="Add a mediatype to the whitelist">\n                    </tags-input>\n                    <p class="help-block">Specify mediatypes allowed for submitted content (tied to the Content-Type request header)</p>\n                </div>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n    <div class="ag-new-input btn-group pull-right">\n        <!-- todo Implement logic to reset form/model -->\n        <button type="button" class="btn btn-sm btn-default"\n            ag-cancel-edit>Cancel</button>\n        <button type="submit" class="btn btn-sm btn-success">Save</button>\n    </div>\n\n    <div class="clearfix"></div>\n</form>\n')}]),angular.module("html/api/rpc-services/settings-view.html",[]).run(["$templateCache",function(a){a.put("html/api/rpc-services/settings-view.html",'<div class="panel-group tooltip-api">\n    <ag-collapse class="panel-default">\n        <collapse-header>\n            <h4 class="panel-title">General Settings</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group in">\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Route matches:</h4>\n                <p class="list-group-item-text">{{ rpcService.route_match }}</p>\n            </div>\n        \n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Allowed HTTP Methods</h4>\n                <p class="list-group-item-text">{{ rpcService.http_methods.join(\', \') }}</p>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n    <ag-collapse class="panel-default">\n        <collapse-header>\n            <h4 class="panel-title">Content Negotiation</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group">\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Content Negotiation Selector</h4>\n                <p class="list-group-item-text">{{ rpcService.selector }}</p>\n            </div>\n            \n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Accept whitelist</h4>\n                <p class="list-group-item-text">{{ rpcService.accept_whitelist.join(\', \') || \'n/a\' }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Content-Type whitelist</h4>\n                <p class="list-group-item-text">{{ rpcService.content_type_whitelist.join(\', \') || \'n/a\' }}</p>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n\n    <ag-collapse class="panel-default">\n        <collapse-header>\n            <h4 class="panel-title">Service/Route Names</h4>\n        </collapse-header>\n\n        <collapse-body class="list-group">\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Controller Service Name</h4>\n                <p class="list-group-item-text">{{ rpcService.controller_service_name | controllerservicename }}</p>\n            </div>\n\n            <div class="list-group-item">\n                <h4 class="list-group-item-heading">Route Name</h4>\n                <p class="list-group-item-text">{{ rpcService.route_name }}</p>\n            </div>\n        </collapse-body>\n    </ag-collapse>\n</div>\n')}]),angular.module("html/api/rpc-services/source-code.html",[]).run(["$templateCache",function(a){a.put("html/api/rpc-services/source-code.html",'<ag-collapse class="panel-blank">\n    <collapse-body>\n        <p>Click on the file name to show the source code.</p>\n    </collapse-body>\n\n    <table class="table table-striped">    \n        <tr>\n            <td>Controller Service Class</td>\n            <td><button\n                data-doclink="{{service.controller_class}}"\n                class="btn-link"\n                ng-click="getSourceCode(service.controller_class, \'Controller Service\')">{{ service.controller_class }}.php</button></td>\n        </tr>\n    </table>\n</ag-collapse>\n')}]),angular.module("html/api/rpc-services/view.html",[]).run(["$templateCache",function(a){a.put("html/api/rpc-services/view.html",'<ag-tabs>\n    <ag-tab-pane name="settings" active="{{ view == \'settings\' }}" searchparam="view" title="Settings">\n        <ng-include src="\'html/api/rpc-services/settings-view.html\'"></ng-include>\n    </ag-tab-pane>\n\n    <ag-tab-pane name="fields" active="{{ view == \'fields\' }}" searchparam="view" title="Fields">\n        <ng-include src="\'html/api/input-filter-view.html\'" onload="index = $index"></ng-include>\n    </ag-tab-pane>\n\n    <ag-tab-pane name="documentation" active="{{ view == \'documentation\' }}" searchparam="view" title="Documentation">\n        <ng-include src="\'html/api/rpc-services/documentation-view.html\'"></ng-include>\n    </ag-tab-pane>\n\n    <ag-tab-pane name="source" active="{{ view == \'source\' }}" searchparam="view" title="Source Code" title="Source Code">\n        <ng-include \n            src="\'html/api/rpc-services/source-code.html\'"\n            onload="index = $index; service = rpcService"></ng-include>\n    </ag-tab-pane>\n</ag-tabs>\n')}]),angular.module("html/api/sidebar.html",[]).run(["$templateCache",function(a){a.put("html/api/sidebar.html",'<ul class="nav nav-pills ag-admin-nav-pills nav-stacked ag-sidenav">\n  <li class="form-inline" ng-controller="ApiVersionController">\n    Current Version:\n    <select\n      class="form-control input-sm"\n      ng-model="currentVersion"\n      ng-options="ver for ver in api.versions"\n      ng-change="changeVersion()"></select>\n  </li>\n  <li ng-class="{active: (\'ag.api.version\' | isState)}"><a ui-sref="ag.api.version">Overview</a></li>\n  <li ng-class="{active: (\'ag.api.version.rest\' | isState)}"><a ui-sref="ag.api.version.rest">REST Services</a></li>\n  <li ng-class="{active: (\'ag.api.version.rpc\' | isState)}"><a ui-sref="ag.api.version.rpc">RPC Services</a></li>\n  <li ng-class="{active: (\'ag.api.version.authorization\' | isState)}"><a ui-sref="ag.api.version.authorization">Authorization</a></li>\n</ul>\n\n')}]),angular.module("html/breadcrumbs.html",[]).run(["$templateCache",function(a){a.put("html/breadcrumbs.html",'<ol class="breadcrumb">\n  <li ng-repeat="breadcrumb in breadcrumbs" ng-class="{active: breadcrumb.active}">\n    <a ng-if="!breadcrumb.active" ui-sref="{{ breadcrumb.href }}(params)">{{ breadcrumb.title }}</a>\n    <span ng-if="breadcrumb.active">{{ breadcrumb.title }}</span>\n  </li>\n</ol>\n')}]),angular.module("html/content.html",[]).run(["$templateCache",function(a){a.put("html/content.html","")}]),angular.module("html/dashboard-sidebar.html",[]).run(["$templateCache",function(a){a.put("html/dashboard-sidebar.html",'<img src="img/ag-hero.png" alt="Apigility" class="scale">\n\n')}]),angular.module("html/directives/ag-edit-inplace.html",[]).run(["$templateCache",function(a){a.put("html/directives/ag-edit-inplace.html",'<span>\n    <span class="form-control-static input-xlarge" ng-click="isFormVisible = true">\n        {{ agInputName }}\n    </span>\n\n    <form class="form-inline hide">\n        <div class="form-group">\n            <input \n                type="text" class="form-control input-xlarge"\n                ag-on-enter="submit()"\n                ng-model="agInputName">\n        </div>\n\n        <div class="btn-group">\n            <button \n                type="button" class="btn btn-sm btn-default"\n                ng-click="resetForm()">\n                Cancel\n            </button>\n            <button type="button" class="btn btn-sm btn-success"\n                ng-click="submit()">\n                Change field name\n            </button>\n        </div>\n    </form>\n</span>\n')}]),angular.module("html/empty-content.html",[]).run(["$templateCache",function(a){a.put("html/empty-content.html","<!-- empty content -->\n")}]),angular.module("html/empty.html",[]).run(["$templateCache",function(a){a.put("html/empty.html",'<div class="empty"></div>\n')}]),angular.module("html/index.html",[]).run(["$templateCache",function(a){a.put("html/index.html",'<div class="row">\n    <div class="col-md-12">\n        <div class="panel panel-info" ng-show="!dashboard.modules.length">\n            <div class="panel-heading">\n                <h4 class="panel-title">\n                    <i class="glyphicon glyphicon-question-sign"></i> Getting started\n                </h4>\n            </div>\n\n            <div class="panel-body" ng-show="!dashboard.modules.length">\n                <p class="text-warning">\n                    Don\'t know where to start?\n                    <a href="https://apigility.org/documentation">Read the documentation</a>\n                    or <a href="https://apigility.org/video">watch the screencast</a>\n                </p>\n            </div>\n        </div>\n\n        <div class="panel panel-info">\n            <div class="panel-heading">\n                <h4 class="panel-title">\n                    <a ui-sref="ag.api">APIs</a>\n                </h4>\n            </div>\n\n           \n            <div class="panel-body" ng-show="!dashboard.modules.length">\n                <p class="text-warning">\n                    No APIs;\n                    <a ui-sref="ag.api">would you like to create one now?</a>\n                </p>\n            </div>\n\n            <ul class="list-group">\n                <li ng-repeat="api in dashboard.modules" class="list-group-item">\n                    <h4><a ui-sref="ag.api.version({apiName: api.name, version: api.latestVersion})">\n                        {{ api.name }} (v{{ api.latestVersion }})\n                    </a></h4>\n\n                    <div class="row">\n                        <div class="col-sm-2 col-sm-offset-1"><b>REST Services:</b></div>\n\n                        <div class="col-sm-9 list-group">\n                            <p class="list-group-item" ng-repeat="service in api.rest">\n                                <a ui-sref="ag.api.version.rest({service: service, version: api.latestVersion, apiName: api.name})">\n                                    {{ service }}\n                                </a>\n                            </p>\n\n                            <p ng-hide="api.rest.length" class="text-warning list-group-item">\n                                No REST services configured; \n                                <a ui-sref="ag.api.version.rest({version: api.latestVersion, apiName: api.name})">\n                                    would you like to create one?\n                                </a>\n                            </p>\n                        </div>\n                    </div>\n\n                    <div class="row">\n                        <div class="col-sm-2 col-sm-offset-1"><b>RPC Services:</b></div>\n\n                        <div class="col-sm-9 list-group">\n                            <p class="list-group-item" ng-repeat="service in api.rpc">\n                                <a ui-sref="ag.api.version.rpc({service: service, version: api.latestVersion, apiName: api.name})">\n                                    {{ service }}\n                                </a>\n                            </p>\n\n                            <p ng-hide="api.rpc.length" class="text-warning list-group-item">\n                                No RPC services configured; \n                                <a ui-sref="ag.api.version.rpc({version: api.latestVersion, apiName: api.name})">\n                                    would you like to create one?\n                                </a>\n                            </p>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n\n<div class="row">\n    <div class="col-md-6">\n        <div class="panel panel-info">\n            <div class="panel-heading">\n                <h4 class="panel-title">\n                    <i class="glyphicon glyphicon-book"></i>\n                    <a ui-sref="ag.settings.db-adapters">Database Adapters</a>\n                </h4>\n            </div>\n\n            <div class="panel-body" ng-show="!dashboard.dbAdapters.length">\n                <p class="text-warning">\n                    No database adapters configured;\n                    <a ui-sref="ag.settings.db-adapters">would you like to set one up now?</a>\n                </p>\n            </div>\n\n            <ul class="list-group">\n                <li ng-repeat="adapter in dashboard.dbAdapters" class="list-group-item">\n                    <a ui-sref="ag.settings.db-adapters({adapter: adapter.adapter_name})">{{ adapter.adapter_name }}</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class="col-md-6">\n        <div class="panel panel-info">\n            <div class="panel-heading">\n                <h4 class="panel-title">\n                    <i class="glyphicon glyphicon-book"></i>\n                    <a ui-sref="ag.settings.doctrine-adapters">Doctrine Adapters</a>\n                </h4>\n            </div>\n\n            <div class="panel-body" ng-show="!dashboard.doctrineAdapters.length">\n                <p class="text-warning">\n                    Doctrine not installed\n                </p>\n            </div>\n\n            <ul class="list-group">\n                <li ng-repeat="adapter in dashboard.doctrineAdapters" class="list-group-item">\n                    <a ui-sref="ag.settings.doctrine-adapters({adapter: adapter.adapter_name})">{{ adapter.adapter_name }}</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n<div class="row">\n    <div class="col-md-6">\n        <div class="panel panel-info">\n            <div class="panel-heading">\n                <h4 class="panel-title">\n                    <i class="glyphicon glyphicon-lock"></i>\n                    <a ui-sref="ag.settings.authentication">Authentication</a>\n                </h4>\n            </div>\n\n            <div class="panel-body" ng-show="!dashboard.authentication">\n                <p class="text-warning">\n                    No authentication configured; <a ui-sref="ag.settings.authentication">would you like to set it up now?</a>\n                </p>\n            </div>\n\n            <table class="table">\n                <ag-conditional-include\n                        condition="isHttpBasicAuthentication(dashboard.authentication)"\n                        src="html/settings/authentication/http-basic-view.html"></ag-conditional-include>\n                <ag-conditional-include\n                        condition="isHttpDigestAuthentication(dashboard.authentication)"\n                        src="html/settings/authentication/http-digest-view.html"></ag-conditional-include>\n                <ag-conditional-include\n                        condition="isOAuth2(dashboard.authentication)"\n                        src="html/settings/authentication/oauth2-view.html"></ag-conditional-include>\n            </table>\n        </div>\n    </div>\n</div>')}]),angular.module("html/modals/cache-check.html",[]).run(["$templateCache",function(a){a.put("html/modals/cache-check.html",'<div class="modal-header"><h4 class="modal-title text-danger">WARNING!</h4></div>\n\n<div class="modal-body">\n    <h4 class="text-danger">OpCode Cache Detected!</h4>\n\n    <p>\n        We have detected that your Apigility Admin API is running with a\n        PHP OpCode Cache enabled. You will need to disable it in order\n        to ensure that the API will be able to perform its operations.\n    </p>\n\n    <p>\n        To do this, you will need to either edit your <kbd>php.ini</kbd>\n        file or your web server configuration (in which case you will\n        set a PHP admin configuration directive). The setting you will\n        need to change will depend on the OpCode Cache you have enabled,\n        per the table below.\n    </p>\n\n    <table class="table table-striped">\n        <thead>\n            <tr>\n                <th>OpCode Cache</th>\n                <th>Setting</th>\n                <th>Value</th>\n            </tr>\n        </thead>\n\n        <tbody>\n            <tr>\n                <td>APC</td>\n                <td><kbd>apc.enabled</kbd></td>\n                <td><kbd>"0"</kbd></td>\n            </tr>\n\n            <tr>\n                <td>EAccelerator</td>\n                <td><kbd>eaccelerator.enable</kbd></td>\n                <td><kbd>"0"</kbd></td>\n            </tr>\n\n            <tr>\n                <td>OpCache</td>\n                <td><kbd>opcache.enable</kbd></td>\n                <td><kbd>"0"</kbd></td>\n            </tr>\n\n            <tr>\n                <td>WinCache</td>\n                <td><kbd>wincache.ocenabled</kbd></td>\n                <td><kbd>"0"</kbd></td>\n            </tr>\n\n            <tr>\n                <td>XCache</td>\n                <td><kbd>xcache.cacher</kbd></td>\n                <td><kbd>"0"</kbd></td>\n            </tr>\n\n            <tr>\n                <td>Zend Data Cache</td>\n                <td><kbd>zend_datacache.apc_compatibility</kbd></td>\n                <td><kbd>"0"</kbd> or <kbd>"Off"</kbd></td>\n            </tr>\n\n            <tr>\n                <td>Zend Optimizer+</td>\n                <td><kbd>zend_optimizerplus.enable</kbd></td>\n                <td><kbd>"0"</kbd></td>\n            </tr>\n        </tbody>\n    </table>\n\n    <p>\n        Please make the setting change indicated, restart your web\n        server, and then reload this page.\n    </p>\n</div>\n')}]),angular.module("html/modals/create-api-form.html",[]).run(["$templateCache",function(a){a.put("html/modals/create-api-form.html",'<div class="modal-header"><h4 class="modal-title">Create New API</h4></div>\n\n<div class="modal-body">\n    <form class="form" ng-submit="createNewApi($event)" ag-form>\n        <fieldset>\n            <div class="form-group">\n                <input type="text" class="form-control input-xlarge" ng-model="apiName" placeholder="API Name ..." required="">\n            </div>\n        </fieldset>\n\n        <div class="btn-group pull-right">\n            <button type="button" class="btn btn-sm btn-default" ng-click="cancel()">Cancel</button>\n            <button type="submit" class="btn btn-sm btn-primary">Create API</button>\n        </div>\n\n        <div class="clearfix"></div>\n    </form>\n</div>\n\n')}]),angular.module("html/modals/fs-perms.html",[]).run(["$templateCache",function(a){a.put("html/modals/fs-perms.html",'<div class="modal-header"><h4 class="modal-title text-danger">WARNING!</h4></div>\n\n<div class="modal-body">\n    <h4 class="text-danger">Filesystem is not writable!</h4>\n\n    <p>\n        We have detected that your Apigility Admin API is running\n        without the ability to write to one of the following\n        directories:\n    </p>\n\n    <ul>\n        <li><code>config/</code></li>\n        <li><code>config/autoload/</code></li>\n        <li><code>module/</code></li>\n    </ul>\n\n    <p>\n        As such, the Apigility Admin API will not be able to do its\n        work, which involves writing and updating configuration files,\n        as well as generating PHP class stubs.\n    </p>\n\n    <p>\n        To correct the issue, make these directories, and all\n        descendents, writable by the user under which the web server is\n        running (we\'ve determined <strong>"{{ user }}"</strong> from the\n        server).\n    </p>\n\n    <p>\n        Once you have updated the permissions, reload this page.\n    </p>\n</div>\n\n')}]),angular.module("html/modals/help-content-negotiation.html",[]).run(["$templateCache",function(a){a.put("html/modals/help-content-negotiation.html",'<div class="modal-header">\n    <button type="button" class="close" ng-click="$close()">&times;</button>\n    <h4 class="modal-title">Help: Content Negotiation</h4>\n</div>\n\n<div class="modal-body">\n    <p>\n        Content Negotiation selectors are used by the application to\n        determine the representation to use in the response based on\n        the <kbd>Accept</kbd> header sent by the client.\n    </p>\n\n    <p>\n        Selectors are named, and within your REST and RPC services,\n        you will select from these names to indicate which\n        representations you will support.\n    </p>\n\n    <p>\n        Each selector consists of maps of Zend Framework 2 <a href="http://framework.zend.com/manual/2.2/en/modules/zend.view.quick-start.html#controllers-and-view-models">View\n        Models</a> and the <kbd>Accept</kbd> mimetypes that, when\n        matched, will cause the given View Model to be used.\n    </p>\n\n    <p>\n        <b>Note:</b> For this Content Negotiation to work in your\n        RPC services, you will need to always return a\n        <kbd>ZF\\ContentNegotiation\\ViewModel</kbd>.\n    </p>\n</div>\n\n<div class="modal-footer">\n    <p class="pull-left">\n        <a href="https://apigility.org/documentation/api-primer/content-negotiation" target="_blank">\n            <i class="glyphicon glyphicon-info-sign"></i>\n            More information\n        </a>\n    </p>\n    <button type="button" class="btn btn-default" ng-click="$close()">Close</button>\n</div>\n\n<div class="clearfix"></div>\n')}]),angular.module("html/modals/help-input-filter.html",[]).run(["$templateCache",function(a){a.put("html/modals/help-input-filter.html",'<div class="modal-header">\n    <button type="button" ng-click="$close()" class="close">&times;</button>\n    <h4 class="modal-title">Help: Fields</h4>\n</div>\n\n<div class="modal-body">\n    <p>\n        Fields are used to both describe expected data, as well\n        as specify how that data should be validated.\n    </p>\n\n    <p>\n        Clicking the "Create New Field" button will prompt you\n        for a field name, and then create it. If you want to\n        change the name later, click the name to edit it.\n        Click the <i class="glyphicon\n            glyphicon-trash"></i> icon to remove the field.\n    </p>\n\n    <p>\n        Fields are comprised of:\n    </p>\n\n    <ul>\n        <li>A "required" flag - is the field required in order to\n        validate?</li>\n        <li>An "allow empty" flag - can the field be a null or\n        empty string and still be considered valid?</li>\n        <li>A "continue if empty" flag - if the field is empty and\n        required, should the validations still be run?</li>\n        <li>One or more <em>validators</em>.</li>\n        <li>One or more <em>filters</em>, used to normalize the\n        field prior to validation.</li>\n    </ul>\n\n    <p>\n        Validators and filters may be added, manipulated, and\n        removed in the same ways. In each case, you must first Click\n        the <i class="glyphicon glyphicon-wrench"></i> icon to\n        expand the input and reveal the "Add Validator" and "Add\n        Filter" buttons.  Adding either will reveal a form that\n        allows you to select from available validators or filters.\n    </p>\n\n    <p>\n        Validators and filters will be executed in the order in which they\n        appear in the admin tool; you may grab the <i\n        class="glyphicon glyphicon-resize-vertical"></i> icon in order\n        to drag and re-order them. Clicking the <i\n            class="glyphicon glyphicon-trash"></i> icon will\n        remove it.\n    </p>\n\n    <p>\n        Most validators and filters also support a number of options. After\n        adding one, you may add options; these may be\n        selected from a dialog, and an appropriate form input \n        will then be provided to allow you to specify a value.\n        You cannot edit options after creating them; however,\n        you can remove them via the <i class="glyphicon\n            glyphicon-trash"></i> icon and re-add them with\n        the changes you desire.\n    </p>\n\n    <p>\n        For more information on available validators and their\n        options, please see <a\n        href="http://framework.zend.com/manual/2.2/en/modules/zend.validator.set.html">the\nZF2 reference guide on validators</a>. \n    </p>\n\n    <p>\n        For more information on available filters and their\n        options, please see <a\n        href="http://framework.zend.com/manual/2.2/en/modules/zend.filter.set.html">the\nZF2 reference guide on filters</a>. \n    </p>\n</div>\n\n<div class="modal-footer">\n    <p class="pull-left">\n        <a href="https://apigility.org/documentation/content-validation/basic-usage" target="_blank">\n            <i class="glyphicon glyphicon-info-sign"></i>\n            More information\n        </a>\n    </p>\n\n    <button type="button" ng-click="$close()" class="btn btn-default">Close</button>\n</div>\n\n<div class="clearfix"></div>\n\n')}]),angular.module("html/modals/source-code.html",[]).run(["$templateCache",function(a){a.put("html/modals/source-code.html",'<div class="modal-content">\n    <div class="modal-header">\n        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n        <h4 class="modal-title">{{ classType }}<br /><font size="-1">{{ filename }}</font></h4>\n    </div>\n    <div class="modal-body ag-code" ng-bind-html="sourceCode"></div>\n    <div class="modal-footer">\n        <button type="button" class="btn btn-default" ng-click="$dismiss()">Close</button>\n    </div>\n</div>\n\n')}]),angular.module("html/settings/authentication/http-basic-edit.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/http-basic-edit.html",'<div class="panel-body"><form class="form" ng-submit="updateHttpBasicAuthentication()" ag-form>\n    <fieldset>\n        <div class="form-group">\n            <label class="control-label" for="realm">Authentication Realm</label>\n            <input type="text" placeholder="api" class="form-control input-xlarge" required="required" ng-model="httpBasic.realm">\n            <p class="help-block">The Authentication Realm for the HTTP Basic Authentication</p>\n        </div>\n\n        <div class="form-group">\n            <label class="control-label" for="htpasswd">Location of htpasswd file</label>\n            <input type="text" placeholder="data/htpasswd" class="form-control input-xlarge" required="required" ng-model="httpBasic.htpasswd">\n            <p class="help-block">Location on the filesystem of the htpasswd file</p>\n        </div>\n    </fieldset>\n\n    <div class="btn-group pull-right">\n        <button\n            type="button" title="Cancel" class="btn btn-sm btn-default" ag-cancel-edit>Cancel</button>\n        <button type="submit" title="Save" class="btn btn-sm btn-success">Save</button>\n    </div>\n\n    <div class="clearfix"></div>\n</form></div>\n')
}]),angular.module("html/settings/authentication/http-basic-view.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/http-basic-view.html",'<table class="table table-striped">\n    <tr>\n        <td>Realm</td>\n        <td>{{httpBasic.realm}}</td>\n    </tr>\n\n    <tr>\n        <td>htpasswd Location</td>\n        <td>{{httpBasic.htpasswd}}</td>\n    </tr>\n</table>\n')}]),angular.module("html/settings/authentication/http-basic.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/http-basic.html",'<ag-collapse class="panel-info"\n    no-chevron\n    conditionals="{{ {edit: inEdit, delete: false} }}">\n    <collapse-header>\n        <h4 class="panel-title">\n            <i class="glyphicon glyphicon-lock"></i>\n\n            HTTP Basic Settings\n\n            <div class="btn-group pull-right">\n                <button\n                    type="button" title="Cancel" class="btn btn-sm btn-default"\n                    collapse-flag flags="{edit: false}" collapse-click="cancelEdit"\n                    collapse-button criteria="{delete: false, edit: true}">\n                    Cancel\n                </button>\n\n                <button \n                    type="button" class="btn btn-sm btn-success" title="Edit settings"\n                    collapse-flag flags="{edit: true}" collapse-click="startEdit"\n                    collapse-button criteria="{delete: false, edit: false}">\n                    <i class="glyphicon glyphicon-edit"></i>\n                </button>\n\n                <button type="button" class="btn btn-sm btn-danger" title="Remove Authentication"\n                    collapse-flag flags="{delete: true}"\n                    collapse-button criteria="{delete: false}">\n                    <i class="glyphicon glyphicon-trash"></i>\n                </button>\n            </div>\n        </h4>\n\n        <div class="clearfix"></div>\n\n        <span collapse-show\n            criteria="{delete: false}"\n            default-template="\'html/empty-content.html\'"\n            toggled-template="\'html/settings/authentication/remove.html\'"></span>\n    </collapse-header>\n\n    <collapse-body>\n        <span\n            collapse-show\n            criteria="{edit: false}"\n            default-template="\'html/settings/authentication/http-basic-view.html\'"\n            toggled-template="\'html/settings/authentication/http-basic-edit.html\'"></span>\n    </collapse-body>\n</ag-collapse>\n')}]),angular.module("html/settings/authentication/http-digest-edit.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/http-digest-edit.html",'<div class="panel-body"><form class="form" ng-submit="updateHttpDigestAuthentication()" ag-form>\n    <fieldset>\n        <div class="form-group">\n            <label class="control-label" for="realm">Realm</label>\n            <input type="text" placeholder="api" class="form-control input-xlarge" required="required" ng-model="httpDigest.realm">\n            <p class="help-block">HTTP authentication realm</p>\n        </div>\n\n        <div class="form-group">\n            <label class="control-label" for="htdigest">Location of htdigest file</label>\n            <input type="text" placeholder="data/htdigest" class="form-control input-xlarge" required="required" ng-model="httpDigest.htdigest">\n            <p class="help-block">Location on the filesystem of the htdigest file</p>\n        </div>\n\n        <div class="form-group">\n            <label class="control-label" for="digest_domains">Digest domains</label>\n            <tags-input \n                custom-class="ag-tags"\n                ng-model="httpDigest.digest_domains"\n                add-on-space="true"\n                min-length="1"\n                max-length="256"\n                allowed-tags-pattern="^/[a-zA-Z0-9_+./%-]*$"\n                placeholder="Add a path">\n            </tags-input>\n            <p class="help-block">Space-separated list of URI paths for which authentication will be applied</p>\n        </div>\n\n        <div class="form-group">\n            <label class="control-label" for="nonce_timeout">Nonce timeout</label>\n            <input type="text" placeholder="3600" class="form-control input-xlarge" required="required" ng-model="httpDigest.nonce_timeout">\n            <p class="help-block">Expiration in seconds for inactive authentication</p>\n        </div>\n    </fieldset>\n\n    <div class="btn-group pull-right">\n        <button\n            type="button" title="Cancel" class="btn btn-sm btn-default" ag-cancel-edit>Cancel</button>\n        <button type="submit" title="Save" class="btn btn-sm btn-success">Save</button>\n    </div>\n\n    <div class="clearfix"></div>\n</form></div>\n')}]),angular.module("html/settings/authentication/http-digest-view.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/http-digest-view.html",'<table class="table table-striped">\n    <tr>\n        <td>Realm</td>\n        <td>{{httpDigest.realm}}</td>\n    </tr>\n\n    <tr>\n        <td>htdigest Location</td>\n        <td>{{httpDigest.htdigest}}</td>\n    </tr>\n\n    <tr>\n        <td>Digest Domains</td>\n        <td>\n            <p ng-repeat="domain in httpDigest.digest_domains">{{domain}}</p>\n        </td>\n    </tr>\n\n    <tr>\n        <td>Nonce Timeout</td>\n        <td>{{httpDigest.nonce_timeout}}</td>\n    </tr>\n</table>\n')}]),angular.module("html/settings/authentication/http-digest.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/http-digest.html",'<ag-collapse class="panel-info"\n    no-chevron\n    conditionals="{edit: inEdit, delete: false}">\n    <collapse-header>\n        <h4 class="panel-title">\n            <i class="glyphicon glyphicon-lock"></i>\n\n            HTTP Digest Settings\n\n            <div class="btn-group pull-right">\n                <button\n                    type="button" title="Cancel" class="btn btn-sm btn-default"\n                    collapse-flag flags="{edit: false}" collapse-click="cancelEdit"\n                    collapse-button criteria="{delete: false, edit: true}">\n                    Cancel\n                </button>\n\n                <button \n                    type="button" class="btn btn-sm btn-success" title="Edit settings"\n                    collapse-flag flags="{edit: true}" collapse-click="startEdit"\n                    collapse-button criteria="{delete: false, edit: false}">\n                    <i class="glyphicon glyphicon-edit"></i>\n                </button>\n\n                <button type="button" class="btn btn-sm btn-danger" title="Remove Authentication"\n                    collapse-flag flags="{delete: true}"\n                    collapse-button criteria="{delete: false}">\n                    <i class="glyphicon glyphicon-trash"></i>\n                </button>\n            </div>\n        </h4>\n\n        <div class="clearfix"></div>\n\n        <span collapse-show\n            criteria="{delete: false}"\n            default-template="\'html/empty-content.html\'"\n            toggled-template="\'html/settings/authentication/remove.html\'"></span>\n    </collapse-header>\n\n    <collapse-body>\n        <span\n            collapse-show\n            criteria="{edit: false}"\n            default-template="\'html/settings/authentication/http-digest-view.html\'"\n            toggled-template="\'html/settings/authentication/http-digest-edit.html\'"></span>\n    </collapse-body>\n</ag-collapse>\n')}]),angular.module("html/settings/authentication/index.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/index.html",'<div ng-show="showAuthenticationSetup()">\n    <div class="panel">\n        <p>\n        There is currently NO Authentication. Select <b>ONE</b> of the\n        authentication methods below for your application:\n        </p>\n    \n        <div class="btn-group">\n            <button ng-click="showHttpBasicAuthenticationForm = true" class="btn btn-sm btn-primary" title="HTTP Basic">\n                HTTP Basic\n            </button>\n\n            <button ng-click="showHttpDigestAuthenticationForm = true" class="btn btn-sm btn-primary" title="HTTP Digest">\n                HTTP Digest\n            </button>\n\n            <button ng-click="showOAuth2AuthenticationForm = true" class="btn btn-sm btn-primary" title="OAuth2">\n                OAuth2\n            </button>\n        </div>\n    </div>\n\n    <p><a href="https://apigility.org/documentation/auth/authentication-about" target="_blank">\n        <i class="glyphicon glyphicon-info-sign"></i> More Information\n    </a></p>\n</div>\n\n<ag-conditional-include condition="showHttpBasicAuthenticationForm"\n    src="html/settings/authentication/new-http-basic.html"></ag-conditional-include>\n\n<ag-conditional-include condition="showHttpBasicAuthentication"\n    src="html/settings/authentication/http-basic.html"></ag-conditional-include>\n\n<ag-conditional-include condition="showHttpDigestAuthenticationForm"\n    src="html/settings/authentication/new-http-digest.html"></ag-conditional-include>\n\n<ag-conditional-include condition="showHttpDigestAuthentication"\n    src="html/settings/authentication/http-digest.html"></ag-conditional-include>\n\n<ag-conditional-include condition="showOAuth2AuthenticationForm"\n    src="html/settings/authentication/new-oauth2.html"></ag-conditional-include>\n\n<ag-conditional-include condition="showOAuth2Authentication"\n    src="html/settings/authentication/oauth2.html"></ag-conditional-include>\n\n')}]),angular.module("html/settings/authentication/new-http-basic.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/new-http-basic.html",'<div class="panel panel-primary">\n    <div class="panel-heading">\n        <h4 class="panel-title">Setup HTTP Basic Authentication</h4>\n    </div>\n\n    <div class="panel-body">\n        <form class="form" ng-submit="createHttpBasicAuthentication()" ag-form>\n            <fieldset>\n                <div class="form-group">\n                    <label class="control-label" for="realm">Authentication Realm</label>\n                    <input type="text" placeholder="api" class="form-control input-xlarge" required="required" ng-model="realm">\n                    <p class="help-block">The Authentication Realm for the HTTP Basic Authentication</p>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="htpasswd">Location of htpasswd file</label>\n                    <input type="text" placeholder="data/htpasswd" class="form-control input-xlarge" required="required" ng-model="htpasswd">\n                    <p class="help-block">Location on the filesystem of the htpasswd file</p>\n                </div>\n            </fieldset>\n\n            <div class="btn-group pull-right">\n                <button class="btn btn-sm btn-default" type="button" ng-click="resetForm()">Cancel</button>\n                <button class="btn btn-sm btn-primary" type="submit">Save</button>\n            </div>\n        </form>\n    </div>\n</div>\n\n')}]),angular.module("html/settings/authentication/new-http-digest.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/new-http-digest.html",'<div class="panel panel-primary">\n    <div class="panel-heading">\n        <h4 class="panel-title">Setup HTTP Digest Authentication</h4>\n    </div>\n\n    <div class="panel-body">\n        <form class="form" ng-submit="createHttpDigestAuthentication()" ag-form>\n            <fieldset>\n                <div class="form-group">\n                    <label class="control-label" for="realm">Realm</label>\n                    <input type="text" placeholder="api" class="form-control input-xlarge" required="required" ng-model="realm">\n                    <p class="help-block">HTTP authentication realm</p>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="htdigest">Location of htdigest file</label>\n                    <input type="text" placeholder="data/htdigest"\n                        class="form-control input-xlarge" required="required" ng-model="htdigest">\n                    <p class="help-block">Location on the filesystem of the htdigest file</p>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="digest_domains">Digest domains</label>\n                    <tags-input \n                        custom-class="ag-tags"\n                        ng-model="digest_domains"\n                        add-on-space="true"\n                        min-length="1"\n                        max-length="256"\n                        allowed-tags-pattern="^/[a-zA-Z0-9_+./%-]*$"\n                        placeholder="Add a path">\n                    </tags-input>\n                    <p class="help-block">Space-separated list of URI paths for which authentication will be applied</p>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="nonce_timeout">Nonce timeout</label>\n                    <input type="text" placeholder="3600" class="form-control input-xlarge" required="required" ng-model="nonce_timeout">\n                    <p class="help-block">Expiration in seconds for inactive authentication</p>\n                </div>\n            </fieldset>\n\n            <div class="btn-group pull-right">\n                <button class="btn btn-sm btn-default" type="button" ng-click="resetForm()">Cancel</button>\n                <button class="btn btn-sm btn-primary" type="submit">Save</button>\n            </div>\n        </form>\n    </div>\n</div>\n\n')}]),angular.module("html/settings/authentication/new-oauth2.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/new-oauth2.html",'<div class="panel panel-primary">\n    <div class="panel-heading">\n        <h4 class="panel-title">Setup OAuth2 Authentication</h4>\n    </div>\n\n    <div class="panel-body">\n        <form class="form" ng-submit="createOAuth2Authentication()" ag-form>\n            <fieldset>\n                <div class="form-group">\n                    <div class="btn-group" data-toggle="buttons">\n                        <label class="btn btn-primary">\n                            <input type="radio" name="dsn_type" ng-model="dsn_type" value="PDO" checked="checked"> PDO\n                        </label>\n                        <label class="btn btn-primary">\n                            <input type="radio" name="dsn_type" ng-model="dsn_type" value="Mongo"> Mongo\n                        </label>\n                    </div>\n                </div>\n            </fieldset>\n\n            <fieldset ng-show="dsn_type == \'PDO\'">\n                <div class="form-group">\n                    <label class="control-label" for="dsn">PDO DSN</label>\n                    <input type="text" placeholder="sqlite::memory:" class="form-control input-xlarge" ng-model="dsn">\n                    <p class="help-block">The PDO database source name (DSN).</p>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="username">Username</label>\n                    <input type="text" placeholder="username" class="form-control input-xlarge" ng-model="username">\n                    <p class="help-block">Username associated with the database holding\n                        OAuth2 credentials (required if not using SQLite).</p>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="password">Password</label>\n                    <input type="password" placeholder="password" class="form-control input-xlarge" ng-model="password">\n                    <p class="help-block">Password for the username listed (required if not using SQLite).</p>\n                </div>\n            </fieldset>\n\n            <fieldset ng-show="dsn_type == \'Mongo\'">\n                <div class="form-group">\n                    <label class="control-label" for="dsn">Mongo server\n                        connection string</label>\n                    <input type="text" placeholder="(optional) mongodb://[username:password@]host1[:port1][,host2[:port2:],...]/db" class="form-control input-xlarge" ng-model="dsn">\n                    <p class="help-block">The MongoClient server connection\n                    string; if not provided, "mongodb://localhost:27017" will be\n                    used. "mongodb://" may be omitted from the string.</p>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="database">Mongo Database</label>\n                    <input type="text" class="form-control input-xlarge" ng-model="database">\n                    <p class="help-block">The Mongo database name.</p>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div class="form-group" ng-show="dsn_type">\n                    <label class="control-label" for="route_match">OAuth2 route</label>\n                    <input type="text" placeholder="/oauth" class="form-control input-xlarge" ng-model="route_match">\n                    <p class="help-block">Base URI to use as the OAuth2 server endpoint.</p>\n                </div>\n            </fieldset>\n\n            <div class="btn-group pull-right">\n                <button class="btn btn-sm btn-default" type="button" ng-click="resetForm()">Cancel</button>\n                <button class="btn btn-sm btn-primary" type="submit">Save</button>\n            </div>\n        </form>\n    </div>\n</div>\n')}]),angular.module("html/settings/authentication/oauth2-edit.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/oauth2-edit.html",'<div class="panel-body"><form ag-form class="form" ng-submit="updateOAuth2Authentication()">\n    <fieldset ng-show="oauth2.dsn_type == \'PDO\'">\n        <div class="form-group">\n            <label class="control-label" for="dsn">PDO DSN</label>\n            <input type="text" placeholder="sqlite::memory:" class="form-control input-xlarge" ng-model="oauth2.dsn">\n            <p class="help-block">The PDO database source name (DSN).</p>\n        </div>\n\n        <div class="form-group">\n            <label class="control-label" for="username">PDO Username</label>\n            <input type="text" placeholder="username" class="form-control input-xlarge" ng-model="oauth2.username">\n            <p class="help-block">Username associated with the database holding\n                OAuth2 credentials (required if not using SQLite).</p>\n        </div>\n\n        <div class="form-group">\n            <label class="control-label" for="password">PDO Password</label>\n            <input type="password" placeholder="password" class="form-control input-xlarge" ng-model="oauth2.password">\n            <p class="help-block">Password for the username listed (required if not using SQLite).</p>\n        </div>\n    </fieldset>\n\n    <fieldset ng-show="oauth2.dsn_type == \'Mongo\'">\n        <div class="form-group">\n            <label class="control-label" for="dsn">Mongo server\n                connection string</label>\n            <input type="text" placeholder="(optional) mongodb://[username:password@]host1[:port1][,host2[:port2:],...]/db" class="form-control input-xlarge" ng-model="oauth2.dsn">\n            <p class="help-block">The MongoClient server connection\n            string; if not provided, "mongodb://localhost:27017" will be\n            used. "mongodb://" may be omitted from the string.</p>\n        </div>\n\n        <div class="form-group" ng-show="oauth2.dsn_type == \'Mongo\'">\n            <label class="control-label" for="database">Mongo Database</label>\n            <input type="text" class="form-control input-xlarge" ng-model="oauth2.database">\n            <p class="help-block">The Mongo database name.</p>\n        </div>\n    </fieldset>\n\n    <fieldset>\n        <div class="form-group">\n            <label class="control-label" for="route_match">OAuth2 route</label>\n            <input type="text" placeholder="/oauth" class="form-control input-xlarge" ng-model="oauth2.route_match">\n            <p class="help-block">Base URI to use as the OAuth2 server endpoint.</p>\n        </div>\n    </fieldset>\n\n    <div class="btn-group pull-right">\n        <button\n            type="button" title="Cancel" class="btn btn-sm btn-default"\n            collapse-flag flags="{edit: false}" click="cancelEdit">Cancel</button>\n        <button type="submit" title="Save" class="btn btn-sm btn-success">Save</button>\n    </div>\n\n    <div class="clearfix"></div>\n</form></div>\n')}]),angular.module("html/settings/authentication/oauth2-view.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/oauth2-view.html",'<table class="table table-striped">\n    <tr ng-show="oauth2.dsn_type == \'PDO\'">\n        <td>PDO DSN</td>\n        <td>{{oauth2.dsn}}</td>\n    </tr>\n\n    <tr ng-show="oauth2.username && (oauth2.dsn_type == \'PDO\')">\n        <td>Database username</td>\n        <td>{{oauth2.username}}</td>\n    </tr>\n\n    <tr ng-show="oauth2.password && (oauth2.dsn_type == \'PDO\')">\n        <td>Database password</td>\n        <td>{{oauth2.password}}</td>\n    </tr>\n\n    <tr ng-show="oauth2.dsn_type == \'Mongo\'">\n        <td>Mongo server connection string</td>\n        <td>{{oauth2.dsn}}</td>\n    </tr>\n\n    <tr ng-show="oauth2.database && (oauth2.dsn_type == \'Mongo\')">\n        <td>Database name</td>\n        <td>{{oauth2.database}}</td>\n    </tr>\n\n    <tr>\n        <td>OAuth2 route</td>\n        <td>{{oauth2.route_match}}</td>\n    </tr>\n</table>\n')}]),angular.module("html/settings/authentication/oauth2.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/oauth2.html",'<ag-collapse class="panel-info"\n    no-chevron\n    conditionals="{{ {edit: inEdit, delete: false} }}">\n    <collapse-header>\n        <h4 class="panel-title">\n            <i class="glyphicon glyphicon-lock"></i>\n\n            OAuth2 Settings\n\n            <div class="btn-group pull-right">\n                <button\n                    type="button" title="Cancel" class="btn btn-sm btn-default"\n                    collapse-flag flags="{edit: false}" collapse-click="cancelEdit"\n                    collapse-button criteria="{delete: false, edit: true}">\n                    Cancel\n                </button>\n\n                <button \n                    type="button" class="btn btn-sm btn-success" title="Edit settings"\n                    collapse-flag flags="{edit: true}" collapse-click="startEdit"\n                    collapse-button criteria="{delete: false, edit: false}">\n                    <i class="glyphicon glyphicon-edit"></i>\n                </button>\n\n                <button type="button" class="btn btn-sm btn-danger" title="Remove Authentication"\n                    collapse-flag flags="{delete: true}"\n                    collapse-button criteria="{delete: false}">\n                    <i class="glyphicon glyphicon-trash"></i>\n                </button>\n            </div>\n        </h4>\n\n        <div class="clearfix"></div>\n\n        <span collapse-show\n            criteria="{delete: false}"\n            default-template="\'html/empty-content.html\'"\n            toggled-template="\'html/settings/authentication/remove.html\'"></span>\n    </collapse-header>\n\n    <collapse-body>\n        <span\n            collapse-show\n            criteria="{edit: false}"\n            default-template="\'html/settings/authentication/oauth2-view.html\'"\n            toggled-template="\'html/settings/authentication/oauth2-edit.html\'"></span>\n    </collapse-body>\n</ag-collapse>\n\n')}]),angular.module("html/settings/authentication/remove.html",[]).run(["$templateCache",function(a){a.put("html/settings/authentication/remove.html",'<div class="panel panel-danger">\n    <div class="panel-heading"><h4 class="panel-title">Remove Authentication</h4></div>\n    <div class="panel-body">\n        <form ng-submit="removeAuthentication()">\n            <p>Are you sure you want to remove authentication?</p>\n\n            <div class="btn-group pull-right">\n                <button collapse-flag flags="{delete: false}" type="button" class="btn btn-sm btn-default">Cancel</button>\n                <button type="submit" class="btn btn-sm btn-danger">Yes</button>\n            </div>\n        </form>\n    </div>\n</div>\n')}]),angular.module("html/settings/content-negotiation/edit.html",[]).run(["$templateCache",function(a){a.put("html/settings/content-negotiation/edit.html",'<form class="form-inline" role="form" ag-form>\n<div class="panel-body">\n  <div class="ag-new-input pull-right">\n    <div class="form-group">\n      <input type="text" placeholder="View model class" class="form-control input-xlarge" required="required" ng-model="selector.viewModel">\n    </div>\n\n    <button type="button" ng-click="addViewModel(selector.viewModel, selector)" class="btn btn-default btn-success" title="Add View Model">\n        Add View Model\n    </button>\n  </div>\n</div>\n\n<table class="table table-striped">\n  <thead>\n    <tr>\n      <th width="40%">View Model</th>\n      <th>Mediatypes</th>\n      <th width="5%">&nbsp;</th>\n    </tr>\n  </thead>\n\n  <tbody>\n    <tr ng-repeat="(viewModel, mediaTypes) in selector.selectors">\n      <td>{{ viewModel }}</td>\n\n      <td>\n        <div class="control-group">\n          <tags-input\n            custom-class="ag-tags"\n            ng-model="mediaTypes"\n            add-on-space="true"\n            max-length="256"\n            allowed-tags-pattern="^[a-zA-Z-]+/[a-zA-Z0-9*_+.-]+$"\n            placeholder="Add a mediatype">\n          </tags-input>\n        </div>\n      </td>\n\n      <td>\n        <button type="button" class="btn btn-sm btn-danger"\n          ng-click="removeViewModel(viewModel, selector)">\n          <i class="glyphicon glyphicon-trash"></i>\n        </button>\n      </td>\n    </tr>\n\n    <tr>\n      <td colspan="3">\n        <div class="btn-group pull-right">\n          <button type="button" collapse-flag flags="{editSelector: false}"\n              ag-cancel-edit ng-click="resetSelectorForm(selector)" class="btn btn-sm btn-default">Cancel</button>\n          <button type="button" ng-click="updateSelector(selector)" class="btn btn-sm btn-success">Update Selector</button>\n        </div>\n\n        <div class="clearfix"></div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</form>\n')}]),angular.module("html/settings/content-negotiation/index.html",[]).run(["$templateCache",function(a){a.put("html/settings/content-negotiation/index.html",'<ag-include src="html/settings/content-negotiation/new-selector-form.html"></ag-include>\n\n<div class="ag panel-group tooltip-api">\n  <ag-collapse class="panel-info"\n    ng-repeat="selector in selectors"\n    active="{{ activeSelector == selector.content_name }}"\n    name="{{ selector.content_name }}"\n    searchparam="selector"\n    conditionals="{{ {deleteSelector: false, editSelector: inEdit} }}">\n    <collapse-header>\n      <h4 class="panel-title">\n        <i class="glyphicon glyphicon-tags"></i> {{ selector.content_name }}\n\n        <div class="btn-group pull-right">\n            <button\n                type="button" title="Cancel" class="btn btn-sm btn-default"\n                collapse-button criteria="{deleteSelector: false, editSelector: true}"\n                ui-sref="ag.settings.content-negotiation({ edit: null})"\n                ui-sref-options="{ notify: false }">\n                Cancel\n            </button>\n\n            <button \n                type="button" class="btn btn-sm btn-success" title="Edit selector"\n                collapse-button criteria="{deleteSelector: false, editSelector: false}"\n                ui-sref="ag.settings.content-negotiation({ edit: true})"\n                ui-sref-options="{ notify: false }">\n                <i class="glyphicon glyphicon-edit"></i>\n            </button>\n\n            <button \n                type="button" class="btn btn-sm btn-danger" title="Remove selector"\n                collapse-flag flags="{deleteSelector: true}"\n                collapse-button criteria="{deleteSelector: false}">\n                <i class="glyphicon glyphicon-trash"></i>\n            </button>\n        </div>\n      </h4>\n\n      <div class="clearfix"></div>\n\n      <span collapse-show\n          criteria="{deleteSelector: false}"\n          default-template="\'html/empty-content.html\'"\n          toggled-template="\'html/settings/content-negotiation/remove.html\'"></span>\n    </collapse-header>\n\n    <collapse-body>\n        <div collapse-show criteria="{editSelector: false}"\n            default-template="\'html/settings/content-negotiation/view.html\'"\n            toggled-template="\'html/settings/content-negotiation/edit.html\'"></div>\n    </collapse-body>\n  </ag-collapse>\n</div>\n\n')}]),angular.module("html/settings/content-negotiation/new-selector-form.html",[]).run(["$templateCache",function(a){a.put("html/settings/content-negotiation/new-selector-form.html",'<div>\n  <button class="btn btn-info pull-left" title="Help" ng-click="help()">\n    <i class="glyphicon glyphicon-info-sign"></i>\n  </button>\n\n  <form ng-hide="showNewSelectorForm" class="form-inline pull-right" role="form">\n    <div class="form-group">\n      <input type="text" placeholder="Selector name" class="form-control input-xlarge" required="required" ng-model="newSelector.content_name">\n    </div>\n\n    <button type="button" ng-click="showNewSelectorForm = true" class="btn btn-default btn-primary" title="Create New Selector">\n      Create New Selector\n    </button>\n  </form>\n</div>\n<div class="clearfix ag-new-input"></div>\n\n<div ng-show="showNewSelectorForm" class="panel panel-primary">\n  <div class="panel-heading">\n    <h4 class="panel-title">{{ newSelector.content_name }}</h4>\n  </div>\n\n  <div class="panel-body">\n    <div class="ag-new-input pull-right"><form class="form-inline" role="form" ag-form>\n      <div class="form-group">\n        <input type="text" placeholder="View model class" class="form-control input-xlarge" required="required" ng-model="newSelector.viewModel">\n      </div>\n\n      <button type="button" ng-click="addViewModel(newSelector.viewModel, newSelector)" class="btn btn-default btn-primary" title="Add View Model">\n          Add View Model\n      </button>\n    </form></div>\n  </div>\n\n  <table class="table table-striped">\n    <thead>\n      <tr>\n        <th width="40%">View Model</th>\n        <th>Mediatypes</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr ng-repeat="(viewModel, mediaTypes) in newSelector.selectors">\n        <td>{{ viewModel }}</td>\n\n        <td>\n          <div class="control-group">\n            <tags-input\n              custom-class="ag-tags"\n              ng-model="mediaTypes"\n              add-on-space="true"\n              max-length="256"\n              allowed-tags-pattern="^[a-zA-Z-]+/[a-zA-Z0-9*_+.-]+$"\n              placeholder="Add a mediatype">\n            </tags-input>\n          </div>\n        </td>\n      </tr>\n\n      <tr>\n        <td colspan="2">\n          <div class="btn-group pull-right">\n            <button type="button" ng-click="resetNewSelectorForm()&&(showNewSelectorForm = false)" class="btn btn-sm btn-default">Cancel</button>\n            <button type="button" ng-click="createSelector()" class="btn btn-sm btn-primary">Create Selector</button>\n          </div>\n\n          <div class="clearfix"></div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n')
}]),angular.module("html/settings/content-negotiation/remove.html",[]).run(["$templateCache",function(a){a.put("html/settings/content-negotiation/remove.html",'<div class="panel panel-danger">\n    <div class="panel-heading"><h4 class="panel-title">Remove Selector</h4></div>\n    <div class="panel-body">\n    <form ng-submit="removeSelector(selector.content_name)">\n        <p>Are you sure you want to delete the Selector?</p>\n\n        <div class="btn-group pull-right">\n        <button collapse-flag flags="{deleteSelector: false}" type="button" class="btn btn-sm btn-default">Cancel</button>\n        <button type="submit" class="btn btn-sm btn-danger">Yes</button>\n        </div>\n\n        <div class="clearfix"></div>\n    </form>\n    </div>\n</div>\n')}]),angular.module("html/settings/content-negotiation/view.html",[]).run(["$templateCache",function(a){a.put("html/settings/content-negotiation/view.html",'<table class="table table-striped">\n  <thead>\n    <tr>\n      <th width="40%">View Model</th>\n      <th>Mediatypes</th>\n    </tr>\n  </thead>\n\n  <tbody>\n    <tr ng-repeat="(viewModel, mediaTypes) in selector.selectors">\n      <td>{{ viewModel }}</td>\n\n      <td>\n        <ul>\n          <li ng-repeat="mediaType in mediaTypes">{{ mediaType }}</li>\n        </ul>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n')}]),angular.module("html/settings/dashboard.html",[]).run(["$templateCache",function(a){a.put("html/settings/dashboard.html",'<div class="panel panel-info">\n    <div class="panel-heading">\n        <h4 class="panel-title">\n            <i class="glyphicon glyphicon-lock"></i>\n            <a ui-sref="ag.settings.authentication">Authentication</a>\n        </h4>\n    </div>\n\n    <div class="panel-body" ng-show="!dashboard.authentication">\n        <p class="text-warning">\n            No authentication configured; <a ui-sref="ag.settings.authentication">would you like to set it up now?</a>\n        </p>\n\n        <p><a href="https://apigility.org/documentation/auth/authentication-about" target="_blank">\n            <i class="glyphicon glyphicon-info-sign"></i> More information\n        </a></p>    \n    </div>\n\n    <table class="table">\n        <ag-conditional-include\n            condition="isHttpBasicAuthentication(dashboard.authentication)"\n            src="html/settings/authentication/http-basic-view.html"></ag-conditional-include>\n        <ag-conditional-include\n            condition="isHttpDigestAuthentication(dashboard.authentication)"\n            src="html/settings/authentication/http-digest-view.html"></ag-conditional-include>\n        <ag-conditional-include\n            condition="isOAuth2(dashboard.authentication)"\n            src="html/settings/authentication/oauth2-view.html"></ag-conditional-include>\n    </table>\n</div>\n\n<div class="panel panel-info">\n    <div class="panel-heading">\n        <h4 class="panel-title">\n            <i class="glyphicon glyphicon-tags"></i>\n            <a ui-sref="ag.settings.content-negotiation">Content Negotiation</a>\n        </h4>\n    </div>\n\n    <div class="panel-body" ng-show="!dashboard.contentNegotiation.length">\n        <p class="text-warning">\n            No content negotiation selector rules configured;\n            <a ui-sref="ag.settings.content-negotiation">would you like to set one up now?</a>\n        </p>\n\n        <p><a href="https://apigility.org/documentation/api-primer/content-negotiation" target="_blank">\n            <i class="glyphicon glyphicon-info-sign"></i> More information\n        </a></p>    \n    </div>\n\n    <ul class="list-group">\n        <li ng-repeat="selector in dashboard.contentNegotiation" class="list-group-item">\n            <a ui-sref="ag.settings.content-negotiation({selector: selector.content_name})">{{ selector.content_name }}</a>\n        </li>\n    </ul>\n</div>\n\n<div class="panel panel-info">\n    <div class="panel-heading">\n        <h4 class="panel-title">\n            <i class="glyphicon glyphicon-book"></i>\n            <a ui-sref="ag.settings.db-adapters">Database Adapters</a>\n        </h4>\n    </div>\n\n    <div class="panel-body" ng-show="!dashboard.dbAdapters.length">\n        <p class="text-warning">\n            No database adapters configured;\n            <a ui-sref="ag.settings.db-adapters">would you like to set one up now?</a>\n        </p>\n    </div>\n\n    <ul class="list-group">\n        <li ng-repeat="adapter in dashboard.dbAdapters" class="list-group-item">\n            <a ui-sref="ag.settings.db-adapters({adapter: adapter.adapter_name})">{{ adapter.adapter_name }}</a>\n        </li>\n    </ul>\n</div>\n\n<div class="panel panel-info">\n    <div class="panel-heading">\n        <h4 class="panel-title">\n            <i class="glyphicon glyphicon-book"></i>\n            <a ui-sref="ag.settings.doctrine-adapters">Doctrine Adapters</a>\n        </h4>\n    </div>\n\n    <div class="panel-body" ng-show="!dashboard.doctrineAdapters.length">\n        <p class="text-warning">\n            No doctrine adapter configured;\n            <a ui-sref="ag.settings.doctrine-adapters">would you like to set one up now?</a>\n        </p>\n    </div>\n\n    <ul class="list-group">\n        <li ng-repeat="adapter in dashboard.doctrineAdapters" class="list-group-item">\n            <a ui-sref="ag.settings.doctrine-adapters({adapter: adapter.adapter_name})">{{ adapter.adapter_name }}</a>\n        </li>\n    </ul>\n</div>\n')}]),angular.module("html/settings/db-adapters/edit.html",[]).run(["$templateCache",function(a){a.put("html/settings/db-adapters/edit.html",'<form class="panel-body" novalidate ng-submit="saveDbAdapter($index)" ag-form>\n    <fieldset>\n        <div class="form-group">\n            <label class="control-label" for="adapterName">Adapter Name</label>\n            <div class="controls">\n                <input type="text" placeholder="adapter name" class="form-control input-xlarge" required="required" ng-model="dbAdapter.adapter_name">\n                <p class="help-block">"Virtual" name of the DB adapter service</p>\n            </div>\n        </div>\n\n        <div class="form-group">\n            <label class="control-label" for="driver">Driver Type</label>\n            <div class="controls">\n                <select class="form-control input-xlarge" ng-model="dbAdapter.driver">\n                    <option>IbmDb2</option>\n                    <option>Mysqli</option>\n                    <option>Oci8</option>\n                    <option>Pdo_Mysql</option>\n                    <option>Pdo_Oci</option>\n                    <option>Pdo_Pgsql</option>\n                    <option>Pdo_Sqlite</option>\n                    <option>Pgsql</option>\n                    <option>Sqlsrv</option>\n                </select>\n            </div>\n        </div>\n\n        <div class="form-group">\n            <label class="control-label" for="database">Database</label>\n            <div class="controls">\n                <input type="text" placeholder="database name" class="form-control input-xlarge" required="required" ng-model="dbAdapter.database">\n                <p class="help-block">Name of database or database file</p>\n            </div>\n        </div>\n\n        <div class="form-group">\n            <label class="control-label" for="dsn">DSN</label>\n            <div class="controls">\n                <input type="text" placeholder="(Optional) DSN for database" class="form-control input-xlarge" ng-model="dbAdapter.dsn">\n                <p class="help-block">DSN for the database; can be used to\n                provide the full database connection specification. Use this if\n                developing for Google App Engine.</p>\n            </div>\n        </div>\n\n        <div class="form-group" ng-show="dbAdapter.driver != \'Pdo_Sqlite\'">\n            <label class="control-label" for="username">Username</label>\n            <div class="controls">\n                <input type="text" placeholder="(Optional) Username" class="form-control input-xlarge" ng-model="dbAdapter.username">\n                <p class="help-block">Username with which to connect</p>\n            </div>\n        </div>\n\n        <div class="form-group" ng-show="dbAdapter.driver != \'Pdo_Sqlite\'">\n            <label class="control-label" for="password">Password</label>\n            <div class="controls">\n                <input type="text" placeholder="(Optional) Password" class="form-control input-xlarge" ng-model="dbAdapter.password">\n                <p class="help-block">Password with which to connect</p>\n            </div>\n        </div>\n\n        <div class="form-group" ng-show="dbAdapter.driver != \'Pdo_Sqlite\'">\n            <label class="control-label" for="hostname">Hostname</label>\n            <div class="controls">\n                <input type="text" placeholder="(Optional) Hostname" class="form-control input-xlarge" ng-model="dbAdapter.hostname">\n                <p class="help-block">Hostname to which to connect</p>\n            </div>\n        </div>\n\n        <div class="form-group" ng-show="dbAdapter.driver != \'Pdo_Sqlite\'">\n            <label class="control-label" for="port">Port</label>\n            <div class="controls">\n                <input type="text" placeholder="(Optional) Port" class="form-control input-xlarge" ng-model="dbAdapter.port">\n                <p class="help-block">Port to which to connect</p>\n            </div>\n        </div>\n\n        <div class="form-group" ng-show="dbAdapter.driver && (dbAdapter.driver != \'Pdo_Pgsql\') && (dbAdapter.driver != \'Pgsql\')">\n            <label class="control-label" for="charset">Charset</label>\n            <div class="controls">\n                <input type="text" placeholder="(Optional) Charset" class="form-control input-xlarge" ng-model="dbAdapter.charset">\n                <p class="help-block">Charset of database</p>\n            </div>\n        </div>\n    </fieldset>\n\n    <ag-collapse class="panel-default">\n        <collapse-header>\n            <h4 class="panel-title">Driver Options</h4>\n        </collapse-header>\n\n        <collapse-body>\n            <li\n                class="list-group-item"\n                ng-repeat="(optionKey, optionValue) in dbAdapter.driver_options">\n\n                <div class="form-group">\n                    <label>Option:</label>\n                    <input type="text" class="form-control input-xlarge" ng-model="optionKey">\n                </div>\n\n                <div class="form-group">\n                    <label>Value:</label>\n                    <input type="text" class="form-control input-xlarge" ng-model="optionValue">\n                </div>\n\n                <div class="btn-group ag-new-input pull-right">\n                    <button type="button" class="btn btn-sm btn-danger"\n                        ng-click="removeDriverOption(dbAdapter, optionKey)">Remove Option</button>\n                </div>\n\n                <div class="clearfix"></div>\n            </li>\n\n            <li class="list-group-item">\n                <div class="form-group">\n                    <label>Option:</label>\n                    <input type="text" class="form-control input-xlarge" ng-model="dbAdapter._newOptionKey">\n                </div>\n\n                <div class="form-group">\n                    <label>Value:</label>\n                    <input type="text" class="form-control input-xlarge" ng-model="dbAdapter._newOptionValue">\n                </div>\n\n                <div class="btn-group ag-new-input pull-right">\n                    <button type="button" class="btn btn-sm btn-primary"\n                        ng-click="addDriverOption(dbAdapter)">Add Option</button>\n                </div>\n\n                <div class="clearfix"></div>\n            </li>\n        </collapse-body>\n    </ag-collapse>\n\n    <div class="btn-group pull-right">\n        <button type="button" class="btn btn-sm btn-default" ag-cancel-edit>Cancel</button>\n        <button type="submit" class="btn btn-sm btn-success">Save</button>\n    </div>\n\n    <div class="clearfix"></div>\n</form>\n\n')}]),angular.module("html/settings/db-adapters/index.html",[]).run(["$templateCache",function(a){a.put("html/settings/db-adapters/index.html",'<ag-include src="html/settings/db-adapters/new-adapter-form.html"></ag-include>\n\n<div class="ag panel-group tooltip-api">\n  <ag-collapse class="panel-info"\n    ng-repeat="dbAdapter in dbAdapters"\n    active="{{ activeAdapter == dbAdapter.adapter_name }}"\n    name="{{ dbAdapter.adapter_name }}"\n    searchparam="adapter"\n    conditionals="{{ {edit: inEdit, delete: false} }}">\n    <collapse-header>\n      <h4 class="panel-title">\n        <i class="glyphicon glyphicon-book"></i>\n\n        {{ dbAdapter.adapter_name }}\n\n        <div class="btn-group pull-right">\n            <button\n                type="button" title="Cancel" class="btn btn-sm btn-default"\n                collapse-button criteria="{delete: false, edit: true}"\n                ui-sref="ag.settings.db-adapters({ edit: null})"\n                ui-sref-options="{ notify: false }">\n                Cancel\n            </button>\n\n            <button \n                type="button" class="btn btn-sm btn-success" title="Edit adapter"\n                collapse-button criteria="{delete: false, edit: false}"\n                ui-sref="ag.settings.db-adapters({ edit: true})"\n                ui-sref-options="{ notify: false }">\n                <i class="glyphicon glyphicon-edit"></i>\n            </button>\n\n            <button \n                type="button" class="btn btn-sm btn-danger" title="Remove adapter"\n                collapse-flag flags="{delete: true}"\n                collapse-button criteria="{delete: false}">\n                <i class="glyphicon glyphicon-trash"></i>\n            </button>\n        </div>\n      </h4>\n\n      <div class="clearfix"></div>\n\n      <span collapse-show\n          criteria="{delete: false}"\n          default-template="\'html/empty-content.html\'"\n          toggled-template="\'html/settings/db-adapters/remove.html\'"></span>\n    </collapse-header>\n\n    <collapse-body>\n        <div\n            collapse-show\n            criteria="{edit: false}"\n            default-template="\'html/settings/db-adapters/view.html\'"\n            toggled-template="\'html/settings/db-adapters/edit.html\'"></div>\n    </collapse-body>\n  </ag-collapse>\n</div>\n')}]),angular.module("html/settings/db-adapters/new-adapter-form.html",[]).run(["$templateCache",function(a){a.put("html/settings/db-adapters/new-adapter-form.html",'<div ng-hide="showNewDbAdapterForm" class="pull-right">\n    <button ng-click="showNewDbAdapterForm = true" class="btn btn-default btn-primary" title="Create New DB Adapter">\n        Create New DB Adapter\n    </button>\n</div>\n<div class="clearfix"></div>\n\n<div ng-show="showNewDbAdapterForm" class="panel panel-primary">\n    <div class="panel-heading"><h4 class="panel-title">Create a New DB Adapter</h4></div>\n\n    <div class="panel-body">\n        <form ng-submit="createNewDbAdapter()" ag-form>\n            <fieldset>\n                <div class="form-group">\n                    <label class="control-label" for="adapterName">Adapter Name</label>\n                    <div class="controls">\n                        <input type="text" placeholder="adapter name" class="form-control input-xlarge" required="required" ng-model="adapter_name">\n                        <p class="help-block">"Virtual" name of the DB adapter\n                            service. Examples include "DB\\Foo", "db.foo",\n                            "FooAdapter"; essentially, a unique name for the adapter\n                            that\'s descriptive of its purpose.</p>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="driver">Driver Type</label>\n                    <div class="controls">\n                        <select class="form-control input-xlarge" ng-model="driver">\n                            <option>IbmDb2</option>\n                            <option>Mysqli</option>\n                            <option>Oci8</option>\n                            <option>Pdo_Mysql</option>\n                            <option>Pdo_Oci</option>\n                            <option>Pdo_Pgsql</option>\n                            <option>Pdo_Sqlite</option>\n                            <option>Pgsql</option>\n                            <option>Sqlsrv</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="database">Database</label>\n                    <div class="controls">\n                        <input type="text" placeholder="database name" class="form-control input-xlarge" required="required" ng-model="database">\n                        <p class="help-block">Name of database or database file</p>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="dsn">DSN</label>\n                    <div class="controls">\n                        <input type="text" placeholder="(Optional) DSN for database" class="form-control input-xlarge" ng-model="dsn">\n                        <p class="help-block">DSN for the database; can be used to\n                        provide the full database connection specification. Use this if\n                        developing for Google App Engine.</p>\n                    </div>\n                </div>\n\n                <div class="form-group" ng-show="driver && (driver != \'Pdo_Sqlite\')">\n                    <label class="control-label" for="username">Username</label>\n                    <div class="controls">\n                        <input type="text" placeholder="(Optional) Username" class="form-control input-xlarge" ng-model="username">\n                        <p class="help-block">Username with which to connect</p>\n                    </div>\n                </div>\n\n                <div class="form-group" ng-show="driver && (driver != \'Pdo_Sqlite\')">\n                    <label class="control-label" for="password">Password</label>\n                    <div class="controls">\n                        <input type="text" placeholder="(Optional) Password" class="form-control input-xlarge" ng-model="password">\n                        <p class="help-block">Password with which to connect</p>\n                    </div>\n                </div>\n\n                <div class="form-group" ng-show="driver && (driver != \'Pdo_Sqlite\')">\n                    <label class="control-label" for="hostname">Hostname</label>\n                    <div class="controls">\n                        <input type="text" placeholder="(Optional) Hostname" class="form-control input-xlarge" ng-model="hostname">\n                        <p class="help-block">Hostname to which to connect</p>\n                    </div>\n                </div>\n\n                <div class="form-group" ng-show="driver && (driver != \'Pdo_Sqlite\')">\n                    <label class="control-label" for="port">Port</label>\n                    <div class="controls">\n                        <input type="text" placeholder="(Optional) Port" class="form-control input-xlarge" ng-model="port">\n                        <p class="help-block">Port to which to connect</p>\n                    </div>\n                </div>\n\n                <div class="form-group" ng-show="driver && (driver != \'Pdo_Pgsql\') && (driver != \'Pgsql\')">\n                    <label class="control-label" for="charset">Charset</label>\n                    <div class="controls">\n                        <input type="text" placeholder="(Optional) Charset" class="form-control input-xlarge" ng-model="charset">\n                        <p class="help-block">Charset of database</p>\n                    </div>\n                </div>\n            </fieldset>\n\n            <ag-collapse class="panel-default">\n                <collapse-header>\n                    <h4 class="panel-title">Driver Options</h4>\n                </collapse-header>\n\n                <collapse-body>\n                    <li\n                        class="list-group-item"\n                        ng-repeat="(optionKey, optionValue) in driver_options">\n\n                        <div class="form-group">\n                            <label>Option:</label>\n                            <input type="text" class="form-control input-xlarge" ng-model="optionKey">\n                        </div>\n\n                        <div class="form-group">\n                            <label>Value:</label>\n                            <input type="text" class="form-control input-xlarge" ng-model="optionValue">\n                        </div>\n\n                        <div class="btn-group ag-new-input pull-right">\n                            <button type="button" class="btn btn-sm btn-danger"\n                                ng-click="removeNewDriverOption(driver_options, optionKey)">Remove Option</button>\n                        </div>\n\n                        <div class="clearfix"></div>\n                    </li>\n\n                    <li class="list-group-item">\n                        <div class="form-group">\n                            <label>Option:</label>\n                            <input type="text" class="form-control input-xlarge" ng-model="newOptionKey">\n                        </div>\n\n                        <div class="form-group">\n                            <label>Value:</label>\n                            <input type="text" class="form-control input-xlarge" ng-model="newOptionValue">\n                        </div>\n\n                        <div class="btn-group ag-new-input pull-right">\n                            <button type="button" class="btn btn-sm btn-primary"\n                                ng-click="addNewDriverOption(driver_options)">Add Option</button>\n                        </div>\n\n                        <div class="clearfix"></div>\n                    </li>\n                </collapse-body>\n            </ag-collapse>\n\n            <div class="btn-group pull-right">\n                <a ng-click="resetForm()&&(showNewDbAdapterForm = false)" class="btn btn-sm btn-default">Cancel</a>\n                <button type="submit" class="btn btn-sm btn-primary">Create DB Adapter</button>\n            </div>\n\n            <div class="clearfix"></div>\n        </form>\n    </div>\n</div>\n\n<br clear="left">\n\n')}]),angular.module("html/settings/db-adapters/remove.html",[]).run(["$templateCache",function(a){a.put("html/settings/db-adapters/remove.html",'<div class="panel panel-danger">\n    <div class="panel-heading"><h4 class="panel-title">Remove DB Adapter</h4></div>\n    <div class="panel-body">\n    <form ng-submit="removeDbAdapter(dbAdapter.adapter_name)">\n        <p>Are you sure you want to delete the Adapter</p>\n\n        <div class="btn-group pull-right">\n        <button collapse-flag flags="{delete: false}" type="button" class="btn btn-sm btn-default">Cancel</button>\n        <button type="submit" class="btn btn-sm btn-danger">Yes</button>\n        </div>\n\n        <div class="clearfix"></div>\n    </form>\n    </div>\n</div>\n')}]),angular.module("html/settings/db-adapters/view.html",[]).run(["$templateCache",function(a){a.put("html/settings/db-adapters/view.html",'<table class="table table-striped">\n    <tr>\n        <td>Driver</td>\n        <td>{{ dbAdapter.driver }}</td>\n    </tr>\n\n    <tr>\n        <td>Database</td>\n        <td>{{ dbAdapter.database }}</td>\n    </tr>\n\n    <tr ng-show="dbAdapter.dsn">\n        <td>DSN</td>\n        <td>{{ dbAdapter.dsn }}</td>\n    </tr>\n\n    <tr ng-show="dbAdapter.username">\n        <td>Username</td>\n        <td>{{ dbAdapter.username }}</td>\n    </tr>\n\n    <tr ng-show="dbAdapter.password">\n        <td>Password</td>\n        <td>{{ dbAdapter.password }}</td>\n    </tr>\n\n    <tr ng-show="dbAdapter.hostname">\n        <td>Hostname</td>\n        <td>{{ dbAdapter.hostname }}</td>\n    </tr>\n\n    <tr ng-show="dbAdapter.port">\n        <td>Port</td>\n        <td>{{ dbAdapter.port }}</td>\n    </tr>\n\n    <tr ng-show="dbAdapter.charset">\n        <td>Charset</td>\n        <td>{{ dbAdapter.charset }}</td>\n    </tr>\n\n    <tr ng-show="dbAdapter.driver_options">\n        <td colspan="2">\n        <ag-collapse class="panel-default">\n            <collapse-header>\n                <h4 class="panel-title">Driver Options</h4>\n            </collapse-header>\n\n            <collapse-body>\n                <table class="table table-striped">\n                    <tr ng-repeat="(optionKey, optionValue) in dbAdapter.driver_options">\n                        <td>{{ optionKey }}</td>\n                        <td>{{ optionValue }}</td>\n                    </tr>\n                </table>\n            </collapse-body>\n        </ag-collapse>\n        </td>\n    </tr>\n</table>\n\n')}]),angular.module("html/settings/doctrine-adapters/edit.html",[]).run(["$templateCache",function(a){a.put("html/settings/doctrine-adapters/edit.html",'<form class="panel-body" novalidate ng-submit="saveDoctrineAdapter($index)" ng-show="doctrineAdapter.adapter_name != \'odm_default\'" ag-form>\n    <fieldset>\n        <div class="form-group">\n            <label class="control-label" for="driver">Driver Type</label>\n            <div class="controls">\n                {{doctrineAdapter.driverClass}}\n                <select class="form-control input-xlarge" ng-model="doctrineAdapter.driverClass" ng-options="k as v for (k,v) in ui.ormAdapters">\n                    <option>Select an adapter</option>\n                </select>\n            </div>\n            <p class="help-block">Driver adapter to use</p>\n        </div>\n\n        <div ng-switch="doctrineAdapter.driverClass">\n            <div ng-switch-when="Doctrine\\DBAL\\Driver\\PDOSqlite\\Driver">\n\n                <div class="form-group">\n                    <label class="control-label" for="path">Database Path</label>\n                    <div class="controls">\n                        <input type="text" placeholder="/path/to/your/db/file.sqlite" class="form-control input-xlarge" required="required" ng-model="doctrineAdapter.params.path">\n                        <p class="help-block">Name of database or database file</p>\n                    </div>\n                </div>\n\n            </div>\n            <div ng-switch-default>\n\n                <div class="form-group">\n                    <label class="control-label" for="database">Database</label>\n                    <div class="controls">\n                        <input type="text" placeholder="database name" class="form-control input-xlarge" required="required" ng-model="doctrineAdapter.params.dbname">\n                        <p class="help-block">Name of database or database file</p>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="username">Username</label>\n                    <div class="controls">\n                        <input type="text" placeholder="(optional) Username" class="form-control input-xlarge" ng-model="doctrineAdapter.params.user">\n                        <p class="help-block">Username with which to connect</p>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="password">Password</label>\n                    <div class="controls">\n                        <input type="password" placeholder="(Optional) Password" class="form-control input-xlarge" ng-model="doctrineAdapter.params.password">\n                        <p class="help-block">Password with which to connect</p>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="hostname">Hostname</label>\n                    <div class="controls">\n                        <input type="text" placeholder="(Optional) Hostname" class="form-control input-xlarge" ng-model="doctrineAdapter.params.host">\n                        <p class="help-block">Hostname to which to connect</p>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="control-label" for="port">Port</label>\n                    <div class="controls">\n                        <input type="text" placeholder="(Optional) Port" class="form-control input-xlarge" ng-model="doctrineAdapter.params.port">\n                        <p class="help-block">Port to which to connect</p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n    </fieldset>\n\n    <div class="btn-group pull-right">\n        <a ng-click="resetForm()" class="btn btn-sm btn-default">Cancel</a>\n        <button type="submit" class="btn btn-sm btn-success">Save</button>\n    </div>\n\n    <div class="clearfix"></div>\n</form>')}]),angular.module("html/settings/doctrine-adapters/index.html",[]).run(["$templateCache",function(a){a.put("html/settings/doctrine-adapters/index.html",'<div class="ag panel-group tooltip-api">\n    <ag-collapse class="panel-info"\n            ng-repeat="doctrineAdapter in doctrineAdapters"\n            active="{{ activeAdapter == doctrineAdapter.name }}"\n            name="{{ doctrineAdapter.adapter_name }}"\n            searchParam="adapter"\n            conditionals="{{ {edit: inEdit, delete: false} }}">\n        <collapse-header>\n            <h4 class="panel-title">\n                <i class="glyphicon glyphicon-book"></i>\n                {{ doctrineAdapter.adapter_name }}\n                <div class="btn-group pull-right">\n                    <button\n                        type="button" title="Cancel" class="btn btn-sm btn-default"\n                        collapse-button criteria="{delete: false, edit: true}"\n                        ui-sref="ag.settings.doctrine-adapters({ edit: null})"\n                        ui-sref-options="{notify: false}">\n                        Cancel\n                    </button>\n\n                    <button\n                        type="button" class="btn btn-sm btn-success" title="Edit adapter"\n                        collapse-button criteria="{delete: false, edit: false}"\n                        ui-sref="ag.settings.doctrine-adapters({ edit: true})"\n                        ui-sref-options="{notify: false}">\n                        <i class="glyphicon glyphicon-edit"></i>\n                    </button>\n\n                    <button\n                        type="button" class="btn btn-sm btn-danger" title="Remove adapter"\n                        collapse-flag flags="{delete: true}"\n                        collapse-button criteria="{delete: false}">\n                        <i class="glyphicon glyphicon-trash"></i>\n                    </button>\n                </div>\n            </h4>\n\n            <div class="clearfix"></div>\n\n            <span collapse-show\n                 criteria="{delete: false}"\n                 default-template="\'html/empty-content.html\'"\n                 toggled-template="\'html/settings/doctrine-adapters/remove.html\'"></span>\n        </collapse-header>\n\n        <collapse-body>\n            <div\n                collapse-show\n                criteria="{edit: false}"\n                default-template="\'html/settings/doctrine-adapters/view.html\'"\n                toggled-template="\'html/settings/doctrine-adapters/edit.html\'">\n            </div>\n        </collapse-body>\n    </ag-collapse>\n</div>')
}]),angular.module("html/settings/doctrine-adapters/remove.html",[]).run(["$templateCache",function(a){a.put("html/settings/doctrine-adapters/remove.html",'<div class="panel panel-danger">\n    <div class="panel-heading"><h4 class="panel-title">Reset Doctrine Adapter</h4></div>\n    <div class="panel-body">\n        <form ng-submit="removeDoctrineAdapter(doctrineAdapter.adapter_name)">\n            <p>Are you sure you want to reset the Adapter</p>\n\n            <div class="btn-group pull-right">\n                <button collapse-flag flags="{delete: false}" type="button" class="btn btn-sm btn-default">Cancel</button>\n                <button type="submit" class="btn btn-sm btn-danger">Yes</button>\n            </div>\n\n            <div class="clearfix"></div>\n        </form>\n    </div>\n</div>\n')}]),angular.module("html/settings/doctrine-adapters/view.html",[]).run(["$templateCache",function(a){a.put("html/settings/doctrine-adapters/view.html",'<table class="table table-striped">\n    <tr ng-show="doctrineAdapter.driverClass">\n        <td>Driver</td>\n        <td>{{ doctrineAdapter.driverClass }}</td>\n    </tr>\n\n    <tr ng-show="doctrineAdapter.params.dbname">\n        <td>Database</td>\n        <td>{{ doctrineAdapter.params.dbname }}</td>\n    </tr>\n\n    <tr ng-show="doctrineAdapter.params.path">\n        <td>Database Path</td>\n        <td>{{ doctrineAdapter.params.path }}</td>\n    </tr>\n\n    <tr ng-show="doctrineAdapter.params.user">\n        <td>Username</td>\n        <td>{{ doctrineAdapter.params.user }}</td>\n    </tr>\n\n    <tr ng-show="doctrineAdapter.params.password">\n        <td>Password</td>\n        <td>{{ doctrineAdapter.params.password }}</td>\n    </tr>\n\n    <tr ng-show="doctrineAdapter.params.host">\n        <td>Hostname</td>\n        <td>{{ doctrineAdapter.params.host }}</td>\n    </tr>\n\n    <tr ng-show="doctrineAdapter.params.port">\n        <td>Port</td>\n        <td>{{ doctrineAdapter.params.port }}</td>\n    </tr>\n\n    <tr ng-show="doctrineAdapter.dbname">\n        <td>Database</td>\n        <td>{{ doctrineAdapter.dbname }}</td>\n    </tr>\n\n    <tr ng-show="doctrineAdapter.connectionString">\n        <td>Connection String</td>\n        <td>{{ doctrineAdapter.connectionString }}</td>\n    </tr>\n\n    <tr ng-show="doctrineAdapter.user">\n        <td>Username</td>\n        <td>{{ doctrineAdapter.user }}</td>\n    </tr>\n\n    <tr ng-show="doctrineAdapter.password">\n        <td>Password</td>\n        <td>{{ doctrineAdapter.password }}</td>\n    </tr>\n\n    <tr ng-show="doctrineAdapter.host">\n        <td>Hostname</td>\n        <td>{{ doctrineAdapter.host }}</td>\n    </tr>\n\n    <tr ng-show="doctrineAdapter.port">\n        <td>Port</td>\n        <td>{{ doctrineAdapter.port }}</td>\n    </tr>\n</table>\n')}]),angular.module("html/settings/sidebar.html",[]).run(["$templateCache",function(a){a.put("html/settings/sidebar.html",'<ul class="nav nav-pills ag-admin-nav-pills nav-stacked">\n    <li ng-class="{active: (\'ag.settings.overview\' | isState)}"><a ui-sref="ag.settings.overview">General Information</a></li>\n    <li ng-class="{active: (\'ag.settings.authentication\' | isState)}"><a ui-sref="ag.settings.authentication">Authentication</a></li>\n    <li ng-class="{active: (\'ag.settings.content-negotiation\' | isState)}"><a ui-sref="ag.settings.content-negotiation">Content Negotiation</a></li>\n    <li ng-class="{active: (\'ag.settings.db-adapters\' | isState)}"><a ui-sref="ag.settings.db-adapters">Database Adapters</a></li>\n    <li ng-class="{active: (\'ag.settings.doctrine-adapters\' | isState)}"><a ui-sref="ag.settings.doctrine-adapters">Doctrine Adapters</a></li>\n</ul>\n\n')}]),angular.module("html/view-navigation.html",[]).run(["$templateCache",function(a){a.put("html/view-navigation.html",'<aside class="ag-sidebar" role="complementary">\n  <div ng-show="!$root.stateParams.apiName">\n    <ul class="nav ag-sidenav">\n      <li ng-class="{active: ($root.stateParams.section == \'general-information\')}"><a ng-href="/#/global/information">General Information</a></li>\n      <li ng-class="{active: ($root.stateParams.section == \'db-adapters\')}"><a ng-href="/#/global/db-adapters">Database Adapters</a></li>\n    </ul>\n  </div>\n  <div ng-show="$root.stateParams.apiName">\n    <ul class="nav ag-sidenav">\n      <li ng-class="{active: ($root.stateParams.section == \'info\')}"><a ng-href="/#/api/{{ $root.stateParams.apiName }}/overview">General Information</a></li>\n      <li ng-class="{active: ($root.stateParams.section == \'authorization\')}"><a ng-href="/#/api/{{ $root.stateParams.apiName }}/authorization">Authorization</a></li>\n      <li ng-class="{active: ($root.stateParams.section == \'rest-services\')}"><a ng-href="/#/api/{{ $root.stateParams.apiName }}/rest-services">REST Services</a></li>\n      <li ng-class="{active: ($root.stateParams.section == \'rpc-services\')}"><a ng-href="/#/api/{{ $root.stateParams.apiName }}/rpc-services">RPC Services</a></li>\n    </ul>\n  </div>\n</aside>\n')}]);